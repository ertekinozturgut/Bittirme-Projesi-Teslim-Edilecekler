//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


namespace RaspberryPiV3
{
    public partial class App : global::Windows.UI.Xaml.Markup.IXamlMetadataProvider
    {
        private global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMetaDataProvider __appProvider;
        private global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMetaDataProvider _AppProvider
        {
            get
            {
                if (__appProvider == null)
                {
                    __appProvider = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMetaDataProvider();
                }
                return __appProvider;
            }
        }

        /// <summary>
        /// GetXamlType(Type)
        /// </summary>
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(global::System.Type type)
        {
            return _AppProvider.GetXamlType(type);
        }

        /// <summary>
        /// GetXamlType(String)
        /// </summary>
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(string fullName)
        {
            return _AppProvider.GetXamlType(fullName);
        }

        /// <summary>
        /// GetXmlnsDefinitions()
        /// </summary>
        public global::Windows.UI.Xaml.Markup.XmlnsDefinition[] GetXmlnsDefinitions()
        {
            return _AppProvider.GetXmlnsDefinitions();
        }
    }
}

namespace RaspberryPiV3.RaspberryPiV3_XamlTypeInfo
{
    /// <summary>
    /// Main class for providing metadata for the app or library
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.16.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed class XamlMetaDataProvider : global::Windows.UI.Xaml.Markup.IXamlMetadataProvider
    {
        private global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlTypeInfoProvider _provider = null;

        private global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlTypeInfoProvider Provider
        {
            get
            {
                if (_provider == null)
                {
                    _provider = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlTypeInfoProvider();
                }
                return _provider;
            }
        }

        /// <summary>
        /// GetXamlType(Type)
        /// </summary>
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(global::System.Type type)
        {
            return Provider.GetXamlTypeByType(type);
        }

        /// <summary>
        /// GetXamlType(String)
        /// </summary>
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(string fullName)
        {
            return Provider.GetXamlTypeByName(fullName);
        }

        /// <summary>
        /// GetXmlnsDefinitions()
        /// </summary>
        public global::Windows.UI.Xaml.Markup.XmlnsDefinition[] GetXmlnsDefinitions()
        {
            return new global::Windows.UI.Xaml.Markup.XmlnsDefinition[0];
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.16.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal partial class XamlTypeInfoProvider
    {
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlTypeByType(global::System.Type type)
        {
            global::Windows.UI.Xaml.Markup.IXamlType xamlType;
            if (_xamlTypeCacheByType.TryGetValue(type, out xamlType))
            {
                return xamlType;
            }
            int typeIndex = LookupTypeIndexByType(type);
            if(typeIndex != -1)
            {
                xamlType = CreateXamlType(typeIndex);
            }
            var userXamlType = xamlType as global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType;
            if(xamlType == null || (userXamlType != null && userXamlType.IsReturnTypeStub && !userXamlType.IsLocalType))
            {
                global::Windows.UI.Xaml.Markup.IXamlType libXamlType = CheckOtherMetadataProvidersForType(type);
                if (libXamlType != null)
                {
                    if(libXamlType.IsConstructible || xamlType == null)
                    {
                        xamlType = libXamlType;
                    }
                }
            }
            if (xamlType != null)
            {
                _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
            }
            return xamlType;
        }

        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlTypeByName(string typeName)
        {
            if (string.IsNullOrEmpty(typeName))
            {
                return null;
            }
            global::Windows.UI.Xaml.Markup.IXamlType xamlType;
            if (_xamlTypeCacheByName.TryGetValue(typeName, out xamlType))
            {
                return xamlType;
            }
            int typeIndex = LookupTypeIndexByName(typeName);
            if(typeIndex != -1)
            {
                xamlType = CreateXamlType(typeIndex);
            }
            var userXamlType = xamlType as global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType;
            if(xamlType == null || (userXamlType != null && userXamlType.IsReturnTypeStub && !userXamlType.IsLocalType))
            {
                global::Windows.UI.Xaml.Markup.IXamlType libXamlType = CheckOtherMetadataProvidersForName(typeName);
                if (libXamlType != null)
                {
                    if(libXamlType.IsConstructible || xamlType == null)
                    {
                        xamlType = libXamlType;
                    }
                }
            }
            if (xamlType != null)
            {
                _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
            }
            return xamlType;
        }

        public global::Windows.UI.Xaml.Markup.IXamlMember GetMemberByLongName(string longMemberName)
        {
            if (string.IsNullOrEmpty(longMemberName))
            {
                return null;
            }
            global::Windows.UI.Xaml.Markup.IXamlMember xamlMember;
            if (_xamlMembers.TryGetValue(longMemberName, out xamlMember))
            {
                return xamlMember;
            }
            xamlMember = CreateXamlMember(longMemberName);
            if (xamlMember != null)
            {
                _xamlMembers.Add(longMemberName, xamlMember);
            }
            return xamlMember;
        }

        global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByName = new global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByType = new global::System.Collections.Generic.Dictionary<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlMember>
                _xamlMembers = new global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlMember>();

        string[] _typeNameTable = null;
        global::System.Type[] _typeTable = null;

        private void InitTypeTables()
        {
            _typeNameTable = new string[421];
            _typeNameTable[0] = "RaspberryPiV3.AnaSayfa";
            _typeNameTable[1] = "Windows.UI.Xaml.Controls.Page";
            _typeNameTable[2] = "Windows.UI.Xaml.Controls.UserControl";
            _typeNameTable[3] = "Telerik.UI.Xaml.Controls.Grid.RadDataGrid";
            _typeNameTable[4] = "Telerik.UI.Xaml.Controls.RadControl";
            _typeNameTable[5] = "Windows.UI.Xaml.Controls.Control";
            _typeNameTable[6] = "Object";
            _typeNameTable[7] = "Telerik.UI.Xaml.Controls.Grid.DataGridColumnCollection";
            _typeNameTable[8] = "System.Collections.ObjectModel.ObservableCollection`1<Telerik.UI.Xaml.Controls.Grid.DataGridColumn>";
            _typeNameTable[9] = "System.Collections.ObjectModel.Collection`1<Telerik.UI.Xaml.Controls.Grid.DataGridColumn>";
            _typeNameTable[10] = "Telerik.UI.Xaml.Controls.Grid.DataGridColumn";
            _typeNameTable[11] = "Telerik.UI.Xaml.Controls.Primitives.RadDependencyObject";
            _typeNameTable[12] = "Windows.UI.Xaml.DependencyObject";
            _typeNameTable[13] = "Boolean";
            _typeNameTable[14] = "Windows.UI.Xaml.Style";
            _typeNameTable[15] = "Windows.UI.Xaml.Controls.StyleSelector";
            _typeNameTable[16] = "String";
            _typeNameTable[17] = "Telerik.UI.Xaml.Controls.Grid.DataGridColumnSizeMode";
            _typeNameTable[18] = "System.Enum";
            _typeNameTable[19] = "System.ValueType";
            _typeNameTable[20] = "Double";
            _typeNameTable[21] = "Telerik.UI.Xaml.Controls.Grid.SortDirection";
            _typeNameTable[22] = "Windows.UI.Xaml.DataTemplate";
            _typeNameTable[23] = "Int32";
            _typeNameTable[24] = "Telerik.UI.Xaml.Controls.Grid.Primitives.ColumnDataOperationsMode";
            _typeNameTable[25] = "Telerik.UI.Xaml.Controls.Grid.DataGridUserFilterMode";
            _typeNameTable[26] = "Telerik.UI.Xaml.Controls.Grid.DataGridUserColumnReorderMode";
            _typeNameTable[27] = "Telerik.UI.Xaml.Controls.Grid.DataGridColumnResizeHandleDisplayMode";
            _typeNameTable[28] = "Telerik.UI.Xaml.Controls.Grid.DataGridUserSortMode";
            _typeNameTable[29] = "Telerik.UI.Xaml.Controls.Grid.DataGridUserGroupMode";
            _typeNameTable[30] = "Telerik.UI.Xaml.Controls.Grid.DataGridGroupHeaderDisplayMode";
            _typeNameTable[31] = "Windows.UI.Xaml.Controls.DataTemplateSelector";
            _typeNameTable[32] = "Telerik.UI.Xaml.Controls.Primitives.CommandCollection`1<Telerik.UI.Xaml.Controls.Grid.RadDataGrid>";
            _typeNameTable[33] = "Telerik.UI.Xaml.Controls.Primitives.AttachableObjectCollection`2<Telerik.UI.Xaml.Controls.Grid.RadDataGrid, Telerik.UI.Xaml.Controls.Primitives.ControlCommandBase`1<Telerik.UI.Xaml.Controls.Grid.RadDataGrid>>";
            _typeNameTable[34] = "System.Collections.ObjectModel.ObservableCollection`1<Telerik.UI.Xaml.Controls.Primitives.ControlCommandBase`1<Telerik.UI.Xaml.Controls.Grid.RadDataGrid>>";
            _typeNameTable[35] = "System.Collections.ObjectModel.Collection`1<Telerik.UI.Xaml.Controls.Primitives.ControlCommandBase`1<Telerik.UI.Xaml.Controls.Grid.RadDataGrid>>";
            _typeNameTable[36] = "Telerik.UI.Xaml.Controls.Primitives.ControlCommandBase`1<Telerik.UI.Xaml.Controls.Grid.RadDataGrid>";
            _typeNameTable[37] = "Telerik.UI.Xaml.Controls.Primitives.AttachableObject`1<Telerik.UI.Xaml.Controls.Grid.RadDataGrid>";
            _typeNameTable[38] = "Telerik.UI.Xaml.Controls.Grid.Commands.CommandService";
            _typeNameTable[39] = "Telerik.UI.Xaml.Controls.Primitives.CommandServiceBase`1<Telerik.UI.Xaml.Controls.Grid.RadDataGrid>";
            _typeNameTable[40] = "Telerik.UI.Xaml.Controls.Primitives.ServiceBase`1<Telerik.UI.Xaml.Controls.Grid.RadDataGrid>";
            _typeNameTable[41] = "Telerik.UI.Xaml.Controls.Grid.DataGridDragBehavior";
            _typeNameTable[42] = "Telerik.UI.Xaml.Controls.Grid.GroupPanelPosition";
            _typeNameTable[43] = "Telerik.Core.Data.BatchLoadingMode";
            _typeNameTable[44] = "Telerik.Data.Core.SortDescriptorCollection";
            _typeNameTable[45] = "Telerik.Data.Core.DataDescriptorCollection`1<Telerik.Data.Core.SortDescriptorBase>";
            _typeNameTable[46] = "System.Collections.ObjectModel.ObservableCollection`1<Telerik.Data.Core.SortDescriptorBase>";
            _typeNameTable[47] = "System.Collections.ObjectModel.Collection`1<Telerik.Data.Core.SortDescriptorBase>";
            _typeNameTable[48] = "Telerik.Data.Core.SortDescriptorBase";
            _typeNameTable[49] = "Telerik.Data.Core.OrderedDescriptor";
            _typeNameTable[50] = "Telerik.Data.Core.DataDescriptor";
            _typeNameTable[51] = "Telerik.Core.ViewModelBase";
            _typeNameTable[52] = "System.Collections.IComparer";
            _typeNameTable[53] = "Telerik.Data.Core.SortOrder";
            _typeNameTable[54] = "Telerik.Data.Core.GroupDescriptorCollection";
            _typeNameTable[55] = "Telerik.Data.Core.DataDescriptorCollection`1<Telerik.Data.Core.GroupDescriptorBase>";
            _typeNameTable[56] = "System.Collections.ObjectModel.ObservableCollection`1<Telerik.Data.Core.GroupDescriptorBase>";
            _typeNameTable[57] = "System.Collections.ObjectModel.Collection`1<Telerik.Data.Core.GroupDescriptorBase>";
            _typeNameTable[58] = "Telerik.Data.Core.GroupDescriptorBase";
            _typeNameTable[59] = "Telerik.Data.Core.FilterDescriptorCollection";
            _typeNameTable[60] = "Telerik.Data.Core.DataDescriptorCollection`1<Telerik.Data.Core.FilterDescriptorBase>";
            _typeNameTable[61] = "System.Collections.ObjectModel.ObservableCollection`1<Telerik.Data.Core.FilterDescriptorBase>";
            _typeNameTable[62] = "System.Collections.ObjectModel.Collection`1<Telerik.Data.Core.FilterDescriptorBase>";
            _typeNameTable[63] = "Telerik.Data.Core.FilterDescriptorBase";
            _typeNameTable[64] = "Telerik.Data.Core.AggregateDescriptorCollection";
            _typeNameTable[65] = "Telerik.Data.Core.DataDescriptorCollection`1<Telerik.Data.Core.AggregateDescriptorBase>";
            _typeNameTable[66] = "System.Collections.ObjectModel.ObservableCollection`1<Telerik.Data.Core.AggregateDescriptorBase>";
            _typeNameTable[67] = "System.Collections.ObjectModel.Collection`1<Telerik.Data.Core.AggregateDescriptorBase>";
            _typeNameTable[68] = "Telerik.Data.Core.AggregateDescriptorBase";
            _typeNameTable[69] = "Windows.UI.Xaml.Media.Brush";
            _typeNameTable[70] = "Telerik.UI.Xaml.Controls.Primitives.ObjectSelector`1<Windows.UI.Xaml.Media.Brush>";
            _typeNameTable[71] = "Telerik.UI.Xaml.Controls.Primitives.GridLinesVisibility";
            _typeNameTable[72] = "Telerik.UI.Xaml.Controls.Grid.DataGridUserEditMode";
            _typeNameTable[73] = "Telerik.UI.Xaml.Controls.Grid.IGridExternalEditor";
            _typeNameTable[74] = "Telerik.UI.Xaml.Controls.Grid.HitTestService";
            _typeNameTable[75] = "Telerik.UI.Xaml.Controls.Grid.DataGridRowDetailsMode";
            _typeNameTable[76] = "Telerik.UI.Xaml.Controls.Grid.DataGridSelectionUnit";
            _typeNameTable[77] = "Telerik.UI.Xaml.Controls.Grid.DataGridSelectionMode";
            _typeNameTable[78] = "System.Collections.ObjectModel.ObservableCollection`1<Object>";
            _typeNameTable[79] = "System.Collections.ObjectModel.Collection`1<Object>";
            _typeNameTable[80] = "Telerik.UI.Xaml.Controls.Grid.DataGridTextColumn";
            _typeNameTable[81] = "Telerik.UI.Xaml.Controls.Grid.DataGridTypedColumn";
            _typeNameTable[82] = "RaspberryPiV3.Bolgeler";
            _typeNameTable[83] = "Telerik.UI.Xaml.Controls.Grid.DataGridNumericalColumn";
            _typeNameTable[84] = "Telerik.UI.Xaml.Controls.Grid.DataGridDateColumn";
            _typeNameTable[85] = "RaspberryPiV3.DepoDurumu";
            _typeNameTable[86] = "RaspberryPiV3.Depolar";
            _typeNameTable[87] = "RaspberryPiV3.Iletisim";
            _typeNameTable[88] = "RaspberryPiV3.Kullanicikayit";
            _typeNameTable[89] = "RaspberryPiV3.Kullanicilar";
            _typeNameTable[90] = "RaspberryPiV3.MainPage";
            _typeNameTable[91] = "Telerik.UI.Xaml.Controls.Input.RadDatePicker";
            _typeNameTable[92] = "Telerik.UI.Xaml.Controls.Input.DateTimePicker";
            _typeNameTable[93] = "Telerik.UI.Xaml.Controls.RadHeaderedControl";
            _typeNameTable[94] = "Telerik.UI.Xaml.Controls.Input.StepBehavior";
            _typeNameTable[95] = "Telerik.UI.Xaml.Controls.Input.DateTimePickerDisplayMode";
            _typeNameTable[96] = "System.DateTimeOffset";
            _typeNameTable[97] = "System.DateTime";
            _typeNameTable[98] = "System.Nullable`1<System.DateTime>";
            _typeNameTable[99] = "RaspberryPiV3.Urunler";
            _typeNameTable[100] = "DevExpress.UI.Xaml.TitleSettings";
            _typeNameTable[101] = "Windows.UI.Xaml.Media.SolidColorBrush";
            _typeNameTable[102] = "DevExpress.UI.Xaml.Controls.PdfOverlayBarLocation";
            _typeNameTable[103] = "DevExpress.Mvvm.BindableBase";
            _typeNameTable[104] = "Windows.UI.Xaml.Controls.Primitives.EdgeTransitionLocation";
            _typeNameTable[105] = "DevExpress.UI.Xaml.Controls.SimpleSettingsBarOverlaySettings";
            _typeNameTable[106] = "DevExpress.UI.Xaml.Controls.PdfOverlaySettingsBase";
            _typeNameTable[107] = "DevExpress.UI.Xaml.Controls.SettingsBarItemCollection";
            _typeNameTable[108] = "DevExpress.Core.Native.ObservableCollectionView`1<DevExpress.UI.Xaml.Controls.ISettingsBarItem>";
            _typeNameTable[109] = "DevExpress.UI.Xaml.Controls.ISettingsBarItem";
            _typeNameTable[110] = "DevExpress.UI.Xaml.Controls.IPdfOverlayBarLocation";
            _typeNameTable[111] = "TimeSpan";
            _typeNameTable[112] = "DevExpress.UI.Xaml.Controls.PdfViewerControl";
            _typeNameTable[113] = "DevExpress.UI.Xaml.Internal.ControlEx";
            _typeNameTable[114] = "System.Uri";
            _typeNameTable[115] = "DevExpress.UI.Xaml.Controls.PdfViewMode";
            _typeNameTable[116] = "Windows.Graphics.Printing.IPrintDocumentSource";
            _typeNameTable[117] = "Windows.UI.Xaml.Thickness";
            _typeNameTable[118] = "DevExpress.UI.Xaml.Controls.PdfZoomMode";
            _typeNameTable[119] = "Single";
            _typeNameTable[120] = "DevExpress.UI.Xaml.Controls.PdfDocumentContainer";
            _typeNameTable[121] = "Windows.UI.Xaml.CornerRadius";
            _typeNameTable[122] = "System.Windows.Input.ICommand";
            _typeNameTable[123] = "DevExpress.UI.Xaml.Controls.PdfViewerErrorWrapper";
            _typeNameTable[124] = "DevExpress.UI.Xaml.Controls.PdfDocumentLoadingPolicy";
            _typeNameTable[125] = "Windows.Foundation.Size";
            _typeNameTable[126] = "DevExpress.UI.Xaml.Controls.RadialContextMenuCommandBase";
            _typeNameTable[127] = "DevExpress.Core.Native.DXControl";
            _typeNameTable[128] = "Windows.Foundation.Point";
            _typeNameTable[129] = "DevExpress.UI.Xaml.Controls.Internal.ViewInfo";
            _typeNameTable[130] = "DevExpress.UI.Xaml.Controls.RadialMenuControlBase";
            _typeNameTable[131] = "Windows.UI.Xaml.Controls.ContentControl";
            _typeNameTable[132] = "DevExpress.UI.Xaml.Controls.Internal.Pdf.PdfDocumentState";
            _typeNameTable[133] = "DevExpress.Pdf.Native.PdfDocumentStateBase";
            _typeNameTable[134] = "DevExpress.Pdf.Native.PdfDisposableObject";
            _typeNameTable[135] = "DevExpress.Pdf.PdfDocument";
            _typeNameTable[136] = "DevExpress.Pdf.Native.IFontStorage";
            _typeNameTable[137] = "DevExpress.Pdf.Native.PdfImageDataStorage";
            _typeNameTable[138] = "DevExpress.Pdf.Native.PdfCache`2<DevExpress.Pdf.PdfImage, DevExpress.Pdf.Native.PdfImageData>";
            _typeNameTable[139] = "DevExpress.Pdf.Native.PdfSelectionState";
            _typeNameTable[140] = "DevExpress.Pdf.Native.PdfOutlineTreeListItemCollection";
            _typeNameTable[141] = "System.Collections.ObjectModel.ObservableCollection`1<DevExpress.Pdf.Native.PdfOutlineTreeListItem>";
            _typeNameTable[142] = "System.Collections.ObjectModel.Collection`1<DevExpress.Pdf.Native.PdfOutlineTreeListItem>";
            _typeNameTable[143] = "DevExpress.Pdf.Native.PdfOutlineTreeListItem";
            _typeNameTable[144] = "DevExpress.Pdf.PdfColor";
            _typeNameTable[145] = "System.Collections.Generic.IList`1<DevExpress.Pdf.Native.PdfFileAttachmentListItem>";
            _typeNameTable[146] = "DevExpress.Pdf.Native.PdfFileAttachmentListItem";
            _typeNameTable[147] = "DevExpress.Pdf.PdfFileAttachment";
            _typeNameTable[148] = "Byte[]";
            _typeNameTable[149] = "System.Array";
            _typeNameTable[150] = "Byte";
            _typeNameTable[151] = "System.Nullable`1<System.DateTimeOffset>";
            _typeNameTable[152] = "DevExpress.Pdf.PdfFormData";
            _typeNameTable[153] = "DevExpress.UI.Xaml.Controls.Internal.Pdf.PdfTextHighlightViewModel";
            _typeNameTable[154] = "System.Collections.Generic.List`1<DevExpress.UI.Xaml.Controls.IPdfTextSearchResult>";
            _typeNameTable[155] = "DevExpress.UI.Xaml.Controls.IPdfTextSearchResult";
            _typeNameTable[156] = "System.Collections.Generic.IList`1<DevExpress.Pdf.PdfOrientedRectangle>";
            _typeNameTable[157] = "DevExpress.Pdf.PdfOrientedRectangle";
            _typeNameTable[158] = "System.Collections.Generic.IList`1<DevExpress.Pdf.PdfWord>";
            _typeNameTable[159] = "DevExpress.Pdf.PdfWord";
            _typeNameTable[160] = "System.Collections.Generic.IList`1<DevExpress.Pdf.PdfCharacter>";
            _typeNameTable[161] = "DevExpress.Pdf.PdfCharacter";
            _typeNameTable[162] = "DevExpress.Pdf.PdfFont";
            _typeNameTable[163] = "DevExpress.Pdf.Native.PdfObject";
            _typeNameTable[164] = "DevExpress.Pdf.Native.PdfDocumentItem";
            _typeNameTable[165] = "Windows.UI.Xaml.Media.Geometry";
            _typeNameTable[166] = "DevExpress.UI.Xaml.Editors.ColorGroup";
            _typeNameTable[167] = "DevExpress.UI.Xaml.Editors.ColorList";
            _typeNameTable[168] = "System.Collections.ObjectModel.ObservableCollection`1<Windows.UI.Color>";
            _typeNameTable[169] = "System.Collections.ObjectModel.Collection`1<Windows.UI.Color>";
            _typeNameTable[170] = "Windows.UI.Color";
            _typeNameTable[171] = "DevExpress.UI.Xaml.Editors.BrushList";
            _typeNameTable[172] = "DevExpress.Core.Native.ObservableCollectionView`1<Windows.UI.Xaml.Media.SolidColorBrush>";
            _typeNameTable[173] = "DevExpress.UI.Xaml.Editors.ColorEdit";
            _typeNameTable[174] = "DevExpress.UI.Xaml.Editors.ColorGroupsList";
            _typeNameTable[175] = "DevExpress.Core.Native.ObservableCollectionView`1<DevExpress.UI.Xaml.Editors.ColorGroup>";
            _typeNameTable[176] = "DevExpress.Mvvm.DelegateCommand";
            _typeNameTable[177] = "DevExpress.Mvvm.DelegateCommand`1<Object>";
            _typeNameTable[178] = "DevExpress.Mvvm.DelegateCommandBase`1<Object>";
            _typeNameTable[179] = "DevExpress.Mvvm.CommandBase`1<Object>";
            _typeNameTable[180] = "DevExpress.Mvvm.CommandBase";
            _typeNameTable[181] = "DevExpress.UI.Xaml.Editors.ColorPicker";
            _typeNameTable[182] = "DevExpress.UI.Xaml.Editors.ColorModelCollection";
            _typeNameTable[183] = "DevExpress.Core.Native.ObservableCollectionView`1<DevExpress.UI.Xaml.Editors.ColorModelBase>";
            _typeNameTable[184] = "DevExpress.UI.Xaml.Editors.ColorModelBase";
            _typeNameTable[185] = "DevExpress.UI.Xaml.Editors.ColorPickerColorMode";
            _typeNameTable[186] = "DevExpress.UI.Xaml.Editors.HSBColorModel";
            _typeNameTable[187] = "DevExpress.UI.Xaml.Editors.RGBColorModel";
            _typeNameTable[188] = "DevExpress.UI.Xaml.Editors.PopupSettings";
            _typeNameTable[189] = "Windows.UI.Xaml.Controls.ControlTemplate";
            _typeNameTable[190] = "DevExpress.UI.Xaml.Editors.Internal.ColorGalleryItemContainerGenerator";
            _typeNameTable[191] = "DevExpress.UI.Xaml.GalleryItemContainerGenerator";
            _typeNameTable[192] = "DevExpress.UI.Xaml.GalleryItemContainerGeneratorBase";
            _typeNameTable[193] = "Windows.UI.Xaml.FrameworkElement";
            _typeNameTable[194] = "DevExpress.UI.Xaml.Layout.HamburgerMenuFrame";
            _typeNameTable[195] = "DevExpress.UI.Xaml.Layout.Internal.MenuFrameBase`1<DevExpress.UI.Xaml.Layout.HamburgerMenu>";
            _typeNameTable[196] = "DevExpress.UI.Xaml.Layout.DXFrame";
            _typeNameTable[197] = "Windows.UI.Xaml.Controls.Frame";
            _typeNameTable[198] = "DevExpress.UI.Xaml.Layout.HamburgerMenu";
            _typeNameTable[199] = "System.Collections.ObjectModel.ObservableCollection`1<DevExpress.UI.Xaml.Layout.Internal.IHamburgerMenuItem>";
            _typeNameTable[200] = "System.Collections.ObjectModel.Collection`1<DevExpress.UI.Xaml.Layout.Internal.IHamburgerMenuItem>";
            _typeNameTable[201] = "DevExpress.UI.Xaml.Layout.Internal.IHamburgerMenuItem";
            _typeNameTable[202] = "DevExpress.UI.Xaml.Layout.HamburgerMenuNavigationButtonPlacement";
            _typeNameTable[203] = "System.Type";
            _typeNameTable[204] = "DevExpress.UI.Xaml.Layout.TypeProviderBase";
            _typeNameTable[205] = "DevExpress.UI.Xaml.Layout.TileBarFrame";
            _typeNameTable[206] = "DevExpress.UI.Xaml.Layout.Internal.MenuFrameBase`1<DevExpress.UI.Xaml.Layout.TileBar>";
            _typeNameTable[207] = "DevExpress.UI.Xaml.Layout.TileBar";
            _typeNameTable[208] = "DevExpress.UI.Xaml.Layout.VisualElements.veSelector";
            _typeNameTable[209] = "DevExpress.UI.Xaml.Layout.VisualElements.veItemsControl";
            _typeNameTable[210] = "Windows.UI.Xaml.Controls.ItemsControl";
            _typeNameTable[211] = "DevExpress.Core.Dock";
            _typeNameTable[212] = "DevExpress.UI.Xaml.Ribbon.BackstageTabItem";
            _typeNameTable[213] = "DevExpress.UI.Xaml.Ribbon.Internal.RibbonSelectorItemBase";
            _typeNameTable[214] = "DevExpress.UI.Xaml.Ribbon.Internal.RibbonItemBaseEx";
            _typeNameTable[215] = "DevExpress.UI.Xaml.Ribbon.Internal.RibbonItemBase";
            _typeNameTable[216] = "DevExpress.UI.Xaml.Internal.GlyphItemBase";
            _typeNameTable[217] = "DevExpress.UI.Xaml.Internal.PointerItemBase";
            _typeNameTable[218] = "DevExpress.UI.Xaml.Internal.ContentControlEx";
            _typeNameTable[219] = "DevExpress.UI.Xaml.Ribbon.ControlPaneShowMode";
            _typeNameTable[220] = "DevExpress.UI.Xaml.Ribbon.RibbonItemStyle";
            _typeNameTable[221] = "DevExpress.UI.Xaml.Ribbon.CollapsePriority";
            _typeNameTable[222] = "Windows.UI.Xaml.Controls.IconElement";
            _typeNameTable[223] = "Windows.UI.Xaml.Media.Stretch";
            _typeNameTable[224] = "DevExpress.UI.Xaml.IconSizeUnit";
            _typeNameTable[225] = "DevExpress.UI.Xaml.ControlTemplateSelector";
            _typeNameTable[226] = "Windows.UI.Xaml.Controls.ClickMode";
            _typeNameTable[227] = "DevExpress.UI.Xaml.Ribbon.BackstageView";
            _typeNameTable[228] = "DevExpress.UI.Xaml.Ribbon.Internal.RibbonHeaderedContainerBase";
            _typeNameTable[229] = "DevExpress.UI.Xaml.Ribbon.BackstageItemCollection";
            _typeNameTable[230] = "DevExpress.UI.Xaml.Internal.TemplatedCollectionWithOwner`2<DevExpress.UI.Xaml.Ribbon.IBackstageItem, DevExpress.UI.Xaml.Ribbon.BackstageView>";
            _typeNameTable[231] = "DevExpress.UI.Xaml.Internal.TemplatedCollection`1<DevExpress.UI.Xaml.Ribbon.IBackstageItem>";
            _typeNameTable[232] = "DevExpress.UI.Xaml.Internal.TemplatedCollectionBase`1<DevExpress.UI.Xaml.Ribbon.IBackstageItem>";
            _typeNameTable[233] = "DevExpress.Core.Native.ObservableCollectionView`1<DevExpress.UI.Xaml.Ribbon.IBackstageItem>";
            _typeNameTable[234] = "DevExpress.UI.Xaml.Ribbon.IBackstageItem";
            _typeNameTable[235] = "DevExpress.UI.Xaml.Ribbon.IBackstageTabItem";
            _typeNameTable[236] = "Windows.UI.Xaml.UIElement";
            _typeNameTable[237] = "DevExpress.UI.Xaml.Ribbon.BackstageButtonItem";
            _typeNameTable[238] = "DevExpress.UI.Xaml.Ribbon.Internal.RibbonButtonItemBase";
            _typeNameTable[239] = "DevExpress.UI.Xaml.Ribbon.HelpPane";
            _typeNameTable[240] = "DevExpress.UI.Xaml.Ribbon.HelpPaneBase";
            _typeNameTable[241] = "DevExpress.UI.Xaml.Ribbon.RibbonHelpPaneItemCollection";
            _typeNameTable[242] = "DevExpress.UI.Xaml.Ribbon.ToolTipItemCollection`1<DevExpress.UI.Xaml.Ribbon.IRibbonHelpPaneItem>";
            _typeNameTable[243] = "DevExpress.UI.Xaml.Internal.TemplatedCollection`1<DevExpress.UI.Xaml.Ribbon.IRibbonHelpPaneItem>";
            _typeNameTable[244] = "DevExpress.UI.Xaml.Internal.TemplatedCollectionBase`1<DevExpress.UI.Xaml.Ribbon.IRibbonHelpPaneItem>";
            _typeNameTable[245] = "DevExpress.Core.Native.ObservableCollectionView`1<DevExpress.UI.Xaml.Ribbon.IRibbonHelpPaneItem>";
            _typeNameTable[246] = "DevExpress.UI.Xaml.Ribbon.IRibbonHelpPaneItem";
            _typeNameTable[247] = "DevExpress.Mvvm.Native.DeviceFamily";
            _typeNameTable[248] = "DevExpress.UI.Xaml.Ribbon.HelpPaneItemPlacement";
            _typeNameTable[249] = "System.Collections.Generic.IEnumerable`1<DevExpress.UI.Xaml.Ribbon.IHelpPaneItem>";
            _typeNameTable[250] = "DevExpress.UI.Xaml.Ribbon.ToolbarHelpPane";
            _typeNameTable[251] = "DevExpress.UI.Xaml.Ribbon.ToolbarHelpPaneItemCollection";
            _typeNameTable[252] = "DevExpress.UI.Xaml.Ribbon.ToolTipItemCollection`1<DevExpress.UI.Xaml.Ribbon.IToolbarHelpPaneItem>";
            _typeNameTable[253] = "DevExpress.UI.Xaml.Internal.TemplatedCollection`1<DevExpress.UI.Xaml.Ribbon.IToolbarHelpPaneItem>";
            _typeNameTable[254] = "DevExpress.UI.Xaml.Internal.TemplatedCollectionBase`1<DevExpress.UI.Xaml.Ribbon.IToolbarHelpPaneItem>";
            _typeNameTable[255] = "DevExpress.Core.Native.ObservableCollectionView`1<DevExpress.UI.Xaml.Ribbon.IToolbarHelpPaneItem>";
            _typeNameTable[256] = "DevExpress.UI.Xaml.Ribbon.IToolbarHelpPaneItem";
            _typeNameTable[257] = "DevExpress.UI.Xaml.Ribbon.RibbonControl";
            _typeNameTable[258] = "DevExpress.UI.Xaml.Ribbon.RibbonControlBase";
            _typeNameTable[259] = "DevExpress.UI.Xaml.Ribbon.RibbonTabCollection";
            _typeNameTable[260] = "DevExpress.UI.Xaml.Internal.TemplatedCollectionWithOwner`2<DevExpress.UI.Xaml.Ribbon.RibbonTab, DevExpress.UI.Xaml.Ribbon.RibbonControlBase>";
            _typeNameTable[261] = "DevExpress.UI.Xaml.Internal.TemplatedCollection`1<DevExpress.UI.Xaml.Ribbon.RibbonTab>";
            _typeNameTable[262] = "DevExpress.UI.Xaml.Internal.TemplatedCollectionBase`1<DevExpress.UI.Xaml.Ribbon.RibbonTab>";
            _typeNameTable[263] = "DevExpress.Core.Native.ObservableCollectionView`1<DevExpress.UI.Xaml.Ribbon.RibbonTab>";
            _typeNameTable[264] = "DevExpress.UI.Xaml.Ribbon.RibbonTab";
            _typeNameTable[265] = "DevExpress.UI.Xaml.Ribbon.RibbonTabBase";
            _typeNameTable[266] = "DevExpress.UI.Xaml.Ribbon.RibbonGroupCollection";
            _typeNameTable[267] = "DevExpress.UI.Xaml.Internal.TemplatedCollection`1<DevExpress.UI.Xaml.Ribbon.RibbonGroup>";
            _typeNameTable[268] = "DevExpress.UI.Xaml.Internal.TemplatedCollectionBase`1<DevExpress.UI.Xaml.Ribbon.RibbonGroup>";
            _typeNameTable[269] = "DevExpress.Core.Native.ObservableCollectionView`1<DevExpress.UI.Xaml.Ribbon.RibbonGroup>";
            _typeNameTable[270] = "DevExpress.UI.Xaml.Ribbon.RibbonGroup";
            _typeNameTable[271] = "DevExpress.UI.Xaml.Ribbon.RibbonGroupBase";
            _typeNameTable[272] = "DevExpress.UI.Xaml.Ribbon.Internal.RibbonGroupPanelBase";
            _typeNameTable[273] = "DevExpress.UI.Xaml.Ribbon.Internal.IndependentGroupPanelBase";
            _typeNameTable[274] = "DevExpress.UI.Xaml.Internal.ItemsPanelBase`1<DevExpress.UI.Xaml.Ribbon.IRibbonItemBase>";
            _typeNameTable[275] = "Windows.UI.Xaml.Controls.Panel";
            _typeNameTable[276] = "DevExpress.UI.Xaml.Ribbon.RibbonItemCollection";
            _typeNameTable[277] = "DevExpress.UI.Xaml.Ribbon.ToolTipItemCollection`1<DevExpress.UI.Xaml.Ribbon.IRibbonItem>";
            _typeNameTable[278] = "DevExpress.UI.Xaml.Internal.TemplatedCollection`1<DevExpress.UI.Xaml.Ribbon.IRibbonItem>";
            _typeNameTable[279] = "DevExpress.UI.Xaml.Internal.TemplatedCollectionBase`1<DevExpress.UI.Xaml.Ribbon.IRibbonItem>";
            _typeNameTable[280] = "DevExpress.Core.Native.ObservableCollectionView`1<DevExpress.UI.Xaml.Ribbon.IRibbonItem>";
            _typeNameTable[281] = "DevExpress.UI.Xaml.Ribbon.IRibbonItem";
            _typeNameTable[282] = "DevExpress.UI.Xaml.Ribbon.RibbonItemBaseCollection";
            _typeNameTable[283] = "DevExpress.Core.Native.ObservableCollectionView`1<DevExpress.UI.Xaml.Ribbon.IRibbonItemBase>";
            _typeNameTable[284] = "DevExpress.UI.Xaml.Ribbon.IRibbonItemBase";
            _typeNameTable[285] = "DevExpress.UI.Xaml.Ribbon.Internal.IFlyoutCalculator";
            _typeNameTable[286] = "DevExpress.UI.Xaml.Ribbon.RibbonViewMode";
            _typeNameTable[287] = "DevExpress.UI.Xaml.Ribbon.RibbonState";
            _typeNameTable[288] = "DevExpress.UI.Xaml.Ribbon.RibbonColorEditBase";
            _typeNameTable[289] = "DevExpress.UI.Xaml.Ribbon.RibbonSplitItemBase";
            _typeNameTable[290] = "DevExpress.UI.Xaml.Ribbon.Internal.RibbonMenuItemBase";
            _typeNameTable[291] = "DevExpress.UI.Xaml.FlyoutSettingsBase";
            _typeNameTable[292] = "DevExpress.UI.Xaml.Ribbon.RibbonFontEditBase";
            _typeNameTable[293] = "DevExpress.UI.Xaml.Editors.FontEdit";
            _typeNameTable[294] = "Windows.UI.Xaml.Media.FontFamily";
            _typeNameTable[295] = "Windows.UI.Xaml.Data.ICollectionView";
            _typeNameTable[296] = "System.Collections.Generic.IEnumerable`1<Double>";
            _typeNameTable[297] = "DevExpress.UI.Xaml.Ribbon.RibbonMenuButton";
            _typeNameTable[298] = "DevExpress.UI.Xaml.Ribbon.Internal.RibbonMenuButtonBase`1<DevExpress.UI.Xaml.Ribbon.IRibbonItem>";
            _typeNameTable[299] = "DevExpress.UI.Xaml.Ribbon.Internal.RibbonMenuButtonBase";
            _typeNameTable[300] = "System.Collections.Generic.IEnumerable`1<DevExpress.UI.Xaml.Ribbon.IRibbonItem>";
            _typeNameTable[301] = "DevExpress.UI.Xaml.Ribbon.ToolbarMenuButton";
            _typeNameTable[302] = "DevExpress.UI.Xaml.Ribbon.Internal.RibbonMenuButtonBase`1<DevExpress.UI.Xaml.Ribbon.IToolbarItem>";
            _typeNameTable[303] = "DevExpress.UI.Xaml.Ribbon.ToolbarItemCollection";
            _typeNameTable[304] = "DevExpress.UI.Xaml.Ribbon.ToolTipItemCollection`1<DevExpress.UI.Xaml.Ribbon.IToolbarItem>";
            _typeNameTable[305] = "DevExpress.UI.Xaml.Internal.TemplatedCollection`1<DevExpress.UI.Xaml.Ribbon.IToolbarItem>";
            _typeNameTable[306] = "DevExpress.UI.Xaml.Internal.TemplatedCollectionBase`1<DevExpress.UI.Xaml.Ribbon.IToolbarItem>";
            _typeNameTable[307] = "DevExpress.Core.Native.ObservableCollectionView`1<DevExpress.UI.Xaml.Ribbon.IToolbarItem>";
            _typeNameTable[308] = "DevExpress.UI.Xaml.Ribbon.IToolbarItem";
            _typeNameTable[309] = "System.Collections.Generic.IEnumerable`1<DevExpress.UI.Xaml.Ribbon.IToolbarItem>";
            _typeNameTable[310] = "DevExpress.UI.Xaml.Ribbon.ContextToolbarMenuButton";
            _typeNameTable[311] = "DevExpress.UI.Xaml.Ribbon.Internal.RibbonMenuButtonBase`1<DevExpress.UI.Xaml.Ribbon.IContextToolbarItem>";
            _typeNameTable[312] = "DevExpress.UI.Xaml.Ribbon.ContextToolbarItemCollection";
            _typeNameTable[313] = "DevExpress.UI.Xaml.Ribbon.ToolTipItemCollection`1<DevExpress.UI.Xaml.Ribbon.IContextToolbarItem>";
            _typeNameTable[314] = "DevExpress.UI.Xaml.Internal.TemplatedCollection`1<DevExpress.UI.Xaml.Ribbon.IContextToolbarItem>";
            _typeNameTable[315] = "DevExpress.UI.Xaml.Internal.TemplatedCollectionBase`1<DevExpress.UI.Xaml.Ribbon.IContextToolbarItem>";
            _typeNameTable[316] = "DevExpress.Core.Native.ObservableCollectionView`1<DevExpress.UI.Xaml.Ribbon.IContextToolbarItem>";
            _typeNameTable[317] = "DevExpress.UI.Xaml.Ribbon.IContextToolbarItem";
            _typeNameTable[318] = "Windows.UI.Xaml.Controls.Orientation";
            _typeNameTable[319] = "System.Collections.Generic.IEnumerable`1<DevExpress.UI.Xaml.Ribbon.IContextToolbarItem>";
            _typeNameTable[320] = "DevExpress.UI.Xaml.Ribbon.RibbonToolbarMenuButton";
            _typeNameTable[321] = "DevExpress.UI.Xaml.Ribbon.Internal.RibbonMenuButtonBase`1<DevExpress.UI.Xaml.Ribbon.IRibbonToolbarItem>";
            _typeNameTable[322] = "DevExpress.UI.Xaml.Ribbon.RibbonToolbarItemCollection";
            _typeNameTable[323] = "DevExpress.UI.Xaml.Ribbon.ToolTipItemCollection`1<DevExpress.UI.Xaml.Ribbon.IRibbonToolbarItem>";
            _typeNameTable[324] = "DevExpress.UI.Xaml.Internal.TemplatedCollection`1<DevExpress.UI.Xaml.Ribbon.IRibbonToolbarItem>";
            _typeNameTable[325] = "DevExpress.UI.Xaml.Internal.TemplatedCollectionBase`1<DevExpress.UI.Xaml.Ribbon.IRibbonToolbarItem>";
            _typeNameTable[326] = "DevExpress.Core.Native.ObservableCollectionView`1<DevExpress.UI.Xaml.Ribbon.IRibbonToolbarItem>";
            _typeNameTable[327] = "DevExpress.UI.Xaml.Ribbon.IRibbonToolbarItem";
            _typeNameTable[328] = "System.Collections.Generic.IEnumerable`1<DevExpress.UI.Xaml.Ribbon.IRibbonToolbarItem>";
            _typeNameTable[329] = "DevExpress.UI.Xaml.Ribbon.RibbonToolbarControl";
            _typeNameTable[330] = "DevExpress.UI.Xaml.Ribbon.RibbonToolbarTabCollection";
            _typeNameTable[331] = "DevExpress.UI.Xaml.Internal.TemplatedCollectionWithOwner`2<DevExpress.UI.Xaml.Ribbon.RibbonToolbarTab, DevExpress.UI.Xaml.Ribbon.RibbonControlBase>";
            _typeNameTable[332] = "DevExpress.UI.Xaml.Internal.TemplatedCollection`1<DevExpress.UI.Xaml.Ribbon.RibbonToolbarTab>";
            _typeNameTable[333] = "DevExpress.UI.Xaml.Internal.TemplatedCollectionBase`1<DevExpress.UI.Xaml.Ribbon.RibbonToolbarTab>";
            _typeNameTable[334] = "DevExpress.Core.Native.ObservableCollectionView`1<DevExpress.UI.Xaml.Ribbon.RibbonToolbarTab>";
            _typeNameTable[335] = "DevExpress.UI.Xaml.Ribbon.RibbonToolbarTab";
            _typeNameTable[336] = "DevExpress.UI.Xaml.Ribbon.RibbonToolbarGroupCollection";
            _typeNameTable[337] = "DevExpress.UI.Xaml.Internal.TemplatedCollection`1<DevExpress.UI.Xaml.Ribbon.RibbonToolbarGroup>";
            _typeNameTable[338] = "DevExpress.UI.Xaml.Internal.TemplatedCollectionBase`1<DevExpress.UI.Xaml.Ribbon.RibbonToolbarGroup>";
            _typeNameTable[339] = "DevExpress.Core.Native.ObservableCollectionView`1<DevExpress.UI.Xaml.Ribbon.RibbonToolbarGroup>";
            _typeNameTable[340] = "DevExpress.UI.Xaml.Ribbon.RibbonToolbarGroup";
            _typeNameTable[341] = "DevExpress.UI.Xaml.Ribbon.ToolbarControl";
            _typeNameTable[342] = "DevExpress.UI.Xaml.Ribbon.ToolbarGroupCollection";
            _typeNameTable[343] = "DevExpress.UI.Xaml.Internal.TemplatedCollection`1<DevExpress.UI.Xaml.Ribbon.ToolbarGroup>";
            _typeNameTable[344] = "DevExpress.UI.Xaml.Internal.TemplatedCollectionBase`1<DevExpress.UI.Xaml.Ribbon.ToolbarGroup>";
            _typeNameTable[345] = "DevExpress.Core.Native.ObservableCollectionView`1<DevExpress.UI.Xaml.Ribbon.ToolbarGroup>";
            _typeNameTable[346] = "DevExpress.UI.Xaml.Ribbon.ToolbarGroup";
            _typeNameTable[347] = "DevExpress.UI.Xaml.Ribbon.Internal.HorizontalFlyoutCalculator";
            _typeNameTable[348] = "DevExpress.UI.Xaml.Ribbon.Internal.FlyoutCalculatorBase";
            _typeNameTable[349] = "System.Collections.Generic.IEnumerable`1<DevExpress.UI.Xaml.Ribbon.IRibbonItemBase>";
            _typeNameTable[350] = "DevExpress.UI.Xaml.Ribbon.Internal.ISeparatorManager";
            _typeNameTable[351] = "DevExpress.UI.Xaml.Ribbon.Internal.VerticalFlyoutCalculator";
            _typeNameTable[352] = "DevExpress.UI.Xaml.Ribbon.Internal.RibbonTabsControl";
            _typeNameTable[353] = "DevExpress.UI.Xaml.Ribbon.TabHeaderItemCollection";
            _typeNameTable[354] = "DevExpress.UI.Xaml.Ribbon.ToolTipItemCollection`1<DevExpress.UI.Xaml.Ribbon.IRibbonItemBase>";
            _typeNameTable[355] = "DevExpress.UI.Xaml.Internal.TemplatedCollection`1<DevExpress.UI.Xaml.Ribbon.IRibbonItemBase>";
            _typeNameTable[356] = "DevExpress.UI.Xaml.Internal.TemplatedCollectionBase`1<DevExpress.UI.Xaml.Ribbon.IRibbonItemBase>";
            _typeNameTable[357] = "DevExpress.UI.Xaml.GalleryGroupContainerGenerator";
            _typeNameTable[358] = "DevExpress.UI.Xaml.GalleryItemGroup";
            _typeNameTable[359] = "DevExpress.UI.Xaml.GalleryItemCollection";
            _typeNameTable[360] = "DevExpress.Core.Native.ObservableCollectionView`1<Object>";
            _typeNameTable[361] = "DevExpress.UI.Xaml.Internal.DXExpander";
            _typeNameTable[362] = "Windows.UI.Xaml.Media.Animation.Storyboard";
            _typeNameTable[363] = "Windows.UI.Xaml.Controls.UIElementCollection";
            _typeNameTable[364] = "DevExpress.UI.Xaml.Internal.NestedMenuFlyoutControl";
            _typeNameTable[365] = "DevExpress.UI.Xaml.Internal.MenuFlyoutControl";
            _typeNameTable[366] = "DevExpress.UI.Xaml.FlyoutControl";
            _typeNameTable[367] = "DevExpress.UI.Xaml.Native.FlyoutBase";
            _typeNameTable[368] = "DevExpress.UI.Xaml.Native.PopupBase";
            _typeNameTable[369] = "DevExpress.UI.Xaml.Internal.EnabledMode";
            _typeNameTable[370] = "DevExpress.UI.Xaml.Native.IndicatorDirection";
            _typeNameTable[371] = "Windows.UI.Xaml.Duration";
            _typeNameTable[372] = "Windows.Foundation.Rect";
            _typeNameTable[373] = "DevExpress.UI.Xaml.Native.PlacementMode";
            _typeNameTable[374] = "DevExpress.UI.Xaml.Internal.SelectorControl";
            _typeNameTable[375] = "DevExpress.UI.Xaml.Internal.SelectorControlBase";
            _typeNameTable[376] = "DevExpress.UI.Xaml.Internal.SelectionEmptyAction";
            _typeNameTable[377] = "DevExpress.UI.Xaml.Internal.SelectableItemCollection";
            _typeNameTable[378] = "DevExpress.UI.Xaml.Internal.ItemContainerCollectionWithOwner`2<DevExpress.UI.Xaml.Internal.SelectorItemBase, DevExpress.UI.Xaml.Internal.ISupportSelection>";
            _typeNameTable[379] = "DevExpress.UI.Xaml.Internal.ItemContainerCollection`1<DevExpress.UI.Xaml.Internal.SelectorItemBase>";
            _typeNameTable[380] = "DevExpress.UI.Xaml.Internal.TemplatedCollectionBase`1<DevExpress.UI.Xaml.Internal.SelectorItemBase>";
            _typeNameTable[381] = "DevExpress.Core.Native.ObservableCollectionView`1<DevExpress.UI.Xaml.Internal.SelectorItemBase>";
            _typeNameTable[382] = "DevExpress.UI.Xaml.Internal.SelectorItemBase";
            _typeNameTable[383] = "DevExpress.UI.Xaml.Internal.TreeNavigator";
            _typeNameTable[384] = "DevExpress.UI.Xaml.Internal.TreeNavigatorNode";
            _typeNameTable[385] = "DevExpress.UI.Xaml.Internal.TreeNavigatorItem";
            _typeNameTable[386] = "DevExpress.UI.Xaml.Internal.TreeNavigatorNodeCollection";
            _typeNameTable[387] = "System.Collections.ObjectModel.ObservableCollection`1<DevExpress.UI.Xaml.Internal.TreeNavigatorNode>";
            _typeNameTable[388] = "System.Collections.ObjectModel.Collection`1<DevExpress.UI.Xaml.Internal.TreeNavigatorNode>";
            _typeNameTable[389] = "Telerik.UI.Xaml.Controls.Chart.ChartAnnotationLabelDefinition";
            _typeNameTable[390] = "Telerik.UI.Xaml.Controls.Chart.ChartAnnotationLabelLocation";
            _typeNameTable[391] = "Windows.UI.Xaml.HorizontalAlignment";
            _typeNameTable[392] = "Windows.UI.Xaml.VerticalAlignment";
            _typeNameTable[393] = "Telerik.UI.Xaml.Controls.Chart.ChartPalette";
            _typeNameTable[394] = "Telerik.UI.Xaml.Controls.Chart.PaletteEntryCollection";
            _typeNameTable[395] = "System.Collections.Generic.List`1<Windows.UI.Xaml.Media.Brush>";
            _typeNameTable[396] = "Telerik.UI.Xaml.Controls.Data.HexView.AngledHexLayoutDefinition";
            _typeNameTable[397] = "Telerik.UI.Xaml.Controls.Data.HexView.HexLayoutDefinitionBase";
            _typeNameTable[398] = "Telerik.UI.Xaml.Controls.Data.HexView.FlatLooseHexLayoutDefinition";
            _typeNameTable[399] = "Telerik.UI.Xaml.Controls.Data.HexView.FlatTightHexLayoutDefinition";
            _typeNameTable[400] = "Telerik.UI.Xaml.Controls.Input.HighlightStyle";
            _typeNameTable[401] = "Telerik.UI.Xaml.Controls.Input.FontWeightName";
            _typeNameTable[402] = "Windows.UI.Text.FontStyle";
            _typeNameTable[403] = "Telerik.UI.Xaml.Controls.Input.CalendarCellStyle";
            _typeNameTable[404] = "Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu";
            _typeNameTable[405] = "System.Collections.ObjectModel.ObservableCollection`1<Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem>";
            _typeNameTable[406] = "System.Collections.ObjectModel.Collection`1<Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem>";
            _typeNameTable[407] = "Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem";
            _typeNameTable[408] = "Telerik.UI.Xaml.Controls.Primitives.Menu.CommandService";
            _typeNameTable[409] = "Telerik.UI.Xaml.Controls.Primitives.CommandServiceBase`1<Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu>";
            _typeNameTable[410] = "Telerik.UI.Xaml.Controls.Primitives.ServiceBase`1<Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu>";
            _typeNameTable[411] = "Telerik.UI.Xaml.Controls.Primitives.AttachableObject`1<Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu>";
            _typeNameTable[412] = "Telerik.UI.Xaml.Controls.Primitives.CommandCollection`1<Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu>";
            _typeNameTable[413] = "Telerik.UI.Xaml.Controls.Primitives.AttachableObjectCollection`2<Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu, Telerik.UI.Xaml.Controls.Primitives.ControlCommandBase`1<Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu>>";
            _typeNameTable[414] = "System.Collections.ObjectModel.ObservableCollection`1<Telerik.UI.Xaml.Controls.Primitives.ControlCommandBase`1<Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu>>";
            _typeNameTable[415] = "System.Collections.ObjectModel.Collection`1<Telerik.UI.Xaml.Controls.Primitives.ControlCommandBase`1<Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu>>";
            _typeNameTable[416] = "Telerik.UI.Xaml.Controls.Primitives.ControlCommandBase`1<Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu>";
            _typeNameTable[417] = "Telerik.UI.Xaml.Controls.Primitives.RadialMenuTriggerBehavior";
            _typeNameTable[418] = "Telerik.UI.Xaml.Controls.Primitives.AttachableObject`1<Windows.UI.Xaml.FrameworkElement>";
            _typeNameTable[419] = "Telerik.UI.Xaml.Controls.Primitives.RadialMenuAttachTriggers";
            _typeNameTable[420] = "Telerik.UI.Xaml.Controls.Primitives.BusyIndicator.BusyIndicatorAnimationAdapter";

            _typeTable = new global::System.Type[421];
            _typeTable[0] = typeof(global::RaspberryPiV3.AnaSayfa);
            _typeTable[1] = typeof(global::Windows.UI.Xaml.Controls.Page);
            _typeTable[2] = typeof(global::Windows.UI.Xaml.Controls.UserControl);
            _typeTable[3] = typeof(global::Telerik.UI.Xaml.Controls.Grid.RadDataGrid);
            _typeTable[4] = typeof(global::Telerik.UI.Xaml.Controls.RadControl);
            _typeTable[5] = typeof(global::Windows.UI.Xaml.Controls.Control);
            _typeTable[6] = typeof(global::System.Object);
            _typeTable[7] = typeof(global::Telerik.UI.Xaml.Controls.Grid.DataGridColumnCollection);
            _typeTable[8] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::Telerik.UI.Xaml.Controls.Grid.DataGridColumn>);
            _typeTable[9] = typeof(global::System.Collections.ObjectModel.Collection<global::Telerik.UI.Xaml.Controls.Grid.DataGridColumn>);
            _typeTable[10] = typeof(global::Telerik.UI.Xaml.Controls.Grid.DataGridColumn);
            _typeTable[11] = typeof(global::Telerik.UI.Xaml.Controls.Primitives.RadDependencyObject);
            _typeTable[12] = typeof(global::Windows.UI.Xaml.DependencyObject);
            _typeTable[13] = typeof(global::System.Boolean);
            _typeTable[14] = typeof(global::Windows.UI.Xaml.Style);
            _typeTable[15] = typeof(global::Windows.UI.Xaml.Controls.StyleSelector);
            _typeTable[16] = typeof(global::System.String);
            _typeTable[17] = typeof(global::Telerik.UI.Xaml.Controls.Grid.DataGridColumnSizeMode);
            _typeTable[18] = typeof(global::System.Enum);
            _typeTable[19] = typeof(global::System.ValueType);
            _typeTable[20] = typeof(global::System.Double);
            _typeTable[21] = typeof(global::Telerik.UI.Xaml.Controls.Grid.SortDirection);
            _typeTable[22] = typeof(global::Windows.UI.Xaml.DataTemplate);
            _typeTable[23] = typeof(global::System.Int32);
            _typeTable[24] = typeof(global::Telerik.UI.Xaml.Controls.Grid.Primitives.ColumnDataOperationsMode);
            _typeTable[25] = typeof(global::Telerik.UI.Xaml.Controls.Grid.DataGridUserFilterMode);
            _typeTable[26] = typeof(global::Telerik.UI.Xaml.Controls.Grid.DataGridUserColumnReorderMode);
            _typeTable[27] = typeof(global::Telerik.UI.Xaml.Controls.Grid.DataGridColumnResizeHandleDisplayMode);
            _typeTable[28] = typeof(global::Telerik.UI.Xaml.Controls.Grid.DataGridUserSortMode);
            _typeTable[29] = typeof(global::Telerik.UI.Xaml.Controls.Grid.DataGridUserGroupMode);
            _typeTable[30] = typeof(global::Telerik.UI.Xaml.Controls.Grid.DataGridGroupHeaderDisplayMode);
            _typeTable[31] = typeof(global::Windows.UI.Xaml.Controls.DataTemplateSelector);
            _typeTable[32] = typeof(global::Telerik.UI.Xaml.Controls.Primitives.CommandCollection<global::Telerik.UI.Xaml.Controls.Grid.RadDataGrid>);
            _typeTable[33] = typeof(global::Telerik.UI.Xaml.Controls.Primitives.AttachableObjectCollection<global::Telerik.UI.Xaml.Controls.Grid.RadDataGrid, global::Telerik.UI.Xaml.Controls.Primitives.ControlCommandBase<global::Telerik.UI.Xaml.Controls.Grid.RadDataGrid>>);
            _typeTable[34] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::Telerik.UI.Xaml.Controls.Primitives.ControlCommandBase<global::Telerik.UI.Xaml.Controls.Grid.RadDataGrid>>);
            _typeTable[35] = typeof(global::System.Collections.ObjectModel.Collection<global::Telerik.UI.Xaml.Controls.Primitives.ControlCommandBase<global::Telerik.UI.Xaml.Controls.Grid.RadDataGrid>>);
            _typeTable[36] = typeof(global::Telerik.UI.Xaml.Controls.Primitives.ControlCommandBase<global::Telerik.UI.Xaml.Controls.Grid.RadDataGrid>);
            _typeTable[37] = typeof(global::Telerik.UI.Xaml.Controls.Primitives.AttachableObject<global::Telerik.UI.Xaml.Controls.Grid.RadDataGrid>);
            _typeTable[38] = typeof(global::Telerik.UI.Xaml.Controls.Grid.Commands.CommandService);
            _typeTable[39] = typeof(global::Telerik.UI.Xaml.Controls.Primitives.CommandServiceBase<global::Telerik.UI.Xaml.Controls.Grid.RadDataGrid>);
            _typeTable[40] = typeof(global::Telerik.UI.Xaml.Controls.Primitives.ServiceBase<global::Telerik.UI.Xaml.Controls.Grid.RadDataGrid>);
            _typeTable[41] = typeof(global::Telerik.UI.Xaml.Controls.Grid.DataGridDragBehavior);
            _typeTable[42] = typeof(global::Telerik.UI.Xaml.Controls.Grid.GroupPanelPosition);
            _typeTable[43] = typeof(global::Telerik.Core.Data.BatchLoadingMode);
            _typeTable[44] = typeof(global::Telerik.Data.Core.SortDescriptorCollection);
            _typeTable[45] = typeof(global::Telerik.Data.Core.DataDescriptorCollection<global::Telerik.Data.Core.SortDescriptorBase>);
            _typeTable[46] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::Telerik.Data.Core.SortDescriptorBase>);
            _typeTable[47] = typeof(global::System.Collections.ObjectModel.Collection<global::Telerik.Data.Core.SortDescriptorBase>);
            _typeTable[48] = typeof(global::Telerik.Data.Core.SortDescriptorBase);
            _typeTable[49] = typeof(global::Telerik.Data.Core.OrderedDescriptor);
            _typeTable[50] = typeof(global::Telerik.Data.Core.DataDescriptor);
            _typeTable[51] = typeof(global::Telerik.Core.ViewModelBase);
            _typeTable[52] = typeof(global::System.Collections.IComparer);
            _typeTable[53] = typeof(global::Telerik.Data.Core.SortOrder);
            _typeTable[54] = typeof(global::Telerik.Data.Core.GroupDescriptorCollection);
            _typeTable[55] = typeof(global::Telerik.Data.Core.DataDescriptorCollection<global::Telerik.Data.Core.GroupDescriptorBase>);
            _typeTable[56] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::Telerik.Data.Core.GroupDescriptorBase>);
            _typeTable[57] = typeof(global::System.Collections.ObjectModel.Collection<global::Telerik.Data.Core.GroupDescriptorBase>);
            _typeTable[58] = typeof(global::Telerik.Data.Core.GroupDescriptorBase);
            _typeTable[59] = typeof(global::Telerik.Data.Core.FilterDescriptorCollection);
            _typeTable[60] = typeof(global::Telerik.Data.Core.DataDescriptorCollection<global::Telerik.Data.Core.FilterDescriptorBase>);
            _typeTable[61] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::Telerik.Data.Core.FilterDescriptorBase>);
            _typeTable[62] = typeof(global::System.Collections.ObjectModel.Collection<global::Telerik.Data.Core.FilterDescriptorBase>);
            _typeTable[63] = typeof(global::Telerik.Data.Core.FilterDescriptorBase);
            _typeTable[64] = typeof(global::Telerik.Data.Core.AggregateDescriptorCollection);
            _typeTable[65] = typeof(global::Telerik.Data.Core.DataDescriptorCollection<global::Telerik.Data.Core.AggregateDescriptorBase>);
            _typeTable[66] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::Telerik.Data.Core.AggregateDescriptorBase>);
            _typeTable[67] = typeof(global::System.Collections.ObjectModel.Collection<global::Telerik.Data.Core.AggregateDescriptorBase>);
            _typeTable[68] = typeof(global::Telerik.Data.Core.AggregateDescriptorBase);
            _typeTable[69] = typeof(global::Windows.UI.Xaml.Media.Brush);
            _typeTable[70] = typeof(global::Telerik.UI.Xaml.Controls.Primitives.ObjectSelector<global::Windows.UI.Xaml.Media.Brush>);
            _typeTable[71] = typeof(global::Telerik.UI.Xaml.Controls.Primitives.GridLinesVisibility);
            _typeTable[72] = typeof(global::Telerik.UI.Xaml.Controls.Grid.DataGridUserEditMode);
            _typeTable[73] = typeof(global::Telerik.UI.Xaml.Controls.Grid.IGridExternalEditor);
            _typeTable[74] = typeof(global::Telerik.UI.Xaml.Controls.Grid.HitTestService);
            _typeTable[75] = typeof(global::Telerik.UI.Xaml.Controls.Grid.DataGridRowDetailsMode);
            _typeTable[76] = typeof(global::Telerik.UI.Xaml.Controls.Grid.DataGridSelectionUnit);
            _typeTable[77] = typeof(global::Telerik.UI.Xaml.Controls.Grid.DataGridSelectionMode);
            _typeTable[78] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::System.Object>);
            _typeTable[79] = typeof(global::System.Collections.ObjectModel.Collection<global::System.Object>);
            _typeTable[80] = typeof(global::Telerik.UI.Xaml.Controls.Grid.DataGridTextColumn);
            _typeTable[81] = typeof(global::Telerik.UI.Xaml.Controls.Grid.DataGridTypedColumn);
            _typeTable[82] = typeof(global::RaspberryPiV3.Bolgeler);
            _typeTable[83] = typeof(global::Telerik.UI.Xaml.Controls.Grid.DataGridNumericalColumn);
            _typeTable[84] = typeof(global::Telerik.UI.Xaml.Controls.Grid.DataGridDateColumn);
            _typeTable[85] = typeof(global::RaspberryPiV3.DepoDurumu);
            _typeTable[86] = typeof(global::RaspberryPiV3.Depolar);
            _typeTable[87] = typeof(global::RaspberryPiV3.Iletisim);
            _typeTable[88] = typeof(global::RaspberryPiV3.Kullanicikayit);
            _typeTable[89] = typeof(global::RaspberryPiV3.Kullanicilar);
            _typeTable[90] = typeof(global::RaspberryPiV3.MainPage);
            _typeTable[91] = typeof(global::Telerik.UI.Xaml.Controls.Input.RadDatePicker);
            _typeTable[92] = typeof(global::Telerik.UI.Xaml.Controls.Input.DateTimePicker);
            _typeTable[93] = typeof(global::Telerik.UI.Xaml.Controls.RadHeaderedControl);
            _typeTable[94] = typeof(global::Telerik.UI.Xaml.Controls.Input.StepBehavior);
            _typeTable[95] = typeof(global::Telerik.UI.Xaml.Controls.Input.DateTimePickerDisplayMode);
            _typeTable[96] = typeof(global::System.DateTimeOffset);
            _typeTable[97] = typeof(global::System.DateTime);
            _typeTable[98] = typeof(global::System.Nullable<global::System.DateTime>);
            _typeTable[99] = typeof(global::RaspberryPiV3.Urunler);
            _typeTable[100] = typeof(global::DevExpress.UI.Xaml.TitleSettings);
            _typeTable[101] = typeof(global::Windows.UI.Xaml.Media.SolidColorBrush);
            _typeTable[102] = typeof(global::DevExpress.UI.Xaml.Controls.PdfOverlayBarLocation);
            _typeTable[103] = typeof(global::DevExpress.Mvvm.BindableBase);
            _typeTable[104] = typeof(global::Windows.UI.Xaml.Controls.Primitives.EdgeTransitionLocation);
            _typeTable[105] = typeof(global::DevExpress.UI.Xaml.Controls.SimpleSettingsBarOverlaySettings);
            _typeTable[106] = typeof(global::DevExpress.UI.Xaml.Controls.PdfOverlaySettingsBase);
            _typeTable[107] = typeof(global::DevExpress.UI.Xaml.Controls.SettingsBarItemCollection);
            _typeTable[108] = typeof(global::DevExpress.Core.Native.ObservableCollectionView<global::DevExpress.UI.Xaml.Controls.ISettingsBarItem>);
            _typeTable[109] = typeof(global::DevExpress.UI.Xaml.Controls.ISettingsBarItem);
            _typeTable[110] = typeof(global::DevExpress.UI.Xaml.Controls.IPdfOverlayBarLocation);
            _typeTable[111] = typeof(global::System.TimeSpan);
            _typeTable[112] = typeof(global::DevExpress.UI.Xaml.Controls.PdfViewerControl);
            _typeTable[113] = typeof(global::DevExpress.UI.Xaml.Internal.ControlEx);
            _typeTable[114] = typeof(global::System.Uri);
            _typeTable[115] = typeof(global::DevExpress.UI.Xaml.Controls.PdfViewMode);
            _typeTable[116] = typeof(global::Windows.Graphics.Printing.IPrintDocumentSource);
            _typeTable[117] = typeof(global::Windows.UI.Xaml.Thickness);
            _typeTable[118] = typeof(global::DevExpress.UI.Xaml.Controls.PdfZoomMode);
            _typeTable[119] = typeof(global::System.Single);
            _typeTable[120] = typeof(global::DevExpress.UI.Xaml.Controls.PdfDocumentContainer);
            _typeTable[121] = typeof(global::Windows.UI.Xaml.CornerRadius);
            _typeTable[122] = typeof(global::System.Windows.Input.ICommand);
            _typeTable[123] = typeof(global::DevExpress.UI.Xaml.Controls.PdfViewerErrorWrapper);
            _typeTable[124] = typeof(global::DevExpress.UI.Xaml.Controls.PdfDocumentLoadingPolicy);
            _typeTable[125] = typeof(global::Windows.Foundation.Size);
            _typeTable[126] = typeof(global::DevExpress.UI.Xaml.Controls.RadialContextMenuCommandBase);
            _typeTable[127] = typeof(global::DevExpress.Core.Native.DXControl);
            _typeTable[128] = typeof(global::Windows.Foundation.Point);
            _typeTable[129] = typeof(global::DevExpress.UI.Xaml.Controls.Internal.ViewInfo);
            _typeTable[130] = typeof(global::DevExpress.UI.Xaml.Controls.RadialMenuControlBase);
            _typeTable[131] = typeof(global::Windows.UI.Xaml.Controls.ContentControl);
            _typeTable[132] = typeof(global::DevExpress.UI.Xaml.Controls.Internal.Pdf.PdfDocumentState);
            _typeTable[133] = typeof(global::DevExpress.Pdf.Native.PdfDocumentStateBase);
            _typeTable[134] = typeof(global::DevExpress.Pdf.Native.PdfDisposableObject);
            _typeTable[135] = typeof(global::DevExpress.Pdf.PdfDocument);
            _typeTable[136] = typeof(global::DevExpress.Pdf.Native.IFontStorage);
            _typeTable[137] = typeof(global::DevExpress.Pdf.Native.PdfImageDataStorage);
            _typeTable[138] = typeof(global::DevExpress.Pdf.Native.PdfCache<global::DevExpress.Pdf.PdfImage, global::DevExpress.Pdf.Native.PdfImageData>);
            _typeTable[139] = typeof(global::DevExpress.Pdf.Native.PdfSelectionState);
            _typeTable[140] = typeof(global::DevExpress.Pdf.Native.PdfOutlineTreeListItemCollection);
            _typeTable[141] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::DevExpress.Pdf.Native.PdfOutlineTreeListItem>);
            _typeTable[142] = typeof(global::System.Collections.ObjectModel.Collection<global::DevExpress.Pdf.Native.PdfOutlineTreeListItem>);
            _typeTable[143] = typeof(global::DevExpress.Pdf.Native.PdfOutlineTreeListItem);
            _typeTable[144] = typeof(global::DevExpress.Pdf.PdfColor);
            _typeTable[145] = typeof(global::System.Collections.Generic.IList<global::DevExpress.Pdf.Native.PdfFileAttachmentListItem>);
            _typeTable[146] = typeof(global::DevExpress.Pdf.Native.PdfFileAttachmentListItem);
            _typeTable[147] = typeof(global::DevExpress.Pdf.PdfFileAttachment);
            _typeTable[148] = typeof(global::System.Byte[]);
            _typeTable[149] = typeof(global::System.Array);
            _typeTable[150] = typeof(global::System.Byte);
            _typeTable[151] = typeof(global::System.Nullable<global::System.DateTimeOffset>);
            _typeTable[152] = typeof(global::DevExpress.Pdf.PdfFormData);
            _typeTable[153] = typeof(global::DevExpress.UI.Xaml.Controls.Internal.Pdf.PdfTextHighlightViewModel);
            _typeTable[154] = typeof(global::System.Collections.Generic.List<global::DevExpress.UI.Xaml.Controls.IPdfTextSearchResult>);
            _typeTable[155] = typeof(global::DevExpress.UI.Xaml.Controls.IPdfTextSearchResult);
            _typeTable[156] = typeof(global::System.Collections.Generic.IList<global::DevExpress.Pdf.PdfOrientedRectangle>);
            _typeTable[157] = typeof(global::DevExpress.Pdf.PdfOrientedRectangle);
            _typeTable[158] = typeof(global::System.Collections.Generic.IList<global::DevExpress.Pdf.PdfWord>);
            _typeTable[159] = typeof(global::DevExpress.Pdf.PdfWord);
            _typeTable[160] = typeof(global::System.Collections.Generic.IList<global::DevExpress.Pdf.PdfCharacter>);
            _typeTable[161] = typeof(global::DevExpress.Pdf.PdfCharacter);
            _typeTable[162] = typeof(global::DevExpress.Pdf.PdfFont);
            _typeTable[163] = typeof(global::DevExpress.Pdf.Native.PdfObject);
            _typeTable[164] = typeof(global::DevExpress.Pdf.Native.PdfDocumentItem);
            _typeTable[165] = typeof(global::Windows.UI.Xaml.Media.Geometry);
            _typeTable[166] = typeof(global::DevExpress.UI.Xaml.Editors.ColorGroup);
            _typeTable[167] = typeof(global::DevExpress.UI.Xaml.Editors.ColorList);
            _typeTable[168] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::Windows.UI.Color>);
            _typeTable[169] = typeof(global::System.Collections.ObjectModel.Collection<global::Windows.UI.Color>);
            _typeTable[170] = typeof(global::Windows.UI.Color);
            _typeTable[171] = typeof(global::DevExpress.UI.Xaml.Editors.BrushList);
            _typeTable[172] = typeof(global::DevExpress.Core.Native.ObservableCollectionView<global::Windows.UI.Xaml.Media.SolidColorBrush>);
            _typeTable[173] = typeof(global::DevExpress.UI.Xaml.Editors.ColorEdit);
            _typeTable[174] = typeof(global::DevExpress.UI.Xaml.Editors.ColorGroupsList);
            _typeTable[175] = typeof(global::DevExpress.Core.Native.ObservableCollectionView<global::DevExpress.UI.Xaml.Editors.ColorGroup>);
            _typeTable[176] = typeof(global::DevExpress.Mvvm.DelegateCommand);
            _typeTable[177] = typeof(global::DevExpress.Mvvm.DelegateCommand<global::System.Object>);
            _typeTable[178] = typeof(global::DevExpress.Mvvm.DelegateCommandBase<global::System.Object>);
            _typeTable[179] = typeof(global::DevExpress.Mvvm.CommandBase<global::System.Object>);
            _typeTable[180] = typeof(global::DevExpress.Mvvm.CommandBase);
            _typeTable[181] = typeof(global::DevExpress.UI.Xaml.Editors.ColorPicker);
            _typeTable[182] = typeof(global::DevExpress.UI.Xaml.Editors.ColorModelCollection);
            _typeTable[183] = typeof(global::DevExpress.Core.Native.ObservableCollectionView<global::DevExpress.UI.Xaml.Editors.ColorModelBase>);
            _typeTable[184] = typeof(global::DevExpress.UI.Xaml.Editors.ColorModelBase);
            _typeTable[185] = typeof(global::DevExpress.UI.Xaml.Editors.ColorPickerColorMode);
            _typeTable[186] = typeof(global::DevExpress.UI.Xaml.Editors.HSBColorModel);
            _typeTable[187] = typeof(global::DevExpress.UI.Xaml.Editors.RGBColorModel);
            _typeTable[188] = typeof(global::DevExpress.UI.Xaml.Editors.PopupSettings);
            _typeTable[189] = typeof(global::Windows.UI.Xaml.Controls.ControlTemplate);
            _typeTable[190] = typeof(global::DevExpress.UI.Xaml.Editors.Internal.ColorGalleryItemContainerGenerator);
            _typeTable[191] = typeof(global::DevExpress.UI.Xaml.GalleryItemContainerGenerator);
            _typeTable[192] = typeof(global::DevExpress.UI.Xaml.GalleryItemContainerGeneratorBase);
            _typeTable[193] = typeof(global::Windows.UI.Xaml.FrameworkElement);
            _typeTable[194] = typeof(global::DevExpress.UI.Xaml.Layout.HamburgerMenuFrame);
            _typeTable[195] = typeof(global::DevExpress.UI.Xaml.Layout.Internal.MenuFrameBase<global::DevExpress.UI.Xaml.Layout.HamburgerMenu>);
            _typeTable[196] = typeof(global::DevExpress.UI.Xaml.Layout.DXFrame);
            _typeTable[197] = typeof(global::Windows.UI.Xaml.Controls.Frame);
            _typeTable[198] = typeof(global::DevExpress.UI.Xaml.Layout.HamburgerMenu);
            _typeTable[199] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::DevExpress.UI.Xaml.Layout.Internal.IHamburgerMenuItem>);
            _typeTable[200] = typeof(global::System.Collections.ObjectModel.Collection<global::DevExpress.UI.Xaml.Layout.Internal.IHamburgerMenuItem>);
            _typeTable[201] = typeof(global::DevExpress.UI.Xaml.Layout.Internal.IHamburgerMenuItem);
            _typeTable[202] = typeof(global::DevExpress.UI.Xaml.Layout.HamburgerMenuNavigationButtonPlacement);
            _typeTable[203] = typeof(global::System.Type);
            _typeTable[204] = typeof(global::DevExpress.UI.Xaml.Layout.TypeProviderBase);
            _typeTable[205] = typeof(global::DevExpress.UI.Xaml.Layout.TileBarFrame);
            _typeTable[206] = typeof(global::DevExpress.UI.Xaml.Layout.Internal.MenuFrameBase<global::DevExpress.UI.Xaml.Layout.TileBar>);
            _typeTable[207] = typeof(global::DevExpress.UI.Xaml.Layout.TileBar);
            _typeTable[208] = typeof(global::DevExpress.UI.Xaml.Layout.VisualElements.veSelector);
            _typeTable[209] = typeof(global::DevExpress.UI.Xaml.Layout.VisualElements.veItemsControl);
            _typeTable[210] = typeof(global::Windows.UI.Xaml.Controls.ItemsControl);
            _typeTable[211] = typeof(global::DevExpress.Core.Dock);
            _typeTable[212] = typeof(global::DevExpress.UI.Xaml.Ribbon.BackstageTabItem);
            _typeTable[213] = typeof(global::DevExpress.UI.Xaml.Ribbon.Internal.RibbonSelectorItemBase);
            _typeTable[214] = typeof(global::DevExpress.UI.Xaml.Ribbon.Internal.RibbonItemBaseEx);
            _typeTable[215] = typeof(global::DevExpress.UI.Xaml.Ribbon.Internal.RibbonItemBase);
            _typeTable[216] = typeof(global::DevExpress.UI.Xaml.Internal.GlyphItemBase);
            _typeTable[217] = typeof(global::DevExpress.UI.Xaml.Internal.PointerItemBase);
            _typeTable[218] = typeof(global::DevExpress.UI.Xaml.Internal.ContentControlEx);
            _typeTable[219] = typeof(global::DevExpress.UI.Xaml.Ribbon.ControlPaneShowMode);
            _typeTable[220] = typeof(global::DevExpress.UI.Xaml.Ribbon.RibbonItemStyle);
            _typeTable[221] = typeof(global::DevExpress.UI.Xaml.Ribbon.CollapsePriority);
            _typeTable[222] = typeof(global::Windows.UI.Xaml.Controls.IconElement);
            _typeTable[223] = typeof(global::Windows.UI.Xaml.Media.Stretch);
            _typeTable[224] = typeof(global::DevExpress.UI.Xaml.IconSizeUnit);
            _typeTable[225] = typeof(global::DevExpress.UI.Xaml.ControlTemplateSelector);
            _typeTable[226] = typeof(global::Windows.UI.Xaml.Controls.ClickMode);
            _typeTable[227] = typeof(global::DevExpress.UI.Xaml.Ribbon.BackstageView);
            _typeTable[228] = typeof(global::DevExpress.UI.Xaml.Ribbon.Internal.RibbonHeaderedContainerBase);
            _typeTable[229] = typeof(global::DevExpress.UI.Xaml.Ribbon.BackstageItemCollection);
            _typeTable[230] = typeof(global::DevExpress.UI.Xaml.Internal.TemplatedCollectionWithOwner<global::DevExpress.UI.Xaml.Ribbon.IBackstageItem, global::DevExpress.UI.Xaml.Ribbon.BackstageView>);
            _typeTable[231] = typeof(global::DevExpress.UI.Xaml.Internal.TemplatedCollection<global::DevExpress.UI.Xaml.Ribbon.IBackstageItem>);
            _typeTable[232] = typeof(global::DevExpress.UI.Xaml.Internal.TemplatedCollectionBase<global::DevExpress.UI.Xaml.Ribbon.IBackstageItem>);
            _typeTable[233] = typeof(global::DevExpress.Core.Native.ObservableCollectionView<global::DevExpress.UI.Xaml.Ribbon.IBackstageItem>);
            _typeTable[234] = typeof(global::DevExpress.UI.Xaml.Ribbon.IBackstageItem);
            _typeTable[235] = typeof(global::DevExpress.UI.Xaml.Ribbon.IBackstageTabItem);
            _typeTable[236] = typeof(global::Windows.UI.Xaml.UIElement);
            _typeTable[237] = typeof(global::DevExpress.UI.Xaml.Ribbon.BackstageButtonItem);
            _typeTable[238] = typeof(global::DevExpress.UI.Xaml.Ribbon.Internal.RibbonButtonItemBase);
            _typeTable[239] = typeof(global::DevExpress.UI.Xaml.Ribbon.HelpPane);
            _typeTable[240] = typeof(global::DevExpress.UI.Xaml.Ribbon.HelpPaneBase);
            _typeTable[241] = typeof(global::DevExpress.UI.Xaml.Ribbon.RibbonHelpPaneItemCollection);
            _typeTable[242] = typeof(global::DevExpress.UI.Xaml.Ribbon.ToolTipItemCollection<global::DevExpress.UI.Xaml.Ribbon.IRibbonHelpPaneItem>);
            _typeTable[243] = typeof(global::DevExpress.UI.Xaml.Internal.TemplatedCollection<global::DevExpress.UI.Xaml.Ribbon.IRibbonHelpPaneItem>);
            _typeTable[244] = typeof(global::DevExpress.UI.Xaml.Internal.TemplatedCollectionBase<global::DevExpress.UI.Xaml.Ribbon.IRibbonHelpPaneItem>);
            _typeTable[245] = typeof(global::DevExpress.Core.Native.ObservableCollectionView<global::DevExpress.UI.Xaml.Ribbon.IRibbonHelpPaneItem>);
            _typeTable[246] = typeof(global::DevExpress.UI.Xaml.Ribbon.IRibbonHelpPaneItem);
            _typeTable[247] = typeof(global::DevExpress.Mvvm.Native.DeviceFamily);
            _typeTable[248] = typeof(global::DevExpress.UI.Xaml.Ribbon.HelpPaneItemPlacement);
            _typeTable[249] = typeof(global::System.Collections.Generic.IEnumerable<global::DevExpress.UI.Xaml.Ribbon.IHelpPaneItem>);
            _typeTable[250] = typeof(global::DevExpress.UI.Xaml.Ribbon.ToolbarHelpPane);
            _typeTable[251] = typeof(global::DevExpress.UI.Xaml.Ribbon.ToolbarHelpPaneItemCollection);
            _typeTable[252] = typeof(global::DevExpress.UI.Xaml.Ribbon.ToolTipItemCollection<global::DevExpress.UI.Xaml.Ribbon.IToolbarHelpPaneItem>);
            _typeTable[253] = typeof(global::DevExpress.UI.Xaml.Internal.TemplatedCollection<global::DevExpress.UI.Xaml.Ribbon.IToolbarHelpPaneItem>);
            _typeTable[254] = typeof(global::DevExpress.UI.Xaml.Internal.TemplatedCollectionBase<global::DevExpress.UI.Xaml.Ribbon.IToolbarHelpPaneItem>);
            _typeTable[255] = typeof(global::DevExpress.Core.Native.ObservableCollectionView<global::DevExpress.UI.Xaml.Ribbon.IToolbarHelpPaneItem>);
            _typeTable[256] = typeof(global::DevExpress.UI.Xaml.Ribbon.IToolbarHelpPaneItem);
            _typeTable[257] = typeof(global::DevExpress.UI.Xaml.Ribbon.RibbonControl);
            _typeTable[258] = typeof(global::DevExpress.UI.Xaml.Ribbon.RibbonControlBase);
            _typeTable[259] = typeof(global::DevExpress.UI.Xaml.Ribbon.RibbonTabCollection);
            _typeTable[260] = typeof(global::DevExpress.UI.Xaml.Internal.TemplatedCollectionWithOwner<global::DevExpress.UI.Xaml.Ribbon.RibbonTab, global::DevExpress.UI.Xaml.Ribbon.RibbonControlBase>);
            _typeTable[261] = typeof(global::DevExpress.UI.Xaml.Internal.TemplatedCollection<global::DevExpress.UI.Xaml.Ribbon.RibbonTab>);
            _typeTable[262] = typeof(global::DevExpress.UI.Xaml.Internal.TemplatedCollectionBase<global::DevExpress.UI.Xaml.Ribbon.RibbonTab>);
            _typeTable[263] = typeof(global::DevExpress.Core.Native.ObservableCollectionView<global::DevExpress.UI.Xaml.Ribbon.RibbonTab>);
            _typeTable[264] = typeof(global::DevExpress.UI.Xaml.Ribbon.RibbonTab);
            _typeTable[265] = typeof(global::DevExpress.UI.Xaml.Ribbon.RibbonTabBase);
            _typeTable[266] = typeof(global::DevExpress.UI.Xaml.Ribbon.RibbonGroupCollection);
            _typeTable[267] = typeof(global::DevExpress.UI.Xaml.Internal.TemplatedCollection<global::DevExpress.UI.Xaml.Ribbon.RibbonGroup>);
            _typeTable[268] = typeof(global::DevExpress.UI.Xaml.Internal.TemplatedCollectionBase<global::DevExpress.UI.Xaml.Ribbon.RibbonGroup>);
            _typeTable[269] = typeof(global::DevExpress.Core.Native.ObservableCollectionView<global::DevExpress.UI.Xaml.Ribbon.RibbonGroup>);
            _typeTable[270] = typeof(global::DevExpress.UI.Xaml.Ribbon.RibbonGroup);
            _typeTable[271] = typeof(global::DevExpress.UI.Xaml.Ribbon.RibbonGroupBase);
            _typeTable[272] = typeof(global::DevExpress.UI.Xaml.Ribbon.Internal.RibbonGroupPanelBase);
            _typeTable[273] = typeof(global::DevExpress.UI.Xaml.Ribbon.Internal.IndependentGroupPanelBase);
            _typeTable[274] = typeof(global::DevExpress.UI.Xaml.Internal.ItemsPanelBase<global::DevExpress.UI.Xaml.Ribbon.IRibbonItemBase>);
            _typeTable[275] = typeof(global::Windows.UI.Xaml.Controls.Panel);
            _typeTable[276] = typeof(global::DevExpress.UI.Xaml.Ribbon.RibbonItemCollection);
            _typeTable[277] = typeof(global::DevExpress.UI.Xaml.Ribbon.ToolTipItemCollection<global::DevExpress.UI.Xaml.Ribbon.IRibbonItem>);
            _typeTable[278] = typeof(global::DevExpress.UI.Xaml.Internal.TemplatedCollection<global::DevExpress.UI.Xaml.Ribbon.IRibbonItem>);
            _typeTable[279] = typeof(global::DevExpress.UI.Xaml.Internal.TemplatedCollectionBase<global::DevExpress.UI.Xaml.Ribbon.IRibbonItem>);
            _typeTable[280] = typeof(global::DevExpress.Core.Native.ObservableCollectionView<global::DevExpress.UI.Xaml.Ribbon.IRibbonItem>);
            _typeTable[281] = typeof(global::DevExpress.UI.Xaml.Ribbon.IRibbonItem);
            _typeTable[282] = typeof(global::DevExpress.UI.Xaml.Ribbon.RibbonItemBaseCollection);
            _typeTable[283] = typeof(global::DevExpress.Core.Native.ObservableCollectionView<global::DevExpress.UI.Xaml.Ribbon.IRibbonItemBase>);
            _typeTable[284] = typeof(global::DevExpress.UI.Xaml.Ribbon.IRibbonItemBase);
            _typeTable[285] = typeof(global::DevExpress.UI.Xaml.Ribbon.Internal.IFlyoutCalculator);
            _typeTable[286] = typeof(global::DevExpress.UI.Xaml.Ribbon.RibbonViewMode);
            _typeTable[287] = typeof(global::DevExpress.UI.Xaml.Ribbon.RibbonState);
            _typeTable[288] = typeof(global::DevExpress.UI.Xaml.Ribbon.RibbonColorEditBase);
            _typeTable[289] = typeof(global::DevExpress.UI.Xaml.Ribbon.RibbonSplitItemBase);
            _typeTable[290] = typeof(global::DevExpress.UI.Xaml.Ribbon.Internal.RibbonMenuItemBase);
            _typeTable[291] = typeof(global::DevExpress.UI.Xaml.FlyoutSettingsBase);
            _typeTable[292] = typeof(global::DevExpress.UI.Xaml.Ribbon.RibbonFontEditBase);
            _typeTable[293] = typeof(global::DevExpress.UI.Xaml.Editors.FontEdit);
            _typeTable[294] = typeof(global::Windows.UI.Xaml.Media.FontFamily);
            _typeTable[295] = typeof(global::Windows.UI.Xaml.Data.ICollectionView);
            _typeTable[296] = typeof(global::System.Collections.Generic.IEnumerable<global::System.Double>);
            _typeTable[297] = typeof(global::DevExpress.UI.Xaml.Ribbon.RibbonMenuButton);
            _typeTable[298] = typeof(global::DevExpress.UI.Xaml.Ribbon.Internal.RibbonMenuButtonBase<global::DevExpress.UI.Xaml.Ribbon.IRibbonItem>);
            _typeTable[299] = typeof(global::DevExpress.UI.Xaml.Ribbon.Internal.RibbonMenuButtonBase);
            _typeTable[300] = typeof(global::System.Collections.Generic.IEnumerable<global::DevExpress.UI.Xaml.Ribbon.IRibbonItem>);
            _typeTable[301] = typeof(global::DevExpress.UI.Xaml.Ribbon.ToolbarMenuButton);
            _typeTable[302] = typeof(global::DevExpress.UI.Xaml.Ribbon.Internal.RibbonMenuButtonBase<global::DevExpress.UI.Xaml.Ribbon.IToolbarItem>);
            _typeTable[303] = typeof(global::DevExpress.UI.Xaml.Ribbon.ToolbarItemCollection);
            _typeTable[304] = typeof(global::DevExpress.UI.Xaml.Ribbon.ToolTipItemCollection<global::DevExpress.UI.Xaml.Ribbon.IToolbarItem>);
            _typeTable[305] = typeof(global::DevExpress.UI.Xaml.Internal.TemplatedCollection<global::DevExpress.UI.Xaml.Ribbon.IToolbarItem>);
            _typeTable[306] = typeof(global::DevExpress.UI.Xaml.Internal.TemplatedCollectionBase<global::DevExpress.UI.Xaml.Ribbon.IToolbarItem>);
            _typeTable[307] = typeof(global::DevExpress.Core.Native.ObservableCollectionView<global::DevExpress.UI.Xaml.Ribbon.IToolbarItem>);
            _typeTable[308] = typeof(global::DevExpress.UI.Xaml.Ribbon.IToolbarItem);
            _typeTable[309] = typeof(global::System.Collections.Generic.IEnumerable<global::DevExpress.UI.Xaml.Ribbon.IToolbarItem>);
            _typeTable[310] = typeof(global::DevExpress.UI.Xaml.Ribbon.ContextToolbarMenuButton);
            _typeTable[311] = typeof(global::DevExpress.UI.Xaml.Ribbon.Internal.RibbonMenuButtonBase<global::DevExpress.UI.Xaml.Ribbon.IContextToolbarItem>);
            _typeTable[312] = typeof(global::DevExpress.UI.Xaml.Ribbon.ContextToolbarItemCollection);
            _typeTable[313] = typeof(global::DevExpress.UI.Xaml.Ribbon.ToolTipItemCollection<global::DevExpress.UI.Xaml.Ribbon.IContextToolbarItem>);
            _typeTable[314] = typeof(global::DevExpress.UI.Xaml.Internal.TemplatedCollection<global::DevExpress.UI.Xaml.Ribbon.IContextToolbarItem>);
            _typeTable[315] = typeof(global::DevExpress.UI.Xaml.Internal.TemplatedCollectionBase<global::DevExpress.UI.Xaml.Ribbon.IContextToolbarItem>);
            _typeTable[316] = typeof(global::DevExpress.Core.Native.ObservableCollectionView<global::DevExpress.UI.Xaml.Ribbon.IContextToolbarItem>);
            _typeTable[317] = typeof(global::DevExpress.UI.Xaml.Ribbon.IContextToolbarItem);
            _typeTable[318] = typeof(global::Windows.UI.Xaml.Controls.Orientation);
            _typeTable[319] = typeof(global::System.Collections.Generic.IEnumerable<global::DevExpress.UI.Xaml.Ribbon.IContextToolbarItem>);
            _typeTable[320] = typeof(global::DevExpress.UI.Xaml.Ribbon.RibbonToolbarMenuButton);
            _typeTable[321] = typeof(global::DevExpress.UI.Xaml.Ribbon.Internal.RibbonMenuButtonBase<global::DevExpress.UI.Xaml.Ribbon.IRibbonToolbarItem>);
            _typeTable[322] = typeof(global::DevExpress.UI.Xaml.Ribbon.RibbonToolbarItemCollection);
            _typeTable[323] = typeof(global::DevExpress.UI.Xaml.Ribbon.ToolTipItemCollection<global::DevExpress.UI.Xaml.Ribbon.IRibbonToolbarItem>);
            _typeTable[324] = typeof(global::DevExpress.UI.Xaml.Internal.TemplatedCollection<global::DevExpress.UI.Xaml.Ribbon.IRibbonToolbarItem>);
            _typeTable[325] = typeof(global::DevExpress.UI.Xaml.Internal.TemplatedCollectionBase<global::DevExpress.UI.Xaml.Ribbon.IRibbonToolbarItem>);
            _typeTable[326] = typeof(global::DevExpress.Core.Native.ObservableCollectionView<global::DevExpress.UI.Xaml.Ribbon.IRibbonToolbarItem>);
            _typeTable[327] = typeof(global::DevExpress.UI.Xaml.Ribbon.IRibbonToolbarItem);
            _typeTable[328] = typeof(global::System.Collections.Generic.IEnumerable<global::DevExpress.UI.Xaml.Ribbon.IRibbonToolbarItem>);
            _typeTable[329] = typeof(global::DevExpress.UI.Xaml.Ribbon.RibbonToolbarControl);
            _typeTable[330] = typeof(global::DevExpress.UI.Xaml.Ribbon.RibbonToolbarTabCollection);
            _typeTable[331] = typeof(global::DevExpress.UI.Xaml.Internal.TemplatedCollectionWithOwner<global::DevExpress.UI.Xaml.Ribbon.RibbonToolbarTab, global::DevExpress.UI.Xaml.Ribbon.RibbonControlBase>);
            _typeTable[332] = typeof(global::DevExpress.UI.Xaml.Internal.TemplatedCollection<global::DevExpress.UI.Xaml.Ribbon.RibbonToolbarTab>);
            _typeTable[333] = typeof(global::DevExpress.UI.Xaml.Internal.TemplatedCollectionBase<global::DevExpress.UI.Xaml.Ribbon.RibbonToolbarTab>);
            _typeTable[334] = typeof(global::DevExpress.Core.Native.ObservableCollectionView<global::DevExpress.UI.Xaml.Ribbon.RibbonToolbarTab>);
            _typeTable[335] = typeof(global::DevExpress.UI.Xaml.Ribbon.RibbonToolbarTab);
            _typeTable[336] = typeof(global::DevExpress.UI.Xaml.Ribbon.RibbonToolbarGroupCollection);
            _typeTable[337] = typeof(global::DevExpress.UI.Xaml.Internal.TemplatedCollection<global::DevExpress.UI.Xaml.Ribbon.RibbonToolbarGroup>);
            _typeTable[338] = typeof(global::DevExpress.UI.Xaml.Internal.TemplatedCollectionBase<global::DevExpress.UI.Xaml.Ribbon.RibbonToolbarGroup>);
            _typeTable[339] = typeof(global::DevExpress.Core.Native.ObservableCollectionView<global::DevExpress.UI.Xaml.Ribbon.RibbonToolbarGroup>);
            _typeTable[340] = typeof(global::DevExpress.UI.Xaml.Ribbon.RibbonToolbarGroup);
            _typeTable[341] = typeof(global::DevExpress.UI.Xaml.Ribbon.ToolbarControl);
            _typeTable[342] = typeof(global::DevExpress.UI.Xaml.Ribbon.ToolbarGroupCollection);
            _typeTable[343] = typeof(global::DevExpress.UI.Xaml.Internal.TemplatedCollection<global::DevExpress.UI.Xaml.Ribbon.ToolbarGroup>);
            _typeTable[344] = typeof(global::DevExpress.UI.Xaml.Internal.TemplatedCollectionBase<global::DevExpress.UI.Xaml.Ribbon.ToolbarGroup>);
            _typeTable[345] = typeof(global::DevExpress.Core.Native.ObservableCollectionView<global::DevExpress.UI.Xaml.Ribbon.ToolbarGroup>);
            _typeTable[346] = typeof(global::DevExpress.UI.Xaml.Ribbon.ToolbarGroup);
            _typeTable[347] = typeof(global::DevExpress.UI.Xaml.Ribbon.Internal.HorizontalFlyoutCalculator);
            _typeTable[348] = typeof(global::DevExpress.UI.Xaml.Ribbon.Internal.FlyoutCalculatorBase);
            _typeTable[349] = typeof(global::System.Collections.Generic.IEnumerable<global::DevExpress.UI.Xaml.Ribbon.IRibbonItemBase>);
            _typeTable[350] = typeof(global::DevExpress.UI.Xaml.Ribbon.Internal.ISeparatorManager);
            _typeTable[351] = typeof(global::DevExpress.UI.Xaml.Ribbon.Internal.VerticalFlyoutCalculator);
            _typeTable[352] = typeof(global::DevExpress.UI.Xaml.Ribbon.Internal.RibbonTabsControl);
            _typeTable[353] = typeof(global::DevExpress.UI.Xaml.Ribbon.TabHeaderItemCollection);
            _typeTable[354] = typeof(global::DevExpress.UI.Xaml.Ribbon.ToolTipItemCollection<global::DevExpress.UI.Xaml.Ribbon.IRibbonItemBase>);
            _typeTable[355] = typeof(global::DevExpress.UI.Xaml.Internal.TemplatedCollection<global::DevExpress.UI.Xaml.Ribbon.IRibbonItemBase>);
            _typeTable[356] = typeof(global::DevExpress.UI.Xaml.Internal.TemplatedCollectionBase<global::DevExpress.UI.Xaml.Ribbon.IRibbonItemBase>);
            _typeTable[357] = typeof(global::DevExpress.UI.Xaml.GalleryGroupContainerGenerator);
            _typeTable[358] = typeof(global::DevExpress.UI.Xaml.GalleryItemGroup);
            _typeTable[359] = typeof(global::DevExpress.UI.Xaml.GalleryItemCollection);
            _typeTable[360] = typeof(global::DevExpress.Core.Native.ObservableCollectionView<global::System.Object>);
            _typeTable[361] = typeof(global::DevExpress.UI.Xaml.Internal.DXExpander);
            _typeTable[362] = typeof(global::Windows.UI.Xaml.Media.Animation.Storyboard);
            _typeTable[363] = typeof(global::Windows.UI.Xaml.Controls.UIElementCollection);
            _typeTable[364] = typeof(global::DevExpress.UI.Xaml.Internal.NestedMenuFlyoutControl);
            _typeTable[365] = typeof(global::DevExpress.UI.Xaml.Internal.MenuFlyoutControl);
            _typeTable[366] = typeof(global::DevExpress.UI.Xaml.FlyoutControl);
            _typeTable[367] = typeof(global::DevExpress.UI.Xaml.Native.FlyoutBase);
            _typeTable[368] = typeof(global::DevExpress.UI.Xaml.Native.PopupBase);
            _typeTable[369] = typeof(global::DevExpress.UI.Xaml.Internal.EnabledMode);
            _typeTable[370] = typeof(global::DevExpress.UI.Xaml.Native.IndicatorDirection);
            _typeTable[371] = typeof(global::Windows.UI.Xaml.Duration);
            _typeTable[372] = typeof(global::Windows.Foundation.Rect);
            _typeTable[373] = typeof(global::DevExpress.UI.Xaml.Native.PlacementMode);
            _typeTable[374] = typeof(global::DevExpress.UI.Xaml.Internal.SelectorControl);
            _typeTable[375] = typeof(global::DevExpress.UI.Xaml.Internal.SelectorControlBase);
            _typeTable[376] = typeof(global::DevExpress.UI.Xaml.Internal.SelectionEmptyAction);
            _typeTable[377] = typeof(global::DevExpress.UI.Xaml.Internal.SelectableItemCollection);
            _typeTable[378] = typeof(global::DevExpress.UI.Xaml.Internal.ItemContainerCollectionWithOwner<global::DevExpress.UI.Xaml.Internal.SelectorItemBase, global::DevExpress.UI.Xaml.Internal.ISupportSelection>);
            _typeTable[379] = typeof(global::DevExpress.UI.Xaml.Internal.ItemContainerCollection<global::DevExpress.UI.Xaml.Internal.SelectorItemBase>);
            _typeTable[380] = typeof(global::DevExpress.UI.Xaml.Internal.TemplatedCollectionBase<global::DevExpress.UI.Xaml.Internal.SelectorItemBase>);
            _typeTable[381] = typeof(global::DevExpress.Core.Native.ObservableCollectionView<global::DevExpress.UI.Xaml.Internal.SelectorItemBase>);
            _typeTable[382] = typeof(global::DevExpress.UI.Xaml.Internal.SelectorItemBase);
            _typeTable[383] = typeof(global::DevExpress.UI.Xaml.Internal.TreeNavigator);
            _typeTable[384] = typeof(global::DevExpress.UI.Xaml.Internal.TreeNavigatorNode);
            _typeTable[385] = typeof(global::DevExpress.UI.Xaml.Internal.TreeNavigatorItem);
            _typeTable[386] = typeof(global::DevExpress.UI.Xaml.Internal.TreeNavigatorNodeCollection);
            _typeTable[387] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::DevExpress.UI.Xaml.Internal.TreeNavigatorNode>);
            _typeTable[388] = typeof(global::System.Collections.ObjectModel.Collection<global::DevExpress.UI.Xaml.Internal.TreeNavigatorNode>);
            _typeTable[389] = typeof(global::Telerik.UI.Xaml.Controls.Chart.ChartAnnotationLabelDefinition);
            _typeTable[390] = typeof(global::Telerik.UI.Xaml.Controls.Chart.ChartAnnotationLabelLocation);
            _typeTable[391] = typeof(global::Windows.UI.Xaml.HorizontalAlignment);
            _typeTable[392] = typeof(global::Windows.UI.Xaml.VerticalAlignment);
            _typeTable[393] = typeof(global::Telerik.UI.Xaml.Controls.Chart.ChartPalette);
            _typeTable[394] = typeof(global::Telerik.UI.Xaml.Controls.Chart.PaletteEntryCollection);
            _typeTable[395] = typeof(global::System.Collections.Generic.List<global::Windows.UI.Xaml.Media.Brush>);
            _typeTable[396] = typeof(global::Telerik.UI.Xaml.Controls.Data.HexView.AngledHexLayoutDefinition);
            _typeTable[397] = typeof(global::Telerik.UI.Xaml.Controls.Data.HexView.HexLayoutDefinitionBase);
            _typeTable[398] = typeof(global::Telerik.UI.Xaml.Controls.Data.HexView.FlatLooseHexLayoutDefinition);
            _typeTable[399] = typeof(global::Telerik.UI.Xaml.Controls.Data.HexView.FlatTightHexLayoutDefinition);
            _typeTable[400] = typeof(global::Telerik.UI.Xaml.Controls.Input.HighlightStyle);
            _typeTable[401] = typeof(global::Telerik.UI.Xaml.Controls.Input.FontWeightName);
            _typeTable[402] = typeof(global::Windows.UI.Text.FontStyle);
            _typeTable[403] = typeof(global::Telerik.UI.Xaml.Controls.Input.CalendarCellStyle);
            _typeTable[404] = typeof(global::Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu);
            _typeTable[405] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem>);
            _typeTable[406] = typeof(global::System.Collections.ObjectModel.Collection<global::Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem>);
            _typeTable[407] = typeof(global::Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem);
            _typeTable[408] = typeof(global::Telerik.UI.Xaml.Controls.Primitives.Menu.CommandService);
            _typeTable[409] = typeof(global::Telerik.UI.Xaml.Controls.Primitives.CommandServiceBase<global::Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu>);
            _typeTable[410] = typeof(global::Telerik.UI.Xaml.Controls.Primitives.ServiceBase<global::Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu>);
            _typeTable[411] = typeof(global::Telerik.UI.Xaml.Controls.Primitives.AttachableObject<global::Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu>);
            _typeTable[412] = typeof(global::Telerik.UI.Xaml.Controls.Primitives.CommandCollection<global::Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu>);
            _typeTable[413] = typeof(global::Telerik.UI.Xaml.Controls.Primitives.AttachableObjectCollection<global::Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu, global::Telerik.UI.Xaml.Controls.Primitives.ControlCommandBase<global::Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu>>);
            _typeTable[414] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::Telerik.UI.Xaml.Controls.Primitives.ControlCommandBase<global::Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu>>);
            _typeTable[415] = typeof(global::System.Collections.ObjectModel.Collection<global::Telerik.UI.Xaml.Controls.Primitives.ControlCommandBase<global::Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu>>);
            _typeTable[416] = typeof(global::Telerik.UI.Xaml.Controls.Primitives.ControlCommandBase<global::Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu>);
            _typeTable[417] = typeof(global::Telerik.UI.Xaml.Controls.Primitives.RadialMenuTriggerBehavior);
            _typeTable[418] = typeof(global::Telerik.UI.Xaml.Controls.Primitives.AttachableObject<global::Windows.UI.Xaml.FrameworkElement>);
            _typeTable[419] = typeof(global::Telerik.UI.Xaml.Controls.Primitives.RadialMenuAttachTriggers);
            _typeTable[420] = typeof(global::Telerik.UI.Xaml.Controls.Primitives.BusyIndicator.BusyIndicatorAnimationAdapter);
        }

        private int LookupTypeIndexByName(string typeName)
        {
            if (_typeNameTable == null)
            {
                InitTypeTables();
            }
            for (int i=0; i<_typeNameTable.Length; i++)
            {
                if(0 == string.CompareOrdinal(_typeNameTable[i], typeName))
                {
                    return i;
                }
            }
            return -1;
        }

        private int LookupTypeIndexByType(global::System.Type type)
        {
            if (_typeTable == null)
            {
                InitTypeTables();
            }
            for(int i=0; i<_typeTable.Length; i++)
            {
                if(type == _typeTable[i])
                {
                    return i;
                }
            }
            return -1;
        }

        private object Activate_0_AnaSayfa() { return new global::RaspberryPiV3.AnaSayfa(); }
        private object Activate_3_RadDataGrid() { return new global::Telerik.UI.Xaml.Controls.Grid.RadDataGrid(); }
        private object Activate_8_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::Telerik.UI.Xaml.Controls.Grid.DataGridColumn>(); }
        private object Activate_9_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Telerik.UI.Xaml.Controls.Grid.DataGridColumn>(); }
        private object Activate_34_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::Telerik.UI.Xaml.Controls.Primitives.ControlCommandBase<global::Telerik.UI.Xaml.Controls.Grid.RadDataGrid>>(); }
        private object Activate_35_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Telerik.UI.Xaml.Controls.Primitives.ControlCommandBase<global::Telerik.UI.Xaml.Controls.Grid.RadDataGrid>>(); }
        private object Activate_41_DataGridDragBehavior() { return new global::Telerik.UI.Xaml.Controls.Grid.DataGridDragBehavior(); }
        private object Activate_46_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::Telerik.Data.Core.SortDescriptorBase>(); }
        private object Activate_47_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Telerik.Data.Core.SortDescriptorBase>(); }
        private object Activate_56_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::Telerik.Data.Core.GroupDescriptorBase>(); }
        private object Activate_57_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Telerik.Data.Core.GroupDescriptorBase>(); }
        private object Activate_61_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::Telerik.Data.Core.FilterDescriptorBase>(); }
        private object Activate_62_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Telerik.Data.Core.FilterDescriptorBase>(); }
        private object Activate_66_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::Telerik.Data.Core.AggregateDescriptorBase>(); }
        private object Activate_67_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Telerik.Data.Core.AggregateDescriptorBase>(); }
        private object Activate_70_ObjectSelector() { return new global::Telerik.UI.Xaml.Controls.Primitives.ObjectSelector<global::Windows.UI.Xaml.Media.Brush>(); }
        private object Activate_78_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::System.Object>(); }
        private object Activate_79_Collection() { return new global::System.Collections.ObjectModel.Collection<global::System.Object>(); }
        private object Activate_80_DataGridTextColumn() { return new global::Telerik.UI.Xaml.Controls.Grid.DataGridTextColumn(); }
        private object Activate_82_Bolgeler() { return new global::RaspberryPiV3.Bolgeler(); }
        private object Activate_83_DataGridNumericalColumn() { return new global::Telerik.UI.Xaml.Controls.Grid.DataGridNumericalColumn(); }
        private object Activate_84_DataGridDateColumn() { return new global::Telerik.UI.Xaml.Controls.Grid.DataGridDateColumn(); }
        private object Activate_85_DepoDurumu() { return new global::RaspberryPiV3.DepoDurumu(); }
        private object Activate_86_Depolar() { return new global::RaspberryPiV3.Depolar(); }
        private object Activate_87_Iletisim() { return new global::RaspberryPiV3.Iletisim(); }
        private object Activate_88_Kullanicikayit() { return new global::RaspberryPiV3.Kullanicikayit(); }
        private object Activate_89_Kullanicilar() { return new global::RaspberryPiV3.Kullanicilar(); }
        private object Activate_90_MainPage() { return new global::RaspberryPiV3.MainPage(); }
        private object Activate_91_RadDatePicker() { return new global::Telerik.UI.Xaml.Controls.Input.RadDatePicker(); }
        private object Activate_99_Urunler() { return new global::RaspberryPiV3.Urunler(); }
        private object Activate_100_TitleSettings() { return new global::DevExpress.UI.Xaml.TitleSettings(); }
        private object Activate_102_PdfOverlayBarLocation() { return new global::DevExpress.UI.Xaml.Controls.PdfOverlayBarLocation(); }
        private object Activate_105_SimpleSettingsBarOverlaySettings() { return new global::DevExpress.UI.Xaml.Controls.SimpleSettingsBarOverlaySettings(); }
        private object Activate_107_SettingsBarItemCollection() { return new global::DevExpress.UI.Xaml.Controls.SettingsBarItemCollection(); }
        private object Activate_112_PdfViewerControl() { return new global::DevExpress.UI.Xaml.Controls.PdfViewerControl(); }
        private object Activate_123_PdfViewerErrorWrapper() { return new global::DevExpress.UI.Xaml.Controls.PdfViewerErrorWrapper(); }
        private object Activate_126_RadialContextMenuCommandBase() { return new global::DevExpress.UI.Xaml.Controls.RadialContextMenuCommandBase(); }
        private object Activate_127_DXControl() { return new global::DevExpress.Core.Native.DXControl(); }
        private object Activate_129_ViewInfo() { return new global::DevExpress.UI.Xaml.Controls.Internal.ViewInfo(); }
        private object Activate_130_RadialMenuControlBase() { return new global::DevExpress.UI.Xaml.Controls.RadialMenuControlBase(); }
        private object Activate_139_PdfSelectionState() { return new global::DevExpress.Pdf.Native.PdfSelectionState(); }
        private object Activate_141_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::DevExpress.Pdf.Native.PdfOutlineTreeListItem>(); }
        private object Activate_142_Collection() { return new global::System.Collections.ObjectModel.Collection<global::DevExpress.Pdf.Native.PdfOutlineTreeListItem>(); }
        private object Activate_147_PdfFileAttachment() { return new global::DevExpress.Pdf.PdfFileAttachment(); }
        private object Activate_152_PdfFormData() { return new global::DevExpress.Pdf.PdfFormData(); }
        private object Activate_154_List() { return new global::System.Collections.Generic.List<global::DevExpress.UI.Xaml.Controls.IPdfTextSearchResult>(); }
        private object Activate_166_ColorGroup() { return new global::DevExpress.UI.Xaml.Editors.ColorGroup(); }
        private object Activate_167_ColorList() { return new global::DevExpress.UI.Xaml.Editors.ColorList(); }
        private object Activate_168_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::Windows.UI.Color>(); }
        private object Activate_169_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Windows.UI.Color>(); }
        private object Activate_171_BrushList() { return new global::DevExpress.UI.Xaml.Editors.BrushList(); }
        private object Activate_173_ColorEdit() { return new global::DevExpress.UI.Xaml.Editors.ColorEdit(); }
        private object Activate_174_ColorGroupsList() { return new global::DevExpress.UI.Xaml.Editors.ColorGroupsList(); }
        private object Activate_181_ColorPicker() { return new global::DevExpress.UI.Xaml.Editors.ColorPicker(); }
        private object Activate_182_ColorModelCollection() { return new global::DevExpress.UI.Xaml.Editors.ColorModelCollection(); }
        private object Activate_188_PopupSettings() { return new global::DevExpress.UI.Xaml.Editors.PopupSettings(); }
        private object Activate_190_ColorGalleryItemContainerGenerator() { return new global::DevExpress.UI.Xaml.Editors.Internal.ColorGalleryItemContainerGenerator(); }
        private object Activate_191_GalleryItemContainerGenerator() { return new global::DevExpress.UI.Xaml.GalleryItemContainerGenerator(); }
        private object Activate_194_HamburgerMenuFrame() { return new global::DevExpress.UI.Xaml.Layout.HamburgerMenuFrame(); }
        private object Activate_196_DXFrame() { return new global::DevExpress.UI.Xaml.Layout.DXFrame(); }
        private object Activate_198_HamburgerMenu() { return new global::DevExpress.UI.Xaml.Layout.HamburgerMenu(); }
        private object Activate_199_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::DevExpress.UI.Xaml.Layout.Internal.IHamburgerMenuItem>(); }
        private object Activate_200_Collection() { return new global::System.Collections.ObjectModel.Collection<global::DevExpress.UI.Xaml.Layout.Internal.IHamburgerMenuItem>(); }
        private object Activate_205_TileBarFrame() { return new global::DevExpress.UI.Xaml.Layout.TileBarFrame(); }
        private object Activate_207_TileBar() { return new global::DevExpress.UI.Xaml.Layout.TileBar(); }
        private object Activate_209_veItemsControl() { return new global::DevExpress.UI.Xaml.Layout.VisualElements.veItemsControl(); }
        private object Activate_212_BackstageTabItem() { return new global::DevExpress.UI.Xaml.Ribbon.BackstageTabItem(); }
        private object Activate_213_RibbonSelectorItemBase() { return new global::DevExpress.UI.Xaml.Ribbon.Internal.RibbonSelectorItemBase(); }
        private object Activate_227_BackstageView() { return new global::DevExpress.UI.Xaml.Ribbon.BackstageView(); }
        private object Activate_231_TemplatedCollection() { return new global::DevExpress.UI.Xaml.Internal.TemplatedCollection<global::DevExpress.UI.Xaml.Ribbon.IBackstageItem>(); }
        private object Activate_237_BackstageButtonItem() { return new global::DevExpress.UI.Xaml.Ribbon.BackstageButtonItem(); }
        private object Activate_239_HelpPane() { return new global::DevExpress.UI.Xaml.Ribbon.HelpPane(); }
        private object Activate_241_RibbonHelpPaneItemCollection() { return new global::DevExpress.UI.Xaml.Ribbon.RibbonHelpPaneItemCollection(); }
        private object Activate_243_TemplatedCollection() { return new global::DevExpress.UI.Xaml.Internal.TemplatedCollection<global::DevExpress.UI.Xaml.Ribbon.IRibbonHelpPaneItem>(); }
        private object Activate_250_ToolbarHelpPane() { return new global::DevExpress.UI.Xaml.Ribbon.ToolbarHelpPane(); }
        private object Activate_251_ToolbarHelpPaneItemCollection() { return new global::DevExpress.UI.Xaml.Ribbon.ToolbarHelpPaneItemCollection(); }
        private object Activate_253_TemplatedCollection() { return new global::DevExpress.UI.Xaml.Internal.TemplatedCollection<global::DevExpress.UI.Xaml.Ribbon.IToolbarHelpPaneItem>(); }
        private object Activate_257_RibbonControl() { return new global::DevExpress.UI.Xaml.Ribbon.RibbonControl(); }
        private object Activate_261_TemplatedCollection() { return new global::DevExpress.UI.Xaml.Internal.TemplatedCollection<global::DevExpress.UI.Xaml.Ribbon.RibbonTab>(); }
        private object Activate_264_RibbonTab() { return new global::DevExpress.UI.Xaml.Ribbon.RibbonTab(); }
        private object Activate_266_RibbonGroupCollection() { return new global::DevExpress.UI.Xaml.Ribbon.RibbonGroupCollection(); }
        private object Activate_267_TemplatedCollection() { return new global::DevExpress.UI.Xaml.Internal.TemplatedCollection<global::DevExpress.UI.Xaml.Ribbon.RibbonGroup>(); }
        private object Activate_270_RibbonGroup() { return new global::DevExpress.UI.Xaml.Ribbon.RibbonGroup(); }
        private object Activate_276_RibbonItemCollection() { return new global::DevExpress.UI.Xaml.Ribbon.RibbonItemCollection(); }
        private object Activate_278_TemplatedCollection() { return new global::DevExpress.UI.Xaml.Internal.TemplatedCollection<global::DevExpress.UI.Xaml.Ribbon.IRibbonItem>(); }
        private object Activate_288_RibbonColorEditBase() { return new global::DevExpress.UI.Xaml.Ribbon.RibbonColorEditBase(); }
        private object Activate_292_RibbonFontEditBase() { return new global::DevExpress.UI.Xaml.Ribbon.RibbonFontEditBase(); }
        private object Activate_293_FontEdit() { return new global::DevExpress.UI.Xaml.Editors.FontEdit(); }
        private object Activate_297_RibbonMenuButton() { return new global::DevExpress.UI.Xaml.Ribbon.RibbonMenuButton(); }
        private object Activate_301_ToolbarMenuButton() { return new global::DevExpress.UI.Xaml.Ribbon.ToolbarMenuButton(); }
        private object Activate_303_ToolbarItemCollection() { return new global::DevExpress.UI.Xaml.Ribbon.ToolbarItemCollection(); }
        private object Activate_305_TemplatedCollection() { return new global::DevExpress.UI.Xaml.Internal.TemplatedCollection<global::DevExpress.UI.Xaml.Ribbon.IToolbarItem>(); }
        private object Activate_310_ContextToolbarMenuButton() { return new global::DevExpress.UI.Xaml.Ribbon.ContextToolbarMenuButton(); }
        private object Activate_312_ContextToolbarItemCollection() { return new global::DevExpress.UI.Xaml.Ribbon.ContextToolbarItemCollection(); }
        private object Activate_314_TemplatedCollection() { return new global::DevExpress.UI.Xaml.Internal.TemplatedCollection<global::DevExpress.UI.Xaml.Ribbon.IContextToolbarItem>(); }
        private object Activate_320_RibbonToolbarMenuButton() { return new global::DevExpress.UI.Xaml.Ribbon.RibbonToolbarMenuButton(); }
        private object Activate_322_RibbonToolbarItemCollection() { return new global::DevExpress.UI.Xaml.Ribbon.RibbonToolbarItemCollection(); }
        private object Activate_324_TemplatedCollection() { return new global::DevExpress.UI.Xaml.Internal.TemplatedCollection<global::DevExpress.UI.Xaml.Ribbon.IRibbonToolbarItem>(); }
        private object Activate_329_RibbonToolbarControl() { return new global::DevExpress.UI.Xaml.Ribbon.RibbonToolbarControl(); }
        private object Activate_332_TemplatedCollection() { return new global::DevExpress.UI.Xaml.Internal.TemplatedCollection<global::DevExpress.UI.Xaml.Ribbon.RibbonToolbarTab>(); }
        private object Activate_335_RibbonToolbarTab() { return new global::DevExpress.UI.Xaml.Ribbon.RibbonToolbarTab(); }
        private object Activate_336_RibbonToolbarGroupCollection() { return new global::DevExpress.UI.Xaml.Ribbon.RibbonToolbarGroupCollection(); }
        private object Activate_337_TemplatedCollection() { return new global::DevExpress.UI.Xaml.Internal.TemplatedCollection<global::DevExpress.UI.Xaml.Ribbon.RibbonToolbarGroup>(); }
        private object Activate_340_RibbonToolbarGroup() { return new global::DevExpress.UI.Xaml.Ribbon.RibbonToolbarGroup(); }
        private object Activate_341_ToolbarControl() { return new global::DevExpress.UI.Xaml.Ribbon.ToolbarControl(); }
        private object Activate_342_ToolbarGroupCollection() { return new global::DevExpress.UI.Xaml.Ribbon.ToolbarGroupCollection(); }
        private object Activate_343_TemplatedCollection() { return new global::DevExpress.UI.Xaml.Internal.TemplatedCollection<global::DevExpress.UI.Xaml.Ribbon.ToolbarGroup>(); }
        private object Activate_346_ToolbarGroup() { return new global::DevExpress.UI.Xaml.Ribbon.ToolbarGroup(); }
        private object Activate_347_HorizontalFlyoutCalculator() { return new global::DevExpress.UI.Xaml.Ribbon.Internal.HorizontalFlyoutCalculator(); }
        private object Activate_351_VerticalFlyoutCalculator() { return new global::DevExpress.UI.Xaml.Ribbon.Internal.VerticalFlyoutCalculator(); }
        private object Activate_352_RibbonTabsControl() { return new global::DevExpress.UI.Xaml.Ribbon.Internal.RibbonTabsControl(); }
        private object Activate_353_TabHeaderItemCollection() { return new global::DevExpress.UI.Xaml.Ribbon.TabHeaderItemCollection(); }
        private object Activate_355_TemplatedCollection() { return new global::DevExpress.UI.Xaml.Internal.TemplatedCollection<global::DevExpress.UI.Xaml.Ribbon.IRibbonItemBase>(); }
        private object Activate_357_GalleryGroupContainerGenerator() { return new global::DevExpress.UI.Xaml.GalleryGroupContainerGenerator(); }
        private object Activate_358_GalleryItemGroup() { return new global::DevExpress.UI.Xaml.GalleryItemGroup(); }
        private object Activate_359_GalleryItemCollection() { return new global::DevExpress.UI.Xaml.GalleryItemCollection(); }
        private object Activate_361_DXExpander() { return new global::DevExpress.UI.Xaml.Internal.DXExpander(); }
        private object Activate_364_NestedMenuFlyoutControl() { return new global::DevExpress.UI.Xaml.Internal.NestedMenuFlyoutControl(); }
        private object Activate_365_MenuFlyoutControl() { return new global::DevExpress.UI.Xaml.Internal.MenuFlyoutControl(); }
        private object Activate_366_FlyoutControl() { return new global::DevExpress.UI.Xaml.FlyoutControl(); }
        private object Activate_367_FlyoutBase() { return new global::DevExpress.UI.Xaml.Native.FlyoutBase(); }
        private object Activate_368_PopupBase() { return new global::DevExpress.UI.Xaml.Native.PopupBase(); }
        private object Activate_374_SelectorControl() { return new global::DevExpress.UI.Xaml.Internal.SelectorControl(); }
        private object Activate_379_ItemContainerCollection() { return new global::DevExpress.UI.Xaml.Internal.ItemContainerCollection<global::DevExpress.UI.Xaml.Internal.SelectorItemBase>(); }
        private object Activate_383_TreeNavigator() { return new global::DevExpress.UI.Xaml.Internal.TreeNavigator(); }
        private object Activate_385_TreeNavigatorItem() { return new global::DevExpress.UI.Xaml.Internal.TreeNavigatorItem(); }
        private object Activate_386_TreeNavigatorNodeCollection() { return new global::DevExpress.UI.Xaml.Internal.TreeNavigatorNodeCollection(); }
        private object Activate_387_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::DevExpress.UI.Xaml.Internal.TreeNavigatorNode>(); }
        private object Activate_388_Collection() { return new global::System.Collections.ObjectModel.Collection<global::DevExpress.UI.Xaml.Internal.TreeNavigatorNode>(); }
        private object Activate_389_ChartAnnotationLabelDefinition() { return new global::Telerik.UI.Xaml.Controls.Chart.ChartAnnotationLabelDefinition(); }
        private object Activate_393_ChartPalette() { return new global::Telerik.UI.Xaml.Controls.Chart.ChartPalette(); }
        private object Activate_394_PaletteEntryCollection() { return new global::Telerik.UI.Xaml.Controls.Chart.PaletteEntryCollection(); }
        private object Activate_395_List() { return new global::System.Collections.Generic.List<global::Windows.UI.Xaml.Media.Brush>(); }
        private object Activate_396_AngledHexLayoutDefinition() { return new global::Telerik.UI.Xaml.Controls.Data.HexView.AngledHexLayoutDefinition(); }
        private object Activate_398_FlatLooseHexLayoutDefinition() { return new global::Telerik.UI.Xaml.Controls.Data.HexView.FlatLooseHexLayoutDefinition(); }
        private object Activate_399_FlatTightHexLayoutDefinition() { return new global::Telerik.UI.Xaml.Controls.Data.HexView.FlatTightHexLayoutDefinition(); }
        private object Activate_400_HighlightStyle() { return new global::Telerik.UI.Xaml.Controls.Input.HighlightStyle(); }
        private object Activate_403_CalendarCellStyle() { return new global::Telerik.UI.Xaml.Controls.Input.CalendarCellStyle(); }
        private object Activate_404_RadRadialMenu() { return new global::Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu(); }
        private object Activate_405_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem>(); }
        private object Activate_406_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem>(); }
        private object Activate_407_RadialMenuItem() { return new global::Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem(); }
        private object Activate_414_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::Telerik.UI.Xaml.Controls.Primitives.ControlCommandBase<global::Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu>>(); }
        private object Activate_415_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Telerik.UI.Xaml.Controls.Primitives.ControlCommandBase<global::Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu>>(); }
        private object Activate_417_RadialMenuTriggerBehavior() { return new global::Telerik.UI.Xaml.Controls.Primitives.RadialMenuTriggerBehavior(); }
        private object Activate_420_BusyIndicatorAnimationAdapter() { return new global::Telerik.UI.Xaml.Controls.Primitives.BusyIndicator.BusyIndicatorAnimationAdapter(); }
        private void VectorAdd_7_DataGridColumnCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Telerik.UI.Xaml.Controls.Grid.DataGridColumn>)instance;
            var newItem = (global::Telerik.UI.Xaml.Controls.Grid.DataGridColumn)item;
            collection.Add(newItem);
        }
        private void VectorAdd_8_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Telerik.UI.Xaml.Controls.Grid.DataGridColumn>)instance;
            var newItem = (global::Telerik.UI.Xaml.Controls.Grid.DataGridColumn)item;
            collection.Add(newItem);
        }
        private void VectorAdd_9_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Telerik.UI.Xaml.Controls.Grid.DataGridColumn>)instance;
            var newItem = (global::Telerik.UI.Xaml.Controls.Grid.DataGridColumn)item;
            collection.Add(newItem);
        }
        private void VectorAdd_32_CommandCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Telerik.UI.Xaml.Controls.Primitives.ControlCommandBase<global::Telerik.UI.Xaml.Controls.Grid.RadDataGrid>>)instance;
            var newItem = (global::Telerik.UI.Xaml.Controls.Primitives.ControlCommandBase<global::Telerik.UI.Xaml.Controls.Grid.RadDataGrid>)item;
            collection.Add(newItem);
        }
        private void VectorAdd_33_AttachableObjectCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Telerik.UI.Xaml.Controls.Primitives.ControlCommandBase<global::Telerik.UI.Xaml.Controls.Grid.RadDataGrid>>)instance;
            var newItem = (global::Telerik.UI.Xaml.Controls.Primitives.ControlCommandBase<global::Telerik.UI.Xaml.Controls.Grid.RadDataGrid>)item;
            collection.Add(newItem);
        }
        private void VectorAdd_34_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Telerik.UI.Xaml.Controls.Primitives.ControlCommandBase<global::Telerik.UI.Xaml.Controls.Grid.RadDataGrid>>)instance;
            var newItem = (global::Telerik.UI.Xaml.Controls.Primitives.ControlCommandBase<global::Telerik.UI.Xaml.Controls.Grid.RadDataGrid>)item;
            collection.Add(newItem);
        }
        private void VectorAdd_35_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Telerik.UI.Xaml.Controls.Primitives.ControlCommandBase<global::Telerik.UI.Xaml.Controls.Grid.RadDataGrid>>)instance;
            var newItem = (global::Telerik.UI.Xaml.Controls.Primitives.ControlCommandBase<global::Telerik.UI.Xaml.Controls.Grid.RadDataGrid>)item;
            collection.Add(newItem);
        }
        private void VectorAdd_44_SortDescriptorCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Telerik.Data.Core.SortDescriptorBase>)instance;
            var newItem = (global::Telerik.Data.Core.SortDescriptorBase)item;
            collection.Add(newItem);
        }
        private void VectorAdd_45_DataDescriptorCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Telerik.Data.Core.SortDescriptorBase>)instance;
            var newItem = (global::Telerik.Data.Core.SortDescriptorBase)item;
            collection.Add(newItem);
        }
        private void VectorAdd_46_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Telerik.Data.Core.SortDescriptorBase>)instance;
            var newItem = (global::Telerik.Data.Core.SortDescriptorBase)item;
            collection.Add(newItem);
        }
        private void VectorAdd_47_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Telerik.Data.Core.SortDescriptorBase>)instance;
            var newItem = (global::Telerik.Data.Core.SortDescriptorBase)item;
            collection.Add(newItem);
        }
        private void VectorAdd_54_GroupDescriptorCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Telerik.Data.Core.GroupDescriptorBase>)instance;
            var newItem = (global::Telerik.Data.Core.GroupDescriptorBase)item;
            collection.Add(newItem);
        }
        private void VectorAdd_55_DataDescriptorCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Telerik.Data.Core.GroupDescriptorBase>)instance;
            var newItem = (global::Telerik.Data.Core.GroupDescriptorBase)item;
            collection.Add(newItem);
        }
        private void VectorAdd_56_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Telerik.Data.Core.GroupDescriptorBase>)instance;
            var newItem = (global::Telerik.Data.Core.GroupDescriptorBase)item;
            collection.Add(newItem);
        }
        private void VectorAdd_57_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Telerik.Data.Core.GroupDescriptorBase>)instance;
            var newItem = (global::Telerik.Data.Core.GroupDescriptorBase)item;
            collection.Add(newItem);
        }
        private void VectorAdd_59_FilterDescriptorCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Telerik.Data.Core.FilterDescriptorBase>)instance;
            var newItem = (global::Telerik.Data.Core.FilterDescriptorBase)item;
            collection.Add(newItem);
        }
        private void VectorAdd_60_DataDescriptorCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Telerik.Data.Core.FilterDescriptorBase>)instance;
            var newItem = (global::Telerik.Data.Core.FilterDescriptorBase)item;
            collection.Add(newItem);
        }
        private void VectorAdd_61_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Telerik.Data.Core.FilterDescriptorBase>)instance;
            var newItem = (global::Telerik.Data.Core.FilterDescriptorBase)item;
            collection.Add(newItem);
        }
        private void VectorAdd_62_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Telerik.Data.Core.FilterDescriptorBase>)instance;
            var newItem = (global::Telerik.Data.Core.FilterDescriptorBase)item;
            collection.Add(newItem);
        }
        private void VectorAdd_64_AggregateDescriptorCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Telerik.Data.Core.AggregateDescriptorBase>)instance;
            var newItem = (global::Telerik.Data.Core.AggregateDescriptorBase)item;
            collection.Add(newItem);
        }
        private void VectorAdd_65_DataDescriptorCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Telerik.Data.Core.AggregateDescriptorBase>)instance;
            var newItem = (global::Telerik.Data.Core.AggregateDescriptorBase)item;
            collection.Add(newItem);
        }
        private void VectorAdd_66_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Telerik.Data.Core.AggregateDescriptorBase>)instance;
            var newItem = (global::Telerik.Data.Core.AggregateDescriptorBase)item;
            collection.Add(newItem);
        }
        private void VectorAdd_67_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Telerik.Data.Core.AggregateDescriptorBase>)instance;
            var newItem = (global::Telerik.Data.Core.AggregateDescriptorBase)item;
            collection.Add(newItem);
        }
        private void VectorAdd_78_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::System.Object>)instance;
            var newItem = (global::System.Object)item;
            collection.Add(newItem);
        }
        private void VectorAdd_79_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::System.Object>)instance;
            var newItem = (global::System.Object)item;
            collection.Add(newItem);
        }
        private void VectorAdd_107_SettingsBarItemCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::DevExpress.UI.Xaml.Controls.ISettingsBarItem>)instance;
            var newItem = (global::DevExpress.UI.Xaml.Controls.ISettingsBarItem)item;
            collection.Add(newItem);
        }
        private void VectorAdd_108_ObservableCollectionView(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::DevExpress.UI.Xaml.Controls.ISettingsBarItem>)instance;
            var newItem = (global::DevExpress.UI.Xaml.Controls.ISettingsBarItem)item;
            collection.Add(newItem);
        }
        private void VectorAdd_140_PdfOutlineTreeListItemCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::DevExpress.Pdf.Native.PdfOutlineTreeListItem>)instance;
            var newItem = (global::DevExpress.Pdf.Native.PdfOutlineTreeListItem)item;
            collection.Add(newItem);
        }
        private void VectorAdd_141_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::DevExpress.Pdf.Native.PdfOutlineTreeListItem>)instance;
            var newItem = (global::DevExpress.Pdf.Native.PdfOutlineTreeListItem)item;
            collection.Add(newItem);
        }
        private void VectorAdd_142_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::DevExpress.Pdf.Native.PdfOutlineTreeListItem>)instance;
            var newItem = (global::DevExpress.Pdf.Native.PdfOutlineTreeListItem)item;
            collection.Add(newItem);
        }
        private void VectorAdd_145_IList(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::DevExpress.Pdf.Native.PdfFileAttachmentListItem>)instance;
            var newItem = (global::DevExpress.Pdf.Native.PdfFileAttachmentListItem)item;
            collection.Add(newItem);
        }
        private void VectorAdd_154_List(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::DevExpress.UI.Xaml.Controls.IPdfTextSearchResult>)instance;
            var newItem = (global::DevExpress.UI.Xaml.Controls.IPdfTextSearchResult)item;
            collection.Add(newItem);
        }
        private void VectorAdd_156_IList(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::DevExpress.Pdf.PdfOrientedRectangle>)instance;
            var newItem = (global::DevExpress.Pdf.PdfOrientedRectangle)item;
            collection.Add(newItem);
        }
        private void VectorAdd_158_IList(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::DevExpress.Pdf.PdfWord>)instance;
            var newItem = (global::DevExpress.Pdf.PdfWord)item;
            collection.Add(newItem);
        }
        private void VectorAdd_160_IList(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::DevExpress.Pdf.PdfCharacter>)instance;
            var newItem = (global::DevExpress.Pdf.PdfCharacter)item;
            collection.Add(newItem);
        }
        private void VectorAdd_167_ColorList(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Windows.UI.Color>)instance;
            var newItem = (global::Windows.UI.Color)item;
            collection.Add(newItem);
        }
        private void VectorAdd_168_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Windows.UI.Color>)instance;
            var newItem = (global::Windows.UI.Color)item;
            collection.Add(newItem);
        }
        private void VectorAdd_169_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Windows.UI.Color>)instance;
            var newItem = (global::Windows.UI.Color)item;
            collection.Add(newItem);
        }
        private void VectorAdd_171_BrushList(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.Media.SolidColorBrush>)instance;
            var newItem = (global::Windows.UI.Xaml.Media.SolidColorBrush)item;
            collection.Add(newItem);
        }
        private void VectorAdd_172_ObservableCollectionView(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.Media.SolidColorBrush>)instance;
            var newItem = (global::Windows.UI.Xaml.Media.SolidColorBrush)item;
            collection.Add(newItem);
        }
        private void VectorAdd_174_ColorGroupsList(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::DevExpress.UI.Xaml.Editors.ColorGroup>)instance;
            var newItem = (global::DevExpress.UI.Xaml.Editors.ColorGroup)item;
            collection.Add(newItem);
        }
        private void VectorAdd_175_ObservableCollectionView(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::DevExpress.UI.Xaml.Editors.ColorGroup>)instance;
            var newItem = (global::DevExpress.UI.Xaml.Editors.ColorGroup)item;
            collection.Add(newItem);
        }
        private void VectorAdd_182_ColorModelCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::DevExpress.UI.Xaml.Editors.ColorModelBase>)instance;
            var newItem = (global::DevExpress.UI.Xaml.Editors.ColorModelBase)item;
            collection.Add(newItem);
        }
        private void VectorAdd_183_ObservableCollectionView(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::DevExpress.UI.Xaml.Editors.ColorModelBase>)instance;
            var newItem = (global::DevExpress.UI.Xaml.Editors.ColorModelBase)item;
            collection.Add(newItem);
        }
        private void VectorAdd_199_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::DevExpress.UI.Xaml.Layout.Internal.IHamburgerMenuItem>)instance;
            var newItem = (global::DevExpress.UI.Xaml.Layout.Internal.IHamburgerMenuItem)item;
            collection.Add(newItem);
        }
        private void VectorAdd_200_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::DevExpress.UI.Xaml.Layout.Internal.IHamburgerMenuItem>)instance;
            var newItem = (global::DevExpress.UI.Xaml.Layout.Internal.IHamburgerMenuItem)item;
            collection.Add(newItem);
        }
        private void VectorAdd_229_BackstageItemCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::DevExpress.UI.Xaml.Ribbon.IBackstageItem>)instance;
            var newItem = (global::DevExpress.UI.Xaml.Ribbon.IBackstageItem)item;
            collection.Add(newItem);
        }
        private void VectorAdd_230_TemplatedCollectionWithOwner(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::DevExpress.UI.Xaml.Ribbon.IBackstageItem>)instance;
            var newItem = (global::DevExpress.UI.Xaml.Ribbon.IBackstageItem)item;
            collection.Add(newItem);
        }
        private void VectorAdd_231_TemplatedCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::DevExpress.UI.Xaml.Ribbon.IBackstageItem>)instance;
            var newItem = (global::DevExpress.UI.Xaml.Ribbon.IBackstageItem)item;
            collection.Add(newItem);
        }
        private void VectorAdd_232_TemplatedCollectionBase(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::DevExpress.UI.Xaml.Ribbon.IBackstageItem>)instance;
            var newItem = (global::DevExpress.UI.Xaml.Ribbon.IBackstageItem)item;
            collection.Add(newItem);
        }
        private void VectorAdd_233_ObservableCollectionView(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::DevExpress.UI.Xaml.Ribbon.IBackstageItem>)instance;
            var newItem = (global::DevExpress.UI.Xaml.Ribbon.IBackstageItem)item;
            collection.Add(newItem);
        }
        private void VectorAdd_241_RibbonHelpPaneItemCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::DevExpress.UI.Xaml.Ribbon.IRibbonHelpPaneItem>)instance;
            var newItem = (global::DevExpress.UI.Xaml.Ribbon.IRibbonHelpPaneItem)item;
            collection.Add(newItem);
        }
        private void VectorAdd_242_ToolTipItemCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::DevExpress.UI.Xaml.Ribbon.IRibbonHelpPaneItem>)instance;
            var newItem = (global::DevExpress.UI.Xaml.Ribbon.IRibbonHelpPaneItem)item;
            collection.Add(newItem);
        }
        private void VectorAdd_243_TemplatedCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::DevExpress.UI.Xaml.Ribbon.IRibbonHelpPaneItem>)instance;
            var newItem = (global::DevExpress.UI.Xaml.Ribbon.IRibbonHelpPaneItem)item;
            collection.Add(newItem);
        }
        private void VectorAdd_244_TemplatedCollectionBase(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::DevExpress.UI.Xaml.Ribbon.IRibbonHelpPaneItem>)instance;
            var newItem = (global::DevExpress.UI.Xaml.Ribbon.IRibbonHelpPaneItem)item;
            collection.Add(newItem);
        }
        private void VectorAdd_245_ObservableCollectionView(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::DevExpress.UI.Xaml.Ribbon.IRibbonHelpPaneItem>)instance;
            var newItem = (global::DevExpress.UI.Xaml.Ribbon.IRibbonHelpPaneItem)item;
            collection.Add(newItem);
        }
        private void VectorAdd_251_ToolbarHelpPaneItemCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::DevExpress.UI.Xaml.Ribbon.IToolbarHelpPaneItem>)instance;
            var newItem = (global::DevExpress.UI.Xaml.Ribbon.IToolbarHelpPaneItem)item;
            collection.Add(newItem);
        }
        private void VectorAdd_252_ToolTipItemCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::DevExpress.UI.Xaml.Ribbon.IToolbarHelpPaneItem>)instance;
            var newItem = (global::DevExpress.UI.Xaml.Ribbon.IToolbarHelpPaneItem)item;
            collection.Add(newItem);
        }
        private void VectorAdd_253_TemplatedCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::DevExpress.UI.Xaml.Ribbon.IToolbarHelpPaneItem>)instance;
            var newItem = (global::DevExpress.UI.Xaml.Ribbon.IToolbarHelpPaneItem)item;
            collection.Add(newItem);
        }
        private void VectorAdd_254_TemplatedCollectionBase(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::DevExpress.UI.Xaml.Ribbon.IToolbarHelpPaneItem>)instance;
            var newItem = (global::DevExpress.UI.Xaml.Ribbon.IToolbarHelpPaneItem)item;
            collection.Add(newItem);
        }
        private void VectorAdd_255_ObservableCollectionView(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::DevExpress.UI.Xaml.Ribbon.IToolbarHelpPaneItem>)instance;
            var newItem = (global::DevExpress.UI.Xaml.Ribbon.IToolbarHelpPaneItem)item;
            collection.Add(newItem);
        }
        private void VectorAdd_259_RibbonTabCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::DevExpress.UI.Xaml.Ribbon.RibbonTab>)instance;
            var newItem = (global::DevExpress.UI.Xaml.Ribbon.RibbonTab)item;
            collection.Add(newItem);
        }
        private void VectorAdd_260_TemplatedCollectionWithOwner(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::DevExpress.UI.Xaml.Ribbon.RibbonTab>)instance;
            var newItem = (global::DevExpress.UI.Xaml.Ribbon.RibbonTab)item;
            collection.Add(newItem);
        }
        private void VectorAdd_261_TemplatedCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::DevExpress.UI.Xaml.Ribbon.RibbonTab>)instance;
            var newItem = (global::DevExpress.UI.Xaml.Ribbon.RibbonTab)item;
            collection.Add(newItem);
        }
        private void VectorAdd_262_TemplatedCollectionBase(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::DevExpress.UI.Xaml.Ribbon.RibbonTab>)instance;
            var newItem = (global::DevExpress.UI.Xaml.Ribbon.RibbonTab)item;
            collection.Add(newItem);
        }
        private void VectorAdd_263_ObservableCollectionView(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::DevExpress.UI.Xaml.Ribbon.RibbonTab>)instance;
            var newItem = (global::DevExpress.UI.Xaml.Ribbon.RibbonTab)item;
            collection.Add(newItem);
        }
        private void VectorAdd_266_RibbonGroupCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::DevExpress.UI.Xaml.Ribbon.RibbonGroup>)instance;
            var newItem = (global::DevExpress.UI.Xaml.Ribbon.RibbonGroup)item;
            collection.Add(newItem);
        }
        private void VectorAdd_267_TemplatedCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::DevExpress.UI.Xaml.Ribbon.RibbonGroup>)instance;
            var newItem = (global::DevExpress.UI.Xaml.Ribbon.RibbonGroup)item;
            collection.Add(newItem);
        }
        private void VectorAdd_268_TemplatedCollectionBase(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::DevExpress.UI.Xaml.Ribbon.RibbonGroup>)instance;
            var newItem = (global::DevExpress.UI.Xaml.Ribbon.RibbonGroup)item;
            collection.Add(newItem);
        }
        private void VectorAdd_269_ObservableCollectionView(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::DevExpress.UI.Xaml.Ribbon.RibbonGroup>)instance;
            var newItem = (global::DevExpress.UI.Xaml.Ribbon.RibbonGroup)item;
            collection.Add(newItem);
        }
        private void VectorAdd_276_RibbonItemCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::DevExpress.UI.Xaml.Ribbon.IRibbonItem>)instance;
            var newItem = (global::DevExpress.UI.Xaml.Ribbon.IRibbonItem)item;
            collection.Add(newItem);
        }
        private void VectorAdd_277_ToolTipItemCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::DevExpress.UI.Xaml.Ribbon.IRibbonItem>)instance;
            var newItem = (global::DevExpress.UI.Xaml.Ribbon.IRibbonItem)item;
            collection.Add(newItem);
        }
        private void VectorAdd_278_TemplatedCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::DevExpress.UI.Xaml.Ribbon.IRibbonItem>)instance;
            var newItem = (global::DevExpress.UI.Xaml.Ribbon.IRibbonItem)item;
            collection.Add(newItem);
        }
        private void VectorAdd_279_TemplatedCollectionBase(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::DevExpress.UI.Xaml.Ribbon.IRibbonItem>)instance;
            var newItem = (global::DevExpress.UI.Xaml.Ribbon.IRibbonItem)item;
            collection.Add(newItem);
        }
        private void VectorAdd_280_ObservableCollectionView(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::DevExpress.UI.Xaml.Ribbon.IRibbonItem>)instance;
            var newItem = (global::DevExpress.UI.Xaml.Ribbon.IRibbonItem)item;
            collection.Add(newItem);
        }
        private void VectorAdd_282_RibbonItemBaseCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::DevExpress.UI.Xaml.Ribbon.IRibbonItemBase>)instance;
            var newItem = (global::DevExpress.UI.Xaml.Ribbon.IRibbonItemBase)item;
            collection.Add(newItem);
        }
        private void VectorAdd_283_ObservableCollectionView(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::DevExpress.UI.Xaml.Ribbon.IRibbonItemBase>)instance;
            var newItem = (global::DevExpress.UI.Xaml.Ribbon.IRibbonItemBase)item;
            collection.Add(newItem);
        }
        private void VectorAdd_303_ToolbarItemCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::DevExpress.UI.Xaml.Ribbon.IToolbarItem>)instance;
            var newItem = (global::DevExpress.UI.Xaml.Ribbon.IToolbarItem)item;
            collection.Add(newItem);
        }
        private void VectorAdd_304_ToolTipItemCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::DevExpress.UI.Xaml.Ribbon.IToolbarItem>)instance;
            var newItem = (global::DevExpress.UI.Xaml.Ribbon.IToolbarItem)item;
            collection.Add(newItem);
        }
        private void VectorAdd_305_TemplatedCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::DevExpress.UI.Xaml.Ribbon.IToolbarItem>)instance;
            var newItem = (global::DevExpress.UI.Xaml.Ribbon.IToolbarItem)item;
            collection.Add(newItem);
        }
        private void VectorAdd_306_TemplatedCollectionBase(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::DevExpress.UI.Xaml.Ribbon.IToolbarItem>)instance;
            var newItem = (global::DevExpress.UI.Xaml.Ribbon.IToolbarItem)item;
            collection.Add(newItem);
        }
        private void VectorAdd_307_ObservableCollectionView(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::DevExpress.UI.Xaml.Ribbon.IToolbarItem>)instance;
            var newItem = (global::DevExpress.UI.Xaml.Ribbon.IToolbarItem)item;
            collection.Add(newItem);
        }
        private void VectorAdd_312_ContextToolbarItemCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::DevExpress.UI.Xaml.Ribbon.IContextToolbarItem>)instance;
            var newItem = (global::DevExpress.UI.Xaml.Ribbon.IContextToolbarItem)item;
            collection.Add(newItem);
        }
        private void VectorAdd_313_ToolTipItemCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::DevExpress.UI.Xaml.Ribbon.IContextToolbarItem>)instance;
            var newItem = (global::DevExpress.UI.Xaml.Ribbon.IContextToolbarItem)item;
            collection.Add(newItem);
        }
        private void VectorAdd_314_TemplatedCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::DevExpress.UI.Xaml.Ribbon.IContextToolbarItem>)instance;
            var newItem = (global::DevExpress.UI.Xaml.Ribbon.IContextToolbarItem)item;
            collection.Add(newItem);
        }
        private void VectorAdd_315_TemplatedCollectionBase(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::DevExpress.UI.Xaml.Ribbon.IContextToolbarItem>)instance;
            var newItem = (global::DevExpress.UI.Xaml.Ribbon.IContextToolbarItem)item;
            collection.Add(newItem);
        }
        private void VectorAdd_316_ObservableCollectionView(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::DevExpress.UI.Xaml.Ribbon.IContextToolbarItem>)instance;
            var newItem = (global::DevExpress.UI.Xaml.Ribbon.IContextToolbarItem)item;
            collection.Add(newItem);
        }
        private void VectorAdd_322_RibbonToolbarItemCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::DevExpress.UI.Xaml.Ribbon.IRibbonToolbarItem>)instance;
            var newItem = (global::DevExpress.UI.Xaml.Ribbon.IRibbonToolbarItem)item;
            collection.Add(newItem);
        }
        private void VectorAdd_323_ToolTipItemCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::DevExpress.UI.Xaml.Ribbon.IRibbonToolbarItem>)instance;
            var newItem = (global::DevExpress.UI.Xaml.Ribbon.IRibbonToolbarItem)item;
            collection.Add(newItem);
        }
        private void VectorAdd_324_TemplatedCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::DevExpress.UI.Xaml.Ribbon.IRibbonToolbarItem>)instance;
            var newItem = (global::DevExpress.UI.Xaml.Ribbon.IRibbonToolbarItem)item;
            collection.Add(newItem);
        }
        private void VectorAdd_325_TemplatedCollectionBase(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::DevExpress.UI.Xaml.Ribbon.IRibbonToolbarItem>)instance;
            var newItem = (global::DevExpress.UI.Xaml.Ribbon.IRibbonToolbarItem)item;
            collection.Add(newItem);
        }
        private void VectorAdd_326_ObservableCollectionView(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::DevExpress.UI.Xaml.Ribbon.IRibbonToolbarItem>)instance;
            var newItem = (global::DevExpress.UI.Xaml.Ribbon.IRibbonToolbarItem)item;
            collection.Add(newItem);
        }
        private void VectorAdd_330_RibbonToolbarTabCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::DevExpress.UI.Xaml.Ribbon.RibbonToolbarTab>)instance;
            var newItem = (global::DevExpress.UI.Xaml.Ribbon.RibbonToolbarTab)item;
            collection.Add(newItem);
        }
        private void VectorAdd_331_TemplatedCollectionWithOwner(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::DevExpress.UI.Xaml.Ribbon.RibbonToolbarTab>)instance;
            var newItem = (global::DevExpress.UI.Xaml.Ribbon.RibbonToolbarTab)item;
            collection.Add(newItem);
        }
        private void VectorAdd_332_TemplatedCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::DevExpress.UI.Xaml.Ribbon.RibbonToolbarTab>)instance;
            var newItem = (global::DevExpress.UI.Xaml.Ribbon.RibbonToolbarTab)item;
            collection.Add(newItem);
        }
        private void VectorAdd_333_TemplatedCollectionBase(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::DevExpress.UI.Xaml.Ribbon.RibbonToolbarTab>)instance;
            var newItem = (global::DevExpress.UI.Xaml.Ribbon.RibbonToolbarTab)item;
            collection.Add(newItem);
        }
        private void VectorAdd_334_ObservableCollectionView(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::DevExpress.UI.Xaml.Ribbon.RibbonToolbarTab>)instance;
            var newItem = (global::DevExpress.UI.Xaml.Ribbon.RibbonToolbarTab)item;
            collection.Add(newItem);
        }
        private void VectorAdd_336_RibbonToolbarGroupCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::DevExpress.UI.Xaml.Ribbon.RibbonToolbarGroup>)instance;
            var newItem = (global::DevExpress.UI.Xaml.Ribbon.RibbonToolbarGroup)item;
            collection.Add(newItem);
        }
        private void VectorAdd_337_TemplatedCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::DevExpress.UI.Xaml.Ribbon.RibbonToolbarGroup>)instance;
            var newItem = (global::DevExpress.UI.Xaml.Ribbon.RibbonToolbarGroup)item;
            collection.Add(newItem);
        }
        private void VectorAdd_338_TemplatedCollectionBase(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::DevExpress.UI.Xaml.Ribbon.RibbonToolbarGroup>)instance;
            var newItem = (global::DevExpress.UI.Xaml.Ribbon.RibbonToolbarGroup)item;
            collection.Add(newItem);
        }
        private void VectorAdd_339_ObservableCollectionView(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::DevExpress.UI.Xaml.Ribbon.RibbonToolbarGroup>)instance;
            var newItem = (global::DevExpress.UI.Xaml.Ribbon.RibbonToolbarGroup)item;
            collection.Add(newItem);
        }
        private void VectorAdd_342_ToolbarGroupCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::DevExpress.UI.Xaml.Ribbon.ToolbarGroup>)instance;
            var newItem = (global::DevExpress.UI.Xaml.Ribbon.ToolbarGroup)item;
            collection.Add(newItem);
        }
        private void VectorAdd_343_TemplatedCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::DevExpress.UI.Xaml.Ribbon.ToolbarGroup>)instance;
            var newItem = (global::DevExpress.UI.Xaml.Ribbon.ToolbarGroup)item;
            collection.Add(newItem);
        }
        private void VectorAdd_344_TemplatedCollectionBase(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::DevExpress.UI.Xaml.Ribbon.ToolbarGroup>)instance;
            var newItem = (global::DevExpress.UI.Xaml.Ribbon.ToolbarGroup)item;
            collection.Add(newItem);
        }
        private void VectorAdd_345_ObservableCollectionView(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::DevExpress.UI.Xaml.Ribbon.ToolbarGroup>)instance;
            var newItem = (global::DevExpress.UI.Xaml.Ribbon.ToolbarGroup)item;
            collection.Add(newItem);
        }
        private void VectorAdd_353_TabHeaderItemCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::DevExpress.UI.Xaml.Ribbon.IRibbonItemBase>)instance;
            var newItem = (global::DevExpress.UI.Xaml.Ribbon.IRibbonItemBase)item;
            collection.Add(newItem);
        }
        private void VectorAdd_354_ToolTipItemCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::DevExpress.UI.Xaml.Ribbon.IRibbonItemBase>)instance;
            var newItem = (global::DevExpress.UI.Xaml.Ribbon.IRibbonItemBase)item;
            collection.Add(newItem);
        }
        private void VectorAdd_355_TemplatedCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::DevExpress.UI.Xaml.Ribbon.IRibbonItemBase>)instance;
            var newItem = (global::DevExpress.UI.Xaml.Ribbon.IRibbonItemBase)item;
            collection.Add(newItem);
        }
        private void VectorAdd_356_TemplatedCollectionBase(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::DevExpress.UI.Xaml.Ribbon.IRibbonItemBase>)instance;
            var newItem = (global::DevExpress.UI.Xaml.Ribbon.IRibbonItemBase)item;
            collection.Add(newItem);
        }
        private void VectorAdd_359_GalleryItemCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::System.Object>)instance;
            var newItem = (global::System.Object)item;
            collection.Add(newItem);
        }
        private void VectorAdd_360_ObservableCollectionView(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::System.Object>)instance;
            var newItem = (global::System.Object)item;
            collection.Add(newItem);
        }
        private void VectorAdd_377_SelectableItemCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::DevExpress.UI.Xaml.Internal.SelectorItemBase>)instance;
            var newItem = (global::DevExpress.UI.Xaml.Internal.SelectorItemBase)item;
            collection.Add(newItem);
        }
        private void VectorAdd_378_ItemContainerCollectionWithOwner(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::DevExpress.UI.Xaml.Internal.SelectorItemBase>)instance;
            var newItem = (global::DevExpress.UI.Xaml.Internal.SelectorItemBase)item;
            collection.Add(newItem);
        }
        private void VectorAdd_379_ItemContainerCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::DevExpress.UI.Xaml.Internal.SelectorItemBase>)instance;
            var newItem = (global::DevExpress.UI.Xaml.Internal.SelectorItemBase)item;
            collection.Add(newItem);
        }
        private void VectorAdd_380_TemplatedCollectionBase(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::DevExpress.UI.Xaml.Internal.SelectorItemBase>)instance;
            var newItem = (global::DevExpress.UI.Xaml.Internal.SelectorItemBase)item;
            collection.Add(newItem);
        }
        private void VectorAdd_381_ObservableCollectionView(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::DevExpress.UI.Xaml.Internal.SelectorItemBase>)instance;
            var newItem = (global::DevExpress.UI.Xaml.Internal.SelectorItemBase)item;
            collection.Add(newItem);
        }
        private void VectorAdd_386_TreeNavigatorNodeCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::DevExpress.UI.Xaml.Internal.TreeNavigatorNode>)instance;
            var newItem = (global::DevExpress.UI.Xaml.Internal.TreeNavigatorNode)item;
            collection.Add(newItem);
        }
        private void VectorAdd_387_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::DevExpress.UI.Xaml.Internal.TreeNavigatorNode>)instance;
            var newItem = (global::DevExpress.UI.Xaml.Internal.TreeNavigatorNode)item;
            collection.Add(newItem);
        }
        private void VectorAdd_388_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::DevExpress.UI.Xaml.Internal.TreeNavigatorNode>)instance;
            var newItem = (global::DevExpress.UI.Xaml.Internal.TreeNavigatorNode)item;
            collection.Add(newItem);
        }
        private void VectorAdd_395_List(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.Media.Brush>)instance;
            var newItem = (global::Windows.UI.Xaml.Media.Brush)item;
            collection.Add(newItem);
        }
        private void VectorAdd_405_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem>)instance;
            var newItem = (global::Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem)item;
            collection.Add(newItem);
        }
        private void VectorAdd_406_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem>)instance;
            var newItem = (global::Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem)item;
            collection.Add(newItem);
        }
        private void VectorAdd_412_CommandCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Telerik.UI.Xaml.Controls.Primitives.ControlCommandBase<global::Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu>>)instance;
            var newItem = (global::Telerik.UI.Xaml.Controls.Primitives.ControlCommandBase<global::Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu>)item;
            collection.Add(newItem);
        }
        private void VectorAdd_413_AttachableObjectCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Telerik.UI.Xaml.Controls.Primitives.ControlCommandBase<global::Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu>>)instance;
            var newItem = (global::Telerik.UI.Xaml.Controls.Primitives.ControlCommandBase<global::Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu>)item;
            collection.Add(newItem);
        }
        private void VectorAdd_414_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Telerik.UI.Xaml.Controls.Primitives.ControlCommandBase<global::Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu>>)instance;
            var newItem = (global::Telerik.UI.Xaml.Controls.Primitives.ControlCommandBase<global::Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu>)item;
            collection.Add(newItem);
        }
        private void VectorAdd_415_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Telerik.UI.Xaml.Controls.Primitives.ControlCommandBase<global::Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu>>)instance;
            var newItem = (global::Telerik.UI.Xaml.Controls.Primitives.ControlCommandBase<global::Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu>)item;
            collection.Add(newItem);
        }

        private global::Windows.UI.Xaml.Markup.IXamlType CreateXamlType(int typeIndex)
        {
            global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlSystemBaseType xamlType = null;
            global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType userType;
            string typeName = _typeNameTable[typeIndex];
            global::System.Type type = _typeTable[typeIndex];

            switch (typeIndex)
            {

            case 0:   //  RaspberryPiV3.AnaSayfa
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_0_AnaSayfa;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 1:   //  Windows.UI.Xaml.Controls.Page
                xamlType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 2:   //  Windows.UI.Xaml.Controls.UserControl
                xamlType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 3:   //  Telerik.UI.Xaml.Controls.Grid.RadDataGrid
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Telerik.UI.Xaml.Controls.RadControl"));
                userType.Activator = Activate_3_RadDataGrid;
                userType.AddMemberName("ItemsSource");
                userType.AddMemberName("Columns");
                userType.AddMemberName("AutoGenerateColumns");
                userType.AddMemberName("FrozenColumnCount");
                userType.AddMemberName("ColumnDataOperationsMode");
                userType.AddMemberName("CanUserChooseColumns");
                userType.AddMemberName("RealizedItemsVerticalBufferScale");
                userType.AddMemberName("IsBusyIndicatorEnabled");
                userType.AddMemberName("UserFilterMode");
                userType.AddMemberName("UserColumnReorderMode");
                userType.AddMemberName("ColumnResizeHandleDisplayMode");
                userType.AddMemberName("UserSortMode");
                userType.AddMemberName("UserGroupMode");
                userType.AddMemberName("IndentWidth");
                userType.AddMemberName("GroupHeaderDisplayMode");
                userType.AddMemberName("GroupHeaderTemplate");
                userType.AddMemberName("GroupHeaderTemplateSelector");
                userType.AddMemberName("GroupHeaderStyle");
                userType.AddMemberName("GroupHeaderStyleSelector");
                userType.AddMemberName("Commands");
                userType.AddMemberName("RowHeight");
                userType.AddMemberName("CommandService");
                userType.AddMemberName("DragBehavior");
                userType.AddMemberName("GroupPanelPosition");
                userType.AddMemberName("CurrentItem");
                userType.AddMemberName("EnsureCurrentItemIntoView");
                userType.AddMemberName("IsSynchronizedWithCurrentItem");
                userType.AddMemberName("IncrementalLoadingMode");
                userType.AddMemberName("SortDescriptors");
                userType.AddMemberName("GroupDescriptors");
                userType.AddMemberName("FilterDescriptors");
                userType.AddMemberName("AggregateDescriptors");
                userType.AddMemberName("RowBackground");
                userType.AddMemberName("RowBackgroundSelector");
                userType.AddMemberName("AlternateRowBackground");
                userType.AddMemberName("AlternationStep");
                userType.AddMemberName("AlternationStartIndex");
                userType.AddMemberName("GridLinesBrush");
                userType.AddMemberName("GridLinesVisibility");
                userType.AddMemberName("GridLinesThickness");
                userType.AddMemberName("UserEditMode");
                userType.AddMemberName("ExternalEditor");
                userType.AddMemberName("HitTestService");
                userType.AddMemberName("RowDetailsDisplayMode");
                userType.AddMemberName("RowDetailsTemplate");
                userType.AddMemberName("SelectionUnit");
                userType.AddMemberName("SelectedItem");
                userType.AddMemberName("SelectionMode");
                userType.AddMemberName("SelectedItems");
                userType.AddMemberName("HideFlyoutOnBackButtonPressed");
                xamlType = userType;
                break;

            case 4:   //  Telerik.UI.Xaml.Controls.RadControl
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Control"));
                userType.AddMemberName("CurrentVisualState");
                xamlType = userType;
                break;

            case 5:   //  Windows.UI.Xaml.Controls.Control
                xamlType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 6:   //  Object
                xamlType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 7:   //  Telerik.UI.Xaml.Controls.Grid.DataGridColumnCollection
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.ObservableCollection`1<Telerik.UI.Xaml.Controls.Grid.DataGridColumn>"));
                userType.CollectionAdd = VectorAdd_7_DataGridColumnCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 8:   //  System.Collections.ObjectModel.ObservableCollection`1<Telerik.UI.Xaml.Controls.Grid.DataGridColumn>
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<Telerik.UI.Xaml.Controls.Grid.DataGridColumn>"));
                userType.Activator = Activate_8_ObservableCollection;
                userType.CollectionAdd = VectorAdd_8_ObservableCollection;
                xamlType = userType;
                break;

            case 9:   //  System.Collections.ObjectModel.Collection`1<Telerik.UI.Xaml.Controls.Grid.DataGridColumn>
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_9_Collection;
                userType.CollectionAdd = VectorAdd_9_Collection;
                xamlType = userType;
                break;

            case 10:   //  Telerik.UI.Xaml.Controls.Grid.DataGridColumn
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Telerik.UI.Xaml.Controls.Primitives.RadDependencyObject"));
                userType.AddMemberName("IsCellFlyoutEnabled");
                userType.AddMemberName("CellDecorationStyle");
                userType.AddMemberName("CellDecorationStyleSelector");
                userType.AddMemberName("Name");
                userType.AddMemberName("CanUserEdit");
                userType.AddMemberName("CanUserResize");
                userType.AddMemberName("CanUserFilter");
                userType.AddMemberName("CanUserReorder");
                userType.AddMemberName("CanUserGroup");
                userType.AddMemberName("CanUserSort");
                userType.AddMemberName("IsVisible");
                userType.AddMemberName("HeaderStyle");
                userType.AddMemberName("SizeMode");
                userType.AddMemberName("Width");
                userType.AddMemberName("ActualWidth");
                userType.AddMemberName("IsAutoGenerated");
                userType.AddMemberName("Header");
                userType.AddMemberName("SortDirection");
                userType.AddMemberName("DataOperationsFlyoutTemplate");
                xamlType = userType;
                break;

            case 11:   //  Telerik.UI.Xaml.Controls.Primitives.RadDependencyObject
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObject"));
                xamlType = userType;
                break;

            case 12:   //  Windows.UI.Xaml.DependencyObject
                xamlType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 13:   //  Boolean
                xamlType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 14:   //  Windows.UI.Xaml.Style
                xamlType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 15:   //  Windows.UI.Xaml.Controls.StyleSelector
                xamlType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 16:   //  String
                xamlType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 17:   //  Telerik.UI.Xaml.Controls.Grid.DataGridColumnSizeMode
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Stretch", global::Telerik.UI.Xaml.Controls.Grid.DataGridColumnSizeMode.Stretch);
                userType.AddEnumValue("Auto", global::Telerik.UI.Xaml.Controls.Grid.DataGridColumnSizeMode.Auto);
                userType.AddEnumValue("Fixed", global::Telerik.UI.Xaml.Controls.Grid.DataGridColumnSizeMode.Fixed);
                xamlType = userType;
                break;

            case 18:   //  System.Enum
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                xamlType = userType;
                break;

            case 19:   //  System.ValueType
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                xamlType = userType;
                break;

            case 20:   //  Double
                xamlType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 21:   //  Telerik.UI.Xaml.Controls.Grid.SortDirection
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("None", global::Telerik.UI.Xaml.Controls.Grid.SortDirection.None);
                userType.AddEnumValue("Ascending", global::Telerik.UI.Xaml.Controls.Grid.SortDirection.Ascending);
                userType.AddEnumValue("Descending", global::Telerik.UI.Xaml.Controls.Grid.SortDirection.Descending);
                xamlType = userType;
                break;

            case 22:   //  Windows.UI.Xaml.DataTemplate
                xamlType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 23:   //  Int32
                xamlType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 24:   //  Telerik.UI.Xaml.Controls.Grid.Primitives.ColumnDataOperationsMode
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Inline", global::Telerik.UI.Xaml.Controls.Grid.Primitives.ColumnDataOperationsMode.Inline);
                userType.AddEnumValue("Flyout", global::Telerik.UI.Xaml.Controls.Grid.Primitives.ColumnDataOperationsMode.Flyout);
                xamlType = userType;
                break;

            case 25:   //  Telerik.UI.Xaml.Controls.Grid.DataGridUserFilterMode
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Auto", global::Telerik.UI.Xaml.Controls.Grid.DataGridUserFilterMode.Auto);
                userType.AddEnumValue("Enabled", global::Telerik.UI.Xaml.Controls.Grid.DataGridUserFilterMode.Enabled);
                userType.AddEnumValue("Disabled", global::Telerik.UI.Xaml.Controls.Grid.DataGridUserFilterMode.Disabled);
                xamlType = userType;
                break;

            case 26:   //  Telerik.UI.Xaml.Controls.Grid.DataGridUserColumnReorderMode
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Interactive", global::Telerik.UI.Xaml.Controls.Grid.DataGridUserColumnReorderMode.Interactive);
                userType.AddEnumValue("None", global::Telerik.UI.Xaml.Controls.Grid.DataGridUserColumnReorderMode.None);
                xamlType = userType;
                break;

            case 27:   //  Telerik.UI.Xaml.Controls.Grid.DataGridColumnResizeHandleDisplayMode
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("None", global::Telerik.UI.Xaml.Controls.Grid.DataGridColumnResizeHandleDisplayMode.None);
                userType.AddEnumValue("Always", global::Telerik.UI.Xaml.Controls.Grid.DataGridColumnResizeHandleDisplayMode.Always);
                userType.AddEnumValue("OnColumnHeaderActionFlyoutOpen", global::Telerik.UI.Xaml.Controls.Grid.DataGridColumnResizeHandleDisplayMode.OnColumnHeaderActionFlyoutOpen);
                xamlType = userType;
                break;

            case 28:   //  Telerik.UI.Xaml.Controls.Grid.DataGridUserSortMode
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Auto", global::Telerik.UI.Xaml.Controls.Grid.DataGridUserSortMode.Auto);
                userType.AddEnumValue("None", global::Telerik.UI.Xaml.Controls.Grid.DataGridUserSortMode.None);
                userType.AddEnumValue("Single", global::Telerik.UI.Xaml.Controls.Grid.DataGridUserSortMode.Single);
                userType.AddEnumValue("Multiple", global::Telerik.UI.Xaml.Controls.Grid.DataGridUserSortMode.Multiple);
                xamlType = userType;
                break;

            case 29:   //  Telerik.UI.Xaml.Controls.Grid.DataGridUserGroupMode
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Auto", global::Telerik.UI.Xaml.Controls.Grid.DataGridUserGroupMode.Auto);
                userType.AddEnumValue("Enabled", global::Telerik.UI.Xaml.Controls.Grid.DataGridUserGroupMode.Enabled);
                userType.AddEnumValue("Disabled", global::Telerik.UI.Xaml.Controls.Grid.DataGridUserGroupMode.Disabled);
                xamlType = userType;
                break;

            case 30:   //  Telerik.UI.Xaml.Controls.Grid.DataGridGroupHeaderDisplayMode
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Frozen", global::Telerik.UI.Xaml.Controls.Grid.DataGridGroupHeaderDisplayMode.Frozen);
                userType.AddEnumValue("Scrollable", global::Telerik.UI.Xaml.Controls.Grid.DataGridGroupHeaderDisplayMode.Scrollable);
                xamlType = userType;
                break;

            case 31:   //  Windows.UI.Xaml.Controls.DataTemplateSelector
                xamlType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 32:   //  Telerik.UI.Xaml.Controls.Primitives.CommandCollection`1<Telerik.UI.Xaml.Controls.Grid.RadDataGrid>
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Telerik.UI.Xaml.Controls.Primitives.AttachableObjectCollection`2<Telerik.UI.Xaml.Controls.Grid.RadDataGrid, Telerik.UI.Xaml.Controls.Primitives.ControlCommandBase`1<Telerik.UI.Xaml.Controls.Grid.RadDataGrid>>"));
                userType.CollectionAdd = VectorAdd_32_CommandCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 33:   //  Telerik.UI.Xaml.Controls.Primitives.AttachableObjectCollection`2<Telerik.UI.Xaml.Controls.Grid.RadDataGrid, Telerik.UI.Xaml.Controls.Primitives.ControlCommandBase`1<Telerik.UI.Xaml.Controls.Grid.RadDataGrid>>
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.ObservableCollection`1<Telerik.UI.Xaml.Controls.Primitives.ControlCommandBase`1<Telerik.UI.Xaml.Controls.Grid.RadDataGrid>>"));
                userType.CollectionAdd = VectorAdd_33_AttachableObjectCollection;
                xamlType = userType;
                break;

            case 34:   //  System.Collections.ObjectModel.ObservableCollection`1<Telerik.UI.Xaml.Controls.Primitives.ControlCommandBase`1<Telerik.UI.Xaml.Controls.Grid.RadDataGrid>>
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<Telerik.UI.Xaml.Controls.Primitives.ControlCommandBase`1<Telerik.UI.Xaml.Controls.Grid.RadDataGrid>>"));
                userType.Activator = Activate_34_ObservableCollection;
                userType.CollectionAdd = VectorAdd_34_ObservableCollection;
                xamlType = userType;
                break;

            case 35:   //  System.Collections.ObjectModel.Collection`1<Telerik.UI.Xaml.Controls.Primitives.ControlCommandBase`1<Telerik.UI.Xaml.Controls.Grid.RadDataGrid>>
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_35_Collection;
                userType.CollectionAdd = VectorAdd_35_Collection;
                xamlType = userType;
                break;

            case 36:   //  Telerik.UI.Xaml.Controls.Primitives.ControlCommandBase`1<Telerik.UI.Xaml.Controls.Grid.RadDataGrid>
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Telerik.UI.Xaml.Controls.Primitives.AttachableObject`1<Telerik.UI.Xaml.Controls.Grid.RadDataGrid>"));
                xamlType = userType;
                break;

            case 37:   //  Telerik.UI.Xaml.Controls.Primitives.AttachableObject`1<Telerik.UI.Xaml.Controls.Grid.RadDataGrid>
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Telerik.UI.Xaml.Controls.Primitives.RadDependencyObject"));
                userType.AddMemberName("Owner");
                xamlType = userType;
                break;

            case 38:   //  Telerik.UI.Xaml.Controls.Grid.Commands.CommandService
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Telerik.UI.Xaml.Controls.Primitives.CommandServiceBase`1<Telerik.UI.Xaml.Controls.Grid.RadDataGrid>"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 39:   //  Telerik.UI.Xaml.Controls.Primitives.CommandServiceBase`1<Telerik.UI.Xaml.Controls.Grid.RadDataGrid>
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Telerik.UI.Xaml.Controls.Primitives.ServiceBase`1<Telerik.UI.Xaml.Controls.Grid.RadDataGrid>"));
                xamlType = userType;
                break;

            case 40:   //  Telerik.UI.Xaml.Controls.Primitives.ServiceBase`1<Telerik.UI.Xaml.Controls.Grid.RadDataGrid>
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Telerik.UI.Xaml.Controls.Primitives.AttachableObject`1<Telerik.UI.Xaml.Controls.Grid.RadDataGrid>"));
                xamlType = userType;
                break;

            case 41:   //  Telerik.UI.Xaml.Controls.Grid.DataGridDragBehavior
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Telerik.UI.Xaml.Controls.Primitives.AttachableObject`1<Telerik.UI.Xaml.Controls.Grid.RadDataGrid>"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 42:   //  Telerik.UI.Xaml.Controls.Grid.GroupPanelPosition
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Left", global::Telerik.UI.Xaml.Controls.Grid.GroupPanelPosition.Left);
                userType.AddEnumValue("Bottom", global::Telerik.UI.Xaml.Controls.Grid.GroupPanelPosition.Bottom);
                xamlType = userType;
                break;

            case 43:   //  Telerik.Core.Data.BatchLoadingMode
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Auto", global::Telerik.Core.Data.BatchLoadingMode.Auto);
                userType.AddEnumValue("Explicit", global::Telerik.Core.Data.BatchLoadingMode.Explicit);
                xamlType = userType;
                break;

            case 44:   //  Telerik.Data.Core.SortDescriptorCollection
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Telerik.Data.Core.DataDescriptorCollection`1<Telerik.Data.Core.SortDescriptorBase>"));
                userType.CollectionAdd = VectorAdd_44_SortDescriptorCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 45:   //  Telerik.Data.Core.DataDescriptorCollection`1<Telerik.Data.Core.SortDescriptorBase>
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.ObservableCollection`1<Telerik.Data.Core.SortDescriptorBase>"));
                userType.CollectionAdd = VectorAdd_45_DataDescriptorCollection;
                xamlType = userType;
                break;

            case 46:   //  System.Collections.ObjectModel.ObservableCollection`1<Telerik.Data.Core.SortDescriptorBase>
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<Telerik.Data.Core.SortDescriptorBase>"));
                userType.Activator = Activate_46_ObservableCollection;
                userType.CollectionAdd = VectorAdd_46_ObservableCollection;
                xamlType = userType;
                break;

            case 47:   //  System.Collections.ObjectModel.Collection`1<Telerik.Data.Core.SortDescriptorBase>
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_47_Collection;
                userType.CollectionAdd = VectorAdd_47_Collection;
                xamlType = userType;
                break;

            case 48:   //  Telerik.Data.Core.SortDescriptorBase
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Telerik.Data.Core.OrderedDescriptor"));
                userType.AddMemberName("Comparer");
                xamlType = userType;
                break;

            case 49:   //  Telerik.Data.Core.OrderedDescriptor
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Telerik.Data.Core.DataDescriptor"));
                userType.AddMemberName("SortOrder");
                xamlType = userType;
                break;

            case 50:   //  Telerik.Data.Core.DataDescriptor
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Telerik.Core.ViewModelBase"));
                xamlType = userType;
                break;

            case 51:   //  Telerik.Core.ViewModelBase
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                xamlType = userType;
                break;

            case 52:   //  System.Collections.IComparer
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 53:   //  Telerik.Data.Core.SortOrder
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Ascending", global::Telerik.Data.Core.SortOrder.Ascending);
                userType.AddEnumValue("Descending", global::Telerik.Data.Core.SortOrder.Descending);
                xamlType = userType;
                break;

            case 54:   //  Telerik.Data.Core.GroupDescriptorCollection
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Telerik.Data.Core.DataDescriptorCollection`1<Telerik.Data.Core.GroupDescriptorBase>"));
                userType.CollectionAdd = VectorAdd_54_GroupDescriptorCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 55:   //  Telerik.Data.Core.DataDescriptorCollection`1<Telerik.Data.Core.GroupDescriptorBase>
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.ObservableCollection`1<Telerik.Data.Core.GroupDescriptorBase>"));
                userType.CollectionAdd = VectorAdd_55_DataDescriptorCollection;
                xamlType = userType;
                break;

            case 56:   //  System.Collections.ObjectModel.ObservableCollection`1<Telerik.Data.Core.GroupDescriptorBase>
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<Telerik.Data.Core.GroupDescriptorBase>"));
                userType.Activator = Activate_56_ObservableCollection;
                userType.CollectionAdd = VectorAdd_56_ObservableCollection;
                xamlType = userType;
                break;

            case 57:   //  System.Collections.ObjectModel.Collection`1<Telerik.Data.Core.GroupDescriptorBase>
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_57_Collection;
                userType.CollectionAdd = VectorAdd_57_Collection;
                xamlType = userType;
                break;

            case 58:   //  Telerik.Data.Core.GroupDescriptorBase
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Telerik.Data.Core.OrderedDescriptor"));
                userType.AddMemberName("DisplayContent");
                xamlType = userType;
                break;

            case 59:   //  Telerik.Data.Core.FilterDescriptorCollection
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Telerik.Data.Core.DataDescriptorCollection`1<Telerik.Data.Core.FilterDescriptorBase>"));
                userType.CollectionAdd = VectorAdd_59_FilterDescriptorCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 60:   //  Telerik.Data.Core.DataDescriptorCollection`1<Telerik.Data.Core.FilterDescriptorBase>
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.ObservableCollection`1<Telerik.Data.Core.FilterDescriptorBase>"));
                userType.CollectionAdd = VectorAdd_60_DataDescriptorCollection;
                xamlType = userType;
                break;

            case 61:   //  System.Collections.ObjectModel.ObservableCollection`1<Telerik.Data.Core.FilterDescriptorBase>
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<Telerik.Data.Core.FilterDescriptorBase>"));
                userType.Activator = Activate_61_ObservableCollection;
                userType.CollectionAdd = VectorAdd_61_ObservableCollection;
                xamlType = userType;
                break;

            case 62:   //  System.Collections.ObjectModel.Collection`1<Telerik.Data.Core.FilterDescriptorBase>
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_62_Collection;
                userType.CollectionAdd = VectorAdd_62_Collection;
                xamlType = userType;
                break;

            case 63:   //  Telerik.Data.Core.FilterDescriptorBase
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Telerik.Data.Core.DataDescriptor"));
                xamlType = userType;
                break;

            case 64:   //  Telerik.Data.Core.AggregateDescriptorCollection
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Telerik.Data.Core.DataDescriptorCollection`1<Telerik.Data.Core.AggregateDescriptorBase>"));
                userType.CollectionAdd = VectorAdd_64_AggregateDescriptorCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 65:   //  Telerik.Data.Core.DataDescriptorCollection`1<Telerik.Data.Core.AggregateDescriptorBase>
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.ObservableCollection`1<Telerik.Data.Core.AggregateDescriptorBase>"));
                userType.CollectionAdd = VectorAdd_65_DataDescriptorCollection;
                xamlType = userType;
                break;

            case 66:   //  System.Collections.ObjectModel.ObservableCollection`1<Telerik.Data.Core.AggregateDescriptorBase>
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<Telerik.Data.Core.AggregateDescriptorBase>"));
                userType.Activator = Activate_66_ObservableCollection;
                userType.CollectionAdd = VectorAdd_66_ObservableCollection;
                xamlType = userType;
                break;

            case 67:   //  System.Collections.ObjectModel.Collection`1<Telerik.Data.Core.AggregateDescriptorBase>
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_67_Collection;
                userType.CollectionAdd = VectorAdd_67_Collection;
                xamlType = userType;
                break;

            case 68:   //  Telerik.Data.Core.AggregateDescriptorBase
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Telerik.Data.Core.DataDescriptor"));
                xamlType = userType;
                break;

            case 69:   //  Windows.UI.Xaml.Media.Brush
                xamlType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 70:   //  Telerik.UI.Xaml.Controls.Primitives.ObjectSelector`1<Windows.UI.Xaml.Media.Brush>
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 71:   //  Telerik.UI.Xaml.Controls.Primitives.GridLinesVisibility
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("None", global::Telerik.UI.Xaml.Controls.Primitives.GridLinesVisibility.None);
                userType.AddEnumValue("Horizontal", global::Telerik.UI.Xaml.Controls.Primitives.GridLinesVisibility.Horizontal);
                userType.AddEnumValue("Vertical", global::Telerik.UI.Xaml.Controls.Primitives.GridLinesVisibility.Vertical);
                userType.AddEnumValue("Both", global::Telerik.UI.Xaml.Controls.Primitives.GridLinesVisibility.Both);
                xamlType = userType;
                break;

            case 72:   //  Telerik.UI.Xaml.Controls.Grid.DataGridUserEditMode
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("None", global::Telerik.UI.Xaml.Controls.Grid.DataGridUserEditMode.None);
                userType.AddEnumValue("Inline", global::Telerik.UI.Xaml.Controls.Grid.DataGridUserEditMode.Inline);
                userType.AddEnumValue("External", global::Telerik.UI.Xaml.Controls.Grid.DataGridUserEditMode.External);
                xamlType = userType;
                break;

            case 73:   //  Telerik.UI.Xaml.Controls.Grid.IGridExternalEditor
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 74:   //  Telerik.UI.Xaml.Controls.Grid.HitTestService
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Telerik.UI.Xaml.Controls.Primitives.ServiceBase`1<Telerik.UI.Xaml.Controls.Grid.RadDataGrid>"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 75:   //  Telerik.UI.Xaml.Controls.Grid.DataGridRowDetailsMode
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("None", global::Telerik.UI.Xaml.Controls.Grid.DataGridRowDetailsMode.None);
                userType.AddEnumValue("Single", global::Telerik.UI.Xaml.Controls.Grid.DataGridRowDetailsMode.Single);
                xamlType = userType;
                break;

            case 76:   //  Telerik.UI.Xaml.Controls.Grid.DataGridSelectionUnit
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Row", global::Telerik.UI.Xaml.Controls.Grid.DataGridSelectionUnit.Row);
                userType.AddEnumValue("Cell", global::Telerik.UI.Xaml.Controls.Grid.DataGridSelectionUnit.Cell);
                xamlType = userType;
                break;

            case 77:   //  Telerik.UI.Xaml.Controls.Grid.DataGridSelectionMode
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("None", global::Telerik.UI.Xaml.Controls.Grid.DataGridSelectionMode.None);
                userType.AddEnumValue("Single", global::Telerik.UI.Xaml.Controls.Grid.DataGridSelectionMode.Single);
                userType.AddEnumValue("Multiple", global::Telerik.UI.Xaml.Controls.Grid.DataGridSelectionMode.Multiple);
                xamlType = userType;
                break;

            case 78:   //  System.Collections.ObjectModel.ObservableCollection`1<Object>
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<Object>"));
                userType.CollectionAdd = VectorAdd_78_ObservableCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 79:   //  System.Collections.ObjectModel.Collection`1<Object>
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_79_Collection;
                userType.CollectionAdd = VectorAdd_79_Collection;
                xamlType = userType;
                break;

            case 80:   //  Telerik.UI.Xaml.Controls.Grid.DataGridTextColumn
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Telerik.UI.Xaml.Controls.Grid.DataGridTypedColumn"));
                userType.Activator = Activate_80_DataGridTextColumn;
                userType.AddMemberName("CellContentFormat");
                xamlType = userType;
                break;

            case 81:   //  Telerik.UI.Xaml.Controls.Grid.DataGridTypedColumn
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Telerik.UI.Xaml.Controls.Grid.DataGridColumn"));
                userType.AddMemberName("PropertyName");
                userType.AddMemberName("CellContentStyle");
                userType.AddMemberName("CellContentStyleSelector");
                userType.AddMemberName("CellEditorStyle");
                xamlType = userType;
                break;

            case 82:   //  RaspberryPiV3.Bolgeler
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_82_Bolgeler;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 83:   //  Telerik.UI.Xaml.Controls.Grid.DataGridNumericalColumn
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Telerik.UI.Xaml.Controls.Grid.DataGridTextColumn"));
                userType.Activator = Activate_83_DataGridNumericalColumn;
                xamlType = userType;
                break;

            case 84:   //  Telerik.UI.Xaml.Controls.Grid.DataGridDateColumn
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Telerik.UI.Xaml.Controls.Grid.DataGridTextColumn"));
                userType.Activator = Activate_84_DataGridDateColumn;
                xamlType = userType;
                break;

            case 85:   //  RaspberryPiV3.DepoDurumu
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_85_DepoDurumu;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 86:   //  RaspberryPiV3.Depolar
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_86_Depolar;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 87:   //  RaspberryPiV3.Iletisim
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_87_Iletisim;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 88:   //  RaspberryPiV3.Kullanicikayit
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_88_Kullanicikayit;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 89:   //  RaspberryPiV3.Kullanicilar
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_89_Kullanicilar;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 90:   //  RaspberryPiV3.MainPage
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_90_MainPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 91:   //  Telerik.UI.Xaml.Controls.Input.RadDatePicker
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Telerik.UI.Xaml.Controls.Input.DateTimePicker"));
                userType.Activator = Activate_91_RadDatePicker;
                userType.AddMemberName("DayStepBehavior");
                userType.AddMemberName("MonthStepBehavior");
                userType.AddMemberName("YearStepBehavior");
                xamlType = userType;
                break;

            case 92:   //  Telerik.UI.Xaml.Controls.Input.DateTimePicker
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Telerik.UI.Xaml.Controls.RadHeaderedControl"));
                userType.AddMemberName("DisplayMode");
                userType.AddMemberName("CalendarNumeralSystem");
                userType.AddMemberName("CalendarIdentifier");
                userType.AddMemberName("CalendarLanguage");
                userType.AddMemberName("Step");
                userType.AddMemberName("AutoSizeWidth");
                userType.AddMemberName("IsReadOnly");
                userType.AddMemberName("EmptyContent");
                userType.AddMemberName("EmptyContentTemplate");
                userType.AddMemberName("ValueString");
                userType.AddMemberName("MaxValue");
                userType.AddMemberName("MinValue");
                userType.AddMemberName("Value");
                userType.AddMemberName("DisplayValueFormat");
                userType.AddMemberName("SelectorBackgroundStyle");
                userType.AddMemberName("ItemLength");
                userType.AddMemberName("ItemSpacing");
                userType.AddMemberName("SelectorOrder");
                userType.AddMemberName("IsOpen");
                userType.AddMemberName("SelectorDefaultValue");
                userType.AddMemberName("SelectorHeader");
                userType.AddMemberName("SelectorHeaderTemplate");
                userType.AddMemberName("ItemCount");
                xamlType = userType;
                break;

            case 93:   //  Telerik.UI.Xaml.Controls.RadHeaderedControl
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Telerik.UI.Xaml.Controls.RadControl"));
                userType.AddMemberName("Header");
                userType.AddMemberName("HeaderTemplate");
                userType.AddMemberName("HeaderStyle");
                xamlType = userType;
                break;

            case 94:   //  Telerik.UI.Xaml.Controls.Input.StepBehavior
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Multiples", global::Telerik.UI.Xaml.Controls.Input.StepBehavior.Multiples);
                userType.AddEnumValue("StartFromBase", global::Telerik.UI.Xaml.Controls.Input.StepBehavior.StartFromBase);
                userType.AddEnumValue("BaseAndMultiples", global::Telerik.UI.Xaml.Controls.Input.StepBehavior.BaseAndMultiples);
                xamlType = userType;
                break;

            case 95:   //  Telerik.UI.Xaml.Controls.Input.DateTimePickerDisplayMode
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Standard", global::Telerik.UI.Xaml.Controls.Input.DateTimePickerDisplayMode.Standard);
                userType.AddEnumValue("Inline", global::Telerik.UI.Xaml.Controls.Input.DateTimePickerDisplayMode.Inline);
                xamlType = userType;
                break;

            case 96:   //  System.DateTimeOffset
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 97:   //  System.DateTime
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 98:   //  System.Nullable`1<System.DateTime>
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 99:   //  RaspberryPiV3.Urunler
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_99_Urunler;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 100:   //  DevExpress.UI.Xaml.TitleSettings
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObject"));
                userType.Activator = Activate_100_TitleSettings;
                userType.AddMemberName("ButtonInactiveForeground");
                userType.AddMemberName("ButtonInactiveBackground");
                userType.AddMemberName("ButtonPressedForeground");
                userType.AddMemberName("ButtonPressedBackground");
                userType.AddMemberName("ButtonHoverForeground");
                userType.AddMemberName("ButtonHoverBackground");
                userType.AddMemberName("ButtonBackground");
                userType.AddMemberName("ButtonForeground");
                userType.AddMemberName("InactiveForeground");
                userType.AddMemberName("InactiveBackground");
                userType.AddMemberName("Foreground");
                userType.AddMemberName("Background");
                userType.SetIsBindable();
                xamlType = userType;
                break;

            case 101:   //  Windows.UI.Xaml.Media.SolidColorBrush
                xamlType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 102:   //  DevExpress.UI.Xaml.Controls.PdfOverlayBarLocation
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.Mvvm.BindableBase"));
                userType.Activator = Activate_102_PdfOverlayBarLocation;
                userType.AddMemberName("Location");
                userType.AddMemberName("Width");
                userType.AddMemberName("Height");
                userType.SetIsBindable();
                xamlType = userType;
                break;

            case 103:   //  DevExpress.Mvvm.BindableBase
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                xamlType = userType;
                break;

            case 104:   //  Windows.UI.Xaml.Controls.Primitives.EdgeTransitionLocation
                xamlType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 105:   //  DevExpress.UI.Xaml.Controls.SimpleSettingsBarOverlaySettings
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.UI.Xaml.Controls.PdfOverlaySettingsBase"));
                userType.Activator = Activate_105_SimpleSettingsBarOverlaySettings;
                userType.AddMemberName("ShowRightSideDefaultItems");
                userType.AddMemberName("ShowLeftSideDefaultItems");
                userType.AddMemberName("FlyoutItemTemplateSelector");
                userType.AddMemberName("LeftSideItemsSource");
                userType.AddMemberName("RightSideItemsSource");
                userType.AddMemberName("ActualFlyoutItemTemplateSelector");
                userType.AddMemberName("LeftSideItems");
                userType.AddMemberName("RightSideItems");
                userType.SetIsBindable();
                xamlType = userType;
                break;

            case 106:   //  DevExpress.UI.Xaml.Controls.PdfOverlaySettingsBase
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObject"));
                userType.AddMemberName("AttachmentsPanelLocation");
                userType.AddMemberName("BookmarksPanelLocation");
                userType.AddMemberName("FindPanelLocation");
                userType.AddMemberName("SettingsBarLocation");
                userType.AddMemberName("IsSettingsBarVisible");
                userType.AddMemberName("IsZoomBarVisible");
                userType.AddMemberName("IsPageBarVisible");
                userType.AddMemberName("IsBookmarksPanelVisible");
                userType.AddMemberName("IsAttachmentsPanelVisible");
                userType.AddMemberName("IsFindPanelVisible");
                userType.AddMemberName("HideZoomBarDelay");
                userType.AddMemberName("HidePageBarDelay");
                userType.AddMemberName("ShowPrintDocumentButton");
                userType.AddMemberName("ShowOpenDocumentButton");
                userType.AddMemberName("ShowSaveDocumentButton");
                userType.AddMemberName("ShowBookmarksButton");
                userType.AddMemberName("ShowAttachmentsButton");
                xamlType = userType;
                break;

            case 107:   //  DevExpress.UI.Xaml.Controls.SettingsBarItemCollection
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.Core.Native.ObservableCollectionView`1<DevExpress.UI.Xaml.Controls.ISettingsBarItem>"));
                userType.CollectionAdd = VectorAdd_107_SettingsBarItemCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 108:   //  DevExpress.Core.Native.ObservableCollectionView`1<DevExpress.UI.Xaml.Controls.ISettingsBarItem>
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.Mvvm.BindableBase"));
                userType.CollectionAdd = VectorAdd_108_ObservableCollectionView;
                xamlType = userType;
                break;

            case 109:   //  DevExpress.UI.Xaml.Controls.ISettingsBarItem
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                xamlType = userType;
                break;

            case 110:   //  DevExpress.UI.Xaml.Controls.IPdfOverlayBarLocation
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 111:   //  TimeSpan
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 112:   //  DevExpress.UI.Xaml.Controls.PdfViewerControl
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.UI.Xaml.Internal.ControlEx"));
                userType.Activator = Activate_112_PdfViewerControl;
                userType.AddMemberName("ActualIsSettingsBarVisible");
                userType.AddMemberName("ActualIsPageBarVisible");
                userType.AddMemberName("ActualIsZoomBarVisible");
                userType.AddMemberName("ActualIsFindTextPanelVisible");
                userType.AddMemberName("ShowPrintDocumentButton");
                userType.AddMemberName("ShowOpenDocumentButton");
                userType.AddMemberName("ShowSaveDocumentButton");
                userType.AddMemberName("ShowBookmarksButton");
                userType.AddMemberName("IsSettingsBarVisible");
                userType.AddMemberName("IsZoomBarVisible");
                userType.AddMemberName("IsPageBarVisible");
                userType.AddMemberName("IsFindTextPanelVisible");
                userType.AddMemberName("ShowRightSideDefaultSettingsBarItems");
                userType.AddMemberName("ShowLeftSideDefaultSettingsBarItems");
                userType.AddMemberName("SettingsBarFlyoutItemTemplateSelector");
                userType.AddMemberName("LeftSideSettingsBarItemsSource");
                userType.AddMemberName("RightSideSettingsBarItemsSource");
                userType.AddMemberName("DocumentSource");
                userType.AddMemberName("DocumentUri");
                userType.AddMemberName("PdfViewMode");
                userType.AddMemberName("PrintDocumentSource");
                userType.AddMemberName("PageSpacing");
                userType.AddMemberName("PageMargin");
                userType.AddMemberName("ContentMargin");
                userType.AddMemberName("ZoomMode");
                userType.AddMemberName("CurrentPageIndex");
                userType.AddMemberName("CurrentZoomFactor");
                userType.AddMemberName("DefaultZoomFactor");
                userType.AddMemberName("MaxZoomFactor");
                userType.AddMemberName("CurrentPageNumber");
                userType.AddMemberName("ActualIsLoading");
                userType.AddMemberName("IsDataLoading");
                userType.AddMemberName("PageCount");
                userType.AddMemberName("Document");
                userType.AddMemberName("CornerRadius");
                userType.AddMemberName("PrintDocumentCommand");
                userType.AddMemberName("ViewerError");
                userType.AddMemberName("DocumentPrintingQuality");
                userType.AddMemberName("ThumbnailHeight");
                userType.AddMemberName("PdfDocumentLoadingPolicy");
                userType.AddMemberName("OverlaySettings");
                userType.AddMemberName("OverlaySettingsTemplate");
                userType.AddMemberName("ActualOverlaySettings");
                userType.AddMemberName("ContainerActualWidth");
                userType.AddMemberName("ContainerActualHeight");
                userType.AddMemberName("ThumbnailSpacing");
                userType.AddMemberName("IsInitialized");
                userType.AddMemberName("IsZoomedOutView");
                userType.AddMemberName("ZoomCommand");
                userType.AddMemberName("SetViewModeCommand");
                userType.AddMemberName("FitSizeCommand");
                userType.AddMemberName("SetZoomModeCommand");
                userType.AddMemberName("OpenFileCommand");
                userType.AddMemberName("SaveAsCommand");
                userType.AddMemberName("LoadDocumentCommand");
                userType.AddMemberName("CloseDocumentCommand");
                userType.AddMemberName("NextPageCommand");
                userType.AddMemberName("PreviousPageCommand");
                userType.AddMemberName("SetPageNumberCommand");
                userType.AddMemberName("SetZoomFactorCommand");
                userType.AddMemberName("FindTextCommand");
                userType.AddMemberName("FindNextTextCommand");
                userType.AddMemberName("FindPreviousTextCommand");
                userType.AddMemberName("ClearFindResultsCommand");
                userType.AddMemberName("ShowFindPanelCommand");
                userType.AddMemberName("CloseFindPanelAndClearFindResultsCommand");
                userType.AddMemberName("ToggleOverlayCommand");
                userType.AddMemberName("OpenAttachmentCommand");
                userType.AddMemberName("SaveAttachmentCommand");
                userType.AddMemberName("NavigateToOutlineCommand");
                userType.SetIsBindable();
                xamlType = userType;
                break;

            case 113:   //  DevExpress.UI.Xaml.Internal.ControlEx
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Control"));
                userType.AddMemberName("ActualSize");
                userType.AddMemberName("IsLoaded");
                xamlType = userType;
                break;

            case 114:   //  System.Uri
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 115:   //  DevExpress.UI.Xaml.Controls.PdfViewMode
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("SinglePage", global::DevExpress.UI.Xaml.Controls.PdfViewMode.SinglePage);
                userType.AddEnumValue("Continuous", global::DevExpress.UI.Xaml.Controls.PdfViewMode.Continuous);
                xamlType = userType;
                break;

            case 116:   //  Windows.Graphics.Printing.IPrintDocumentSource
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 117:   //  Windows.UI.Xaml.Thickness
                xamlType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 118:   //  DevExpress.UI.Xaml.Controls.PdfZoomMode
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("FitPageLevel", global::DevExpress.UI.Xaml.Controls.PdfZoomMode.FitPageLevel);
                userType.AddEnumValue("FitWidth", global::DevExpress.UI.Xaml.Controls.PdfZoomMode.FitWidth);
                userType.AddEnumValue("FitHeight", global::DevExpress.UI.Xaml.Controls.PdfZoomMode.FitHeight);
                userType.AddEnumValue("PagePreferredZoom", global::DevExpress.UI.Xaml.Controls.PdfZoomMode.PagePreferredZoom);
                userType.AddEnumValue("Custom", global::DevExpress.UI.Xaml.Controls.PdfZoomMode.Custom);
                userType.AddEnumValue("Auto", global::DevExpress.UI.Xaml.Controls.PdfZoomMode.Auto);
                xamlType = userType;
                break;

            case 119:   //  Single
                xamlType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 120:   //  DevExpress.UI.Xaml.Controls.PdfDocumentContainer
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.Mvvm.BindableBase"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 121:   //  Windows.UI.Xaml.CornerRadius
                xamlType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 122:   //  System.Windows.Input.ICommand
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 123:   //  DevExpress.UI.Xaml.Controls.PdfViewerErrorWrapper
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.Mvvm.BindableBase"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 124:   //  DevExpress.UI.Xaml.Controls.PdfDocumentLoadingPolicy
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("NativeOnly", global::DevExpress.UI.Xaml.Controls.PdfDocumentLoadingPolicy.NativeOnly);
                userType.AddEnumValue("NativeOnlyInMemory", global::DevExpress.UI.Xaml.Controls.PdfDocumentLoadingPolicy.NativeOnlyInMemory);
                userType.AddEnumValue("OnDemand", global::DevExpress.UI.Xaml.Controls.PdfDocumentLoadingPolicy.OnDemand);
                userType.AddEnumValue("InMemory", global::DevExpress.UI.Xaml.Controls.PdfDocumentLoadingPolicy.InMemory);
                userType.AddEnumValue("InMemoryOnDemand", global::DevExpress.UI.Xaml.Controls.PdfDocumentLoadingPolicy.InMemoryOnDemand);
                xamlType = userType;
                break;

            case 125:   //  Windows.Foundation.Size
                xamlType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 126:   //  DevExpress.UI.Xaml.Controls.RadialContextMenuCommandBase
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.Core.Native.DXControl"));
                userType.Activator = Activate_126_RadialContextMenuCommandBase;
                userType.AddMemberName("Content");
                userType.AddMemberName("ActualIndex");
                userType.AddMemberName("Index");
                userType.AddMemberName("Location");
                userType.AddMemberName("ContentTemplate");
                userType.AddMemberName("ActualContentTemplate");
                userType.AddMemberName("ViewInfo");
                userType.AddMemberName("Uri");
                userType.AddMemberName("Label");
                userType.SetIsBindable();
                xamlType = userType;
                break;

            case 127:   //  DevExpress.Core.Native.DXControl
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Control"));
                userType.Activator = Activate_127_DXControl;
                userType.AddMemberName("IsFocused");
                userType.AddMemberName("IsKeyboardFocusWithin");
                userType.AddMemberName("IsLoaded");
                userType.AddMemberName("IsMouseOver");
                xamlType = userType;
                break;

            case 128:   //  Windows.Foundation.Point
                xamlType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 129:   //  DevExpress.UI.Xaml.Controls.Internal.ViewInfo
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.Mvvm.BindableBase"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 130:   //  DevExpress.UI.Xaml.Controls.RadialMenuControlBase
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.ContentControl"));
                userType.Activator = Activate_130_RadialMenuControlBase;
                userType.AddMemberName("DefaultActionCommand");
                userType.AddMemberName("NavigateCommand");
                userType.SetIsBindable();
                xamlType = userType;
                break;

            case 131:   //  Windows.UI.Xaml.Controls.ContentControl
                xamlType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 132:   //  DevExpress.UI.Xaml.Controls.Internal.Pdf.PdfDocumentState
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.Pdf.Native.PdfDocumentStateBase"));
                userType.SetIsBindable();
                xamlType = userType;
                break;

            case 133:   //  DevExpress.Pdf.Native.PdfDocumentStateBase
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.Pdf.Native.PdfDisposableObject"));
                userType.AddMemberName("Document");
                userType.AddMemberName("FontStorage");
                userType.AddMemberName("ImageDataStorage");
                userType.AddMemberName("SelectionState");
                userType.AddMemberName("Outlines");
                userType.AddMemberName("FileAttachments");
                userType.AddMemberName("RotationAngle");
                userType.AddMemberName("HighlightFormFields");
                userType.AddMemberName("HighlightedFormFieldColor");
                userType.AddMemberName("FormData");
                xamlType = userType;
                break;

            case 134:   //  DevExpress.Pdf.Native.PdfDisposableObject
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                xamlType = userType;
                break;

            case 135:   //  DevExpress.Pdf.PdfDocument
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 136:   //  DevExpress.Pdf.Native.IFontStorage
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 137:   //  DevExpress.Pdf.Native.PdfImageDataStorage
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.Pdf.Native.PdfCache`2<DevExpress.Pdf.PdfImage, DevExpress.Pdf.Native.PdfImageData>"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 138:   //  DevExpress.Pdf.Native.PdfCache`2<DevExpress.Pdf.PdfImage, DevExpress.Pdf.Native.PdfImageData>
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                xamlType = userType;
                break;

            case 139:   //  DevExpress.Pdf.Native.PdfSelectionState
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 140:   //  DevExpress.Pdf.Native.PdfOutlineTreeListItemCollection
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.ObservableCollection`1<DevExpress.Pdf.Native.PdfOutlineTreeListItem>"));
                userType.CollectionAdd = VectorAdd_140_PdfOutlineTreeListItemCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 141:   //  System.Collections.ObjectModel.ObservableCollection`1<DevExpress.Pdf.Native.PdfOutlineTreeListItem>
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<DevExpress.Pdf.Native.PdfOutlineTreeListItem>"));
                userType.Activator = Activate_141_ObservableCollection;
                userType.CollectionAdd = VectorAdd_141_ObservableCollection;
                xamlType = userType;
                break;

            case 142:   //  System.Collections.ObjectModel.Collection`1<DevExpress.Pdf.Native.PdfOutlineTreeListItem>
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_142_Collection;
                userType.CollectionAdd = VectorAdd_142_Collection;
                xamlType = userType;
                break;

            case 143:   //  DevExpress.Pdf.Native.PdfOutlineTreeListItem
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.AddMemberName("Id");
                userType.AddMemberName("ParentId");
                userType.AddMemberName("Title");
                userType.AddMemberName("Italic");
                userType.AddMemberName("Bold");
                userType.AddMemberName("ForeColor");
                userType.AddMemberName("HasChildNodes");
                userType.AddMemberName("UseForeColor");
                userType.AddMemberName("Expanded");
                xamlType = userType;
                break;

            case 144:   //  DevExpress.Pdf.PdfColor
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 145:   //  System.Collections.Generic.IList`1<DevExpress.Pdf.Native.PdfFileAttachmentListItem>
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.CollectionAdd = VectorAdd_145_IList;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 146:   //  DevExpress.Pdf.Native.PdfFileAttachmentListItem
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.AddMemberName("FileAttachment");
                userType.AddMemberName("Icon");
                userType.AddMemberName("Size");
                userType.AddMemberName("Hint");
                userType.AddMemberName("FileName");
                userType.AddMemberName("ModificationDate");
                userType.AddMemberName("Description");
                xamlType = userType;
                break;

            case 147:   //  DevExpress.Pdf.PdfFileAttachment
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 148:   //  Byte[]
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Array"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 149:   //  System.Array
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                xamlType = userType;
                break;

            case 150:   //  Byte
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                xamlType = userType;
                break;

            case 151:   //  System.Nullable`1<System.DateTimeOffset>
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 152:   //  DevExpress.Pdf.PdfFormData
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 153:   //  DevExpress.UI.Xaml.Controls.Internal.Pdf.PdfTextHighlightViewModel
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.Mvvm.BindableBase"));
                userType.AddMemberName("Items");
                userType.AddMemberName("HighlightGeometry");
                userType.AddMemberName("SelectionGeometry");
                userType.AddMemberName("IsLockUpdate");
                userType.AddMemberName("HasSelection");
                userType.SetIsBindable();
                xamlType = userType;
                break;

            case 154:   //  System.Collections.Generic.List`1<DevExpress.UI.Xaml.Controls.IPdfTextSearchResult>
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.CollectionAdd = VectorAdd_154_List;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 155:   //  DevExpress.UI.Xaml.Controls.IPdfTextSearchResult
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.AddMemberName("PageIndex");
                userType.AddMemberName("Rectangles");
                userType.AddMemberName("Words");
                userType.AddMemberName("SearchText");
                userType.AddMemberName("IsSelected");
                xamlType = userType;
                break;

            case 156:   //  System.Collections.Generic.IList`1<DevExpress.Pdf.PdfOrientedRectangle>
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.CollectionAdd = VectorAdd_156_IList;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 157:   //  DevExpress.Pdf.PdfOrientedRectangle
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.AddMemberName("Left");
                userType.AddMemberName("Top");
                userType.AddMemberName("Width");
                userType.AddMemberName("Height");
                userType.AddMemberName("Angle");
                xamlType = userType;
                break;

            case 158:   //  System.Collections.Generic.IList`1<DevExpress.Pdf.PdfWord>
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.CollectionAdd = VectorAdd_158_IList;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 159:   //  DevExpress.Pdf.PdfWord
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.AddMemberName("Text");
                userType.AddMemberName("Rectangles");
                userType.AddMemberName("Characters");
                xamlType = userType;
                break;

            case 160:   //  System.Collections.Generic.IList`1<DevExpress.Pdf.PdfCharacter>
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.CollectionAdd = VectorAdd_160_IList;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 161:   //  DevExpress.Pdf.PdfCharacter
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.AddMemberName("UnicodeData");
                userType.AddMemberName("Font");
                userType.AddMemberName("FontSize");
                userType.AddMemberName("Rectangle");
                xamlType = userType;
                break;

            case 162:   //  DevExpress.Pdf.PdfFont
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.Pdf.Native.PdfObject"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 163:   //  DevExpress.Pdf.Native.PdfObject
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.Pdf.Native.PdfDocumentItem"));
                xamlType = userType;
                break;

            case 164:   //  DevExpress.Pdf.Native.PdfDocumentItem
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                xamlType = userType;
                break;

            case 165:   //  Windows.UI.Xaml.Media.Geometry
                xamlType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 166:   //  DevExpress.UI.Xaml.Editors.ColorGroup
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObject"));
                userType.Activator = Activate_166_ColorGroup;
                userType.SetContentPropertyName("DevExpress.UI.Xaml.Editors.ColorGroup.BaseColors");
                userType.AddMemberName("BaseColors");
                userType.AddMemberName("ColorVariationsCount");
                userType.AddMemberName("Title");
                userType.AddMemberName("ActualColors");
                userType.AddMemberName("dummyColorsCount");
                userType.SetIsBindable();
                xamlType = userType;
                break;

            case 167:   //  DevExpress.UI.Xaml.Editors.ColorList
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.ObservableCollection`1<Windows.UI.Color>"));
                userType.CollectionAdd = VectorAdd_167_ColorList;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 168:   //  System.Collections.ObjectModel.ObservableCollection`1<Windows.UI.Color>
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<Windows.UI.Color>"));
                userType.Activator = Activate_168_ObservableCollection;
                userType.CollectionAdd = VectorAdd_168_ObservableCollection;
                xamlType = userType;
                break;

            case 169:   //  System.Collections.ObjectModel.Collection`1<Windows.UI.Color>
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_169_Collection;
                userType.CollectionAdd = VectorAdd_169_Collection;
                xamlType = userType;
                break;

            case 170:   //  Windows.UI.Color
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.AddMemberName("A");
                userType.AddMemberName("B");
                userType.AddMemberName("G");
                userType.AddMemberName("R");
                xamlType = userType;
                break;

            case 171:   //  DevExpress.UI.Xaml.Editors.BrushList
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.Core.Native.ObservableCollectionView`1<Windows.UI.Xaml.Media.SolidColorBrush>"));
                userType.CollectionAdd = VectorAdd_171_BrushList;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 172:   //  DevExpress.Core.Native.ObservableCollectionView`1<Windows.UI.Xaml.Media.SolidColorBrush>
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.Mvvm.BindableBase"));
                userType.CollectionAdd = VectorAdd_172_ObservableCollectionView;
                xamlType = userType;
                break;

            case 173:   //  DevExpress.UI.Xaml.Editors.ColorEdit
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.UI.Xaml.Internal.ControlEx"));
                userType.Activator = Activate_173_ColorEdit;
                userType.SetContentPropertyName("DevExpress.UI.Xaml.Editors.ColorEdit.ColorGroups");
                userType.AddMemberName("ColorGroups");
                userType.AddMemberName("ActualPickerSelectedColor");
                userType.AddMemberName("Color");
                userType.AddMemberName("DefaultColor");
                userType.AddMemberName("GallerySelectedColor");
                userType.AddMemberName("IsInAdvancedMode");
                userType.AddMemberName("MaxColCount");
                userType.AddMemberName("MaxGroupSize");
                userType.AddMemberName("PickerSelectedColor");
                userType.AddMemberName("ColorGroupsSource");
                userType.AddMemberName("ActualColorGroups");
                userType.AddMemberName("ApplyCustomColorCommand");
                userType.AddMemberName("ApplyDefaultColorCommand");
                userType.AddMemberName("CancelCommand");
                userType.AddMemberName("ApplyColorCommand");
                userType.SetIsBindable();
                xamlType = userType;
                break;

            case 174:   //  DevExpress.UI.Xaml.Editors.ColorGroupsList
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.Core.Native.ObservableCollectionView`1<DevExpress.UI.Xaml.Editors.ColorGroup>"));
                userType.CollectionAdd = VectorAdd_174_ColorGroupsList;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 175:   //  DevExpress.Core.Native.ObservableCollectionView`1<DevExpress.UI.Xaml.Editors.ColorGroup>
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.Mvvm.BindableBase"));
                userType.CollectionAdd = VectorAdd_175_ObservableCollectionView;
                xamlType = userType;
                break;

            case 176:   //  DevExpress.Mvvm.DelegateCommand
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.Mvvm.DelegateCommand`1<Object>"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 177:   //  DevExpress.Mvvm.DelegateCommand`1<Object>
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.Mvvm.DelegateCommandBase`1<Object>"));
                xamlType = userType;
                break;

            case 178:   //  DevExpress.Mvvm.DelegateCommandBase`1<Object>
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.Mvvm.CommandBase`1<Object>"));
                xamlType = userType;
                break;

            case 179:   //  DevExpress.Mvvm.CommandBase`1<Object>
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.Mvvm.CommandBase"));
                xamlType = userType;
                break;

            case 180:   //  DevExpress.Mvvm.CommandBase
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                xamlType = userType;
                break;

            case 181:   //  DevExpress.UI.Xaml.Editors.ColorPicker
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Control"));
                userType.Activator = Activate_181_ColorPicker;
                userType.AddMemberName("AThumbOffset");
                userType.AddMemberName("HThumbOffset");
                userType.AddMemberName("SThumbOffset");
                userType.AddMemberName("BThumbOffset");
                userType.AddMemberName("PureColor");
                userType.AddMemberName("PureTransparentColor");
                userType.AddMemberName("SelectedColor");
                userType.AddMemberName("ColorModels");
                userType.AddMemberName("HSBColor");
                userType.AddMemberName("RGBColor");
                userType.SetIsBindable();
                xamlType = userType;
                break;

            case 182:   //  DevExpress.UI.Xaml.Editors.ColorModelCollection
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.Core.Native.ObservableCollectionView`1<DevExpress.UI.Xaml.Editors.ColorModelBase>"));
                userType.CollectionAdd = VectorAdd_182_ColorModelCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 183:   //  DevExpress.Core.Native.ObservableCollectionView`1<DevExpress.UI.Xaml.Editors.ColorModelBase>
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.Mvvm.BindableBase"));
                userType.CollectionAdd = VectorAdd_183_ObservableCollectionView;
                xamlType = userType;
                break;

            case 184:   //  DevExpress.UI.Xaml.Editors.ColorModelBase
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.Mvvm.BindableBase"));
                userType.AddMemberName("ALow");
                userType.AddMemberName("AHigh");
                userType.AddMemberName("A");
                userType.AddMemberName("Color");
                userType.AddMemberName("Hex");
                userType.AddMemberName("ColorMode");
                xamlType = userType;
                break;

            case 185:   //  DevExpress.UI.Xaml.Editors.ColorPickerColorMode
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("RGB", global::DevExpress.UI.Xaml.Editors.ColorPickerColorMode.RGB);
                userType.AddEnumValue("CMYK", global::DevExpress.UI.Xaml.Editors.ColorPickerColorMode.CMYK);
                userType.AddEnumValue("HLS", global::DevExpress.UI.Xaml.Editors.ColorPickerColorMode.HLS);
                userType.AddEnumValue("HSB", global::DevExpress.UI.Xaml.Editors.ColorPickerColorMode.HSB);
                xamlType = userType;
                break;

            case 186:   //  DevExpress.UI.Xaml.Editors.HSBColorModel
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.UI.Xaml.Editors.ColorModelBase"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 187:   //  DevExpress.UI.Xaml.Editors.RGBColorModel
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.UI.Xaml.Editors.ColorModelBase"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 188:   //  DevExpress.UI.Xaml.Editors.PopupSettings
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.Core.Native.DXControl"));
                userType.Activator = Activate_188_PopupSettings;
                userType.SetContentPropertyName("DevExpress.UI.Xaml.Editors.PopupSettings.PopupContent");
                userType.AddMemberName("PopupContent");
                userType.AddMemberName("ClosePopupCommand");
                userType.AddMemberName("ShowPopupButtons");
                userType.AddMemberName("IsPopupOpen");
                userType.AddMemberName("PopupContentTemplate");
                userType.AddMemberName("PopupTemplate");
                userType.AddMemberName("PopupContentTemplateSelector");
                userType.AddMemberName("PopupContentContainerTemplate");
                userType.AddMemberName("PopupAutoWidth");
                userType.AddMemberName("PopupWidth");
                userType.AddMemberName("PopupHeight");
                userType.AddMemberName("ActualPopupWidth");
                userType.AddMemberName("ActualPopupHeight");
                userType.AddMemberName("PopupMaxWidth");
                userType.AddMemberName("PopupMinWidth");
                userType.AddMemberName("ActualPopupMinWidth");
                userType.AddMemberName("PopupMaxHeight");
                userType.AddMemberName("PopupMinHeight");
                userType.AddMemberName("PostEditValue");
                userType.AddMemberName("PopupEditValue");
                userType.SetIsBindable();
                xamlType = userType;
                break;

            case 189:   //  Windows.UI.Xaml.Controls.ControlTemplate
                xamlType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 190:   //  DevExpress.UI.Xaml.Editors.Internal.ColorGalleryItemContainerGenerator
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.UI.Xaml.GalleryItemContainerGenerator"));
                userType.Activator = Activate_190_ColorGalleryItemContainerGenerator;
                userType.SetIsBindable();
                xamlType = userType;
                break;

            case 191:   //  DevExpress.UI.Xaml.GalleryItemContainerGenerator
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.UI.Xaml.GalleryItemContainerGeneratorBase"));
                userType.Activator = Activate_191_GalleryItemContainerGenerator;
                userType.SetIsBindable();
                xamlType = userType;
                break;

            case 192:   //  DevExpress.UI.Xaml.GalleryItemContainerGeneratorBase
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObject"));
                userType.AddMemberName("ContentTemplate");
                userType.AddMemberName("ContentTemplateSelector");
                userType.AddMemberName("ContainerStyle");
                userType.AddMemberName("ActualColumnWidth");
                userType.AddMemberName("AverageContainerHeight");
                userType.AddMemberName("GroupedItems");
                userType.AddMemberName("MaxContainerHeight");
                userType.AddMemberName("DummyItem");
                xamlType = userType;
                break;

            case 193:   //  Windows.UI.Xaml.FrameworkElement
                xamlType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 194:   //  DevExpress.UI.Xaml.Layout.HamburgerMenuFrame
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.UI.Xaml.Layout.Internal.MenuFrameBase`1<DevExpress.UI.Xaml.Layout.HamburgerMenu>"));
                userType.Activator = Activate_194_HamburgerMenuFrame;
                userType.SetContentPropertyName("DevExpress.UI.Xaml.Layout.Internal.MenuFrameBase`1<DevExpress.UI.Xaml.Layout.HamburgerMenu>.Menu");
                userType.SetIsBindable();
                xamlType = userType;
                break;

            case 195:   //  DevExpress.UI.Xaml.Layout.Internal.MenuFrameBase`1<DevExpress.UI.Xaml.Layout.HamburgerMenu>
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.UI.Xaml.Layout.DXFrame"));
                userType.SetContentPropertyName("DevExpress.UI.Xaml.Layout.Internal.MenuFrameBase`1<DevExpress.UI.Xaml.Layout.HamburgerMenu>.Menu");
                userType.AddMemberName("Menu");
                userType.AddMemberName("MenuPageType");
                xamlType = userType;
                break;

            case 196:   //  DevExpress.UI.Xaml.Layout.DXFrame
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Frame"));
                userType.Activator = Activate_196_DXFrame;
                userType.AddMemberName("ViewModel");
                userType.AddMemberName("NavigationTypeProvider");
                userType.AddMemberName("AllowCustomizingWindowTitle");
                userType.AddMemberName("WindowTitle");
                userType.AddMemberName("WindowTitleSettings");
                userType.AddMemberName("IsMobileStatusBarVisible");
                userType.AddMemberName("MobileStatusBarBackground");
                userType.AddMemberName("MobileStatusBarForeground");
                userType.AddMemberName("SyncRequestedThemeWithThemeManager");
                userType.AddMemberName("HideBackButton");
                xamlType = userType;
                break;

            case 197:   //  Windows.UI.Xaml.Controls.Frame
                xamlType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 198:   //  DevExpress.UI.Xaml.Layout.HamburgerMenu
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Control"));
                userType.Activator = Activate_198_HamburgerMenu;
                userType.SetContentPropertyName("DevExpress.UI.Xaml.Layout.HamburgerMenu.Items");
                userType.AddMemberName("Items");
                xamlType = userType;
                break;

            case 199:   //  System.Collections.ObjectModel.ObservableCollection`1<DevExpress.UI.Xaml.Layout.Internal.IHamburgerMenuItem>
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<DevExpress.UI.Xaml.Layout.Internal.IHamburgerMenuItem>"));
                userType.CollectionAdd = VectorAdd_199_ObservableCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 200:   //  System.Collections.ObjectModel.Collection`1<DevExpress.UI.Xaml.Layout.Internal.IHamburgerMenuItem>
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_200_Collection;
                userType.CollectionAdd = VectorAdd_200_Collection;
                xamlType = userType;
                break;

            case 201:   //  DevExpress.UI.Xaml.Layout.Internal.IHamburgerMenuItem
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.AddMemberName("Placement");
                xamlType = userType;
                break;

            case 202:   //  DevExpress.UI.Xaml.Layout.HamburgerMenuNavigationButtonPlacement
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Top", global::DevExpress.UI.Xaml.Layout.HamburgerMenuNavigationButtonPlacement.Top);
                userType.AddEnumValue("Bottom", global::DevExpress.UI.Xaml.Layout.HamburgerMenuNavigationButtonPlacement.Bottom);
                xamlType = userType;
                break;

            case 203:   //  System.Type
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 204:   //  DevExpress.UI.Xaml.Layout.TypeProviderBase
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 205:   //  DevExpress.UI.Xaml.Layout.TileBarFrame
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.UI.Xaml.Layout.Internal.MenuFrameBase`1<DevExpress.UI.Xaml.Layout.TileBar>"));
                userType.Activator = Activate_205_TileBarFrame;
                userType.SetContentPropertyName("DevExpress.UI.Xaml.Layout.Internal.MenuFrameBase`1<DevExpress.UI.Xaml.Layout.TileBar>.Menu");
                userType.AddMemberName("MenuPlacement");
                userType.SetIsBindable();
                xamlType = userType;
                break;

            case 206:   //  DevExpress.UI.Xaml.Layout.Internal.MenuFrameBase`1<DevExpress.UI.Xaml.Layout.TileBar>
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.UI.Xaml.Layout.DXFrame"));
                userType.SetContentPropertyName("DevExpress.UI.Xaml.Layout.Internal.MenuFrameBase`1<DevExpress.UI.Xaml.Layout.TileBar>.Menu");
                userType.AddMemberName("Menu");
                userType.AddMemberName("MenuPageType");
                xamlType = userType;
                break;

            case 207:   //  DevExpress.UI.Xaml.Layout.TileBar
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.UI.Xaml.Layout.VisualElements.veSelector"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 208:   //  DevExpress.UI.Xaml.Layout.VisualElements.veSelector
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.UI.Xaml.Layout.VisualElements.veItemsControl"));
                xamlType = userType;
                break;

            case 209:   //  DevExpress.UI.Xaml.Layout.VisualElements.veItemsControl
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.ItemsControl"));
                userType.Activator = Activate_209_veItemsControl;
                xamlType = userType;
                break;

            case 210:   //  Windows.UI.Xaml.Controls.ItemsControl
                xamlType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 211:   //  DevExpress.Core.Dock
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Left", global::DevExpress.Core.Dock.Left);
                userType.AddEnumValue("Top", global::DevExpress.Core.Dock.Top);
                userType.AddEnumValue("Right", global::DevExpress.Core.Dock.Right);
                userType.AddEnumValue("Bottom", global::DevExpress.Core.Dock.Bottom);
                xamlType = userType;
                break;

            case 212:   //  DevExpress.UI.Xaml.Ribbon.BackstageTabItem
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.Internal.RibbonSelectorItemBase"));
                userType.Activator = Activate_212_BackstageTabItem;
                userType.SetContentPropertyName("DevExpress.UI.Xaml.Ribbon.BackstageTabItem.ControlPane");
                userType.AddMemberName("ControlPane");
                userType.AddMemberName("ControlPaneShowMode");
                userType.AddMemberName("FlyoutCaption");
                userType.AddMemberName("IsSelectable");
                userType.SetIsBindable();
                xamlType = userType;
                break;

            case 213:   //  DevExpress.UI.Xaml.Ribbon.Internal.RibbonSelectorItemBase
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.Internal.RibbonItemBaseEx"));
                userType.Activator = Activate_213_RibbonSelectorItemBase;
                userType.AddMemberName("IsSelected");
                xamlType = userType;
                break;

            case 214:   //  DevExpress.UI.Xaml.Ribbon.Internal.RibbonItemBaseEx
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.Internal.RibbonItemBase"));
                xamlType = userType;
                break;

            case 215:   //  DevExpress.UI.Xaml.Ribbon.Internal.RibbonItemBase
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.UI.Xaml.Internal.GlyphItemBase"));
                userType.AddMemberName("FlyoutFlowBreak");
                userType.AddMemberName("FlyoutSameRow");
                userType.AddMemberName("FlyoutFlowBreakWithSeparator");
                userType.AddMemberName("ItemStyle");
                userType.AddMemberName("ShowInFlyoutOnly");
                userType.AddMemberName("ShrinkPriority");
                userType.AddMemberName("CollapsePriority");
                userType.AddMemberName("CollapsedGroupName");
                xamlType = userType;
                break;

            case 216:   //  DevExpress.UI.Xaml.Internal.GlyphItemBase
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.UI.Xaml.Internal.PointerItemBase"));
                userType.AddMemberName("Icon");
                userType.AddMemberName("IconSource");
                userType.AddMemberName("IconTemplate");
                userType.AddMemberName("IconFill");
                userType.AddMemberName("IconWidth");
                userType.AddMemberName("IconHeight");
                userType.AddMemberName("IconStretch");
                userType.AddMemberName("IconSizeUnit");
                userType.AddMemberName("TemplateSelector");
                userType.AddMemberName("ClosePopupOnClick");
                xamlType = userType;
                break;

            case 217:   //  DevExpress.UI.Xaml.Internal.PointerItemBase
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.UI.Xaml.Internal.ContentControlEx"));
                userType.AddMemberName("ClickMode");
                userType.AddMemberName("IsPointerOver");
                userType.AddMemberName("IsPressed");
                xamlType = userType;
                break;

            case 218:   //  DevExpress.UI.Xaml.Internal.ContentControlEx
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.ContentControl"));
                userType.AddMemberName("ActualSize");
                userType.AddMemberName("IsLoaded");
                xamlType = userType;
                break;

            case 219:   //  DevExpress.UI.Xaml.Ribbon.ControlPaneShowMode
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Inline", global::DevExpress.UI.Xaml.Ribbon.ControlPaneShowMode.Inline);
                userType.AddEnumValue("Flyout", global::DevExpress.UI.Xaml.Ribbon.ControlPaneShowMode.Flyout);
                xamlType = userType;
                break;

            case 220:   //  DevExpress.UI.Xaml.Ribbon.RibbonItemStyle
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Default", global::DevExpress.UI.Xaml.Ribbon.RibbonItemStyle.Default);
                userType.AddEnumValue("GlyphWithText", global::DevExpress.UI.Xaml.Ribbon.RibbonItemStyle.GlyphWithText);
                userType.AddEnumValue("Glyph", global::DevExpress.UI.Xaml.Ribbon.RibbonItemStyle.Glyph);
                userType.AddEnumValue("All", global::DevExpress.UI.Xaml.Ribbon.RibbonItemStyle.All);
                xamlType = userType;
                break;

            case 221:   //  DevExpress.UI.Xaml.Ribbon.CollapsePriority
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Low", global::DevExpress.UI.Xaml.Ribbon.CollapsePriority.Low);
                userType.AddEnumValue("Normal", global::DevExpress.UI.Xaml.Ribbon.CollapsePriority.Normal);
                userType.AddEnumValue("High", global::DevExpress.UI.Xaml.Ribbon.CollapsePriority.High);
                xamlType = userType;
                break;

            case 222:   //  Windows.UI.Xaml.Controls.IconElement
                xamlType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 223:   //  Windows.UI.Xaml.Media.Stretch
                xamlType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 224:   //  DevExpress.UI.Xaml.IconSizeUnit
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("px", global::DevExpress.UI.Xaml.IconSizeUnit.px);
                userType.AddEnumValue("pt", global::DevExpress.UI.Xaml.IconSizeUnit.pt);
                xamlType = userType;
                break;

            case 225:   //  DevExpress.UI.Xaml.ControlTemplateSelector
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 226:   //  Windows.UI.Xaml.Controls.ClickMode
                xamlType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 227:   //  DevExpress.UI.Xaml.Ribbon.BackstageView
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.Internal.RibbonHeaderedContainerBase"));
                userType.Activator = Activate_227_BackstageView;
                userType.SetContentPropertyName("DevExpress.UI.Xaml.Ribbon.BackstageView.Items");
                userType.AddMemberName("Items");
                userType.AddMemberName("ItemsSource");
                userType.AddMemberName("ItemTemplate");
                userType.AddMemberName("ItemTemplateSelector");
                userType.AddMemberName("SelectedTab");
                userType.AddMemberName("IsOpen");
                userType.AddMemberName("SelectedTabOnShow");
                userType.AddMemberName("SelectedTabCaptionOnShow");
                userType.AddMemberName("SelectedTabIndexOnShow");
                userType.AddMemberName("TitleSettings");
                userType.AddMemberName("PlacementTarget");
                userType.AddMemberName("ActualPlacementTarget");
                userType.AddMemberName("StaysOpen");
                userType.AddMemberName("CloseCommand");
                userType.SetIsBindable();
                xamlType = userType;
                break;

            case 228:   //  DevExpress.UI.Xaml.Ribbon.Internal.RibbonHeaderedContainerBase
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.UI.Xaml.Internal.ControlEx"));
                userType.AddMemberName("Caption");
                xamlType = userType;
                break;

            case 229:   //  DevExpress.UI.Xaml.Ribbon.BackstageItemCollection
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.UI.Xaml.Internal.TemplatedCollectionWithOwner`2<DevExpress.UI.Xaml.Ribbon.IBackstageItem, DevExpress.UI.Xaml.Ribbon.BackstageView>"));
                userType.CollectionAdd = VectorAdd_229_BackstageItemCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 230:   //  DevExpress.UI.Xaml.Internal.TemplatedCollectionWithOwner`2<DevExpress.UI.Xaml.Ribbon.IBackstageItem, DevExpress.UI.Xaml.Ribbon.BackstageView>
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.UI.Xaml.Internal.TemplatedCollection`1<DevExpress.UI.Xaml.Ribbon.IBackstageItem>"));
                userType.CollectionAdd = VectorAdd_230_TemplatedCollectionWithOwner;
                xamlType = userType;
                break;

            case 231:   //  DevExpress.UI.Xaml.Internal.TemplatedCollection`1<DevExpress.UI.Xaml.Ribbon.IBackstageItem>
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.UI.Xaml.Internal.TemplatedCollectionBase`1<DevExpress.UI.Xaml.Ribbon.IBackstageItem>"));
                userType.Activator = Activate_231_TemplatedCollection;
                userType.CollectionAdd = VectorAdd_231_TemplatedCollection;
                xamlType = userType;
                break;

            case 232:   //  DevExpress.UI.Xaml.Internal.TemplatedCollectionBase`1<DevExpress.UI.Xaml.Ribbon.IBackstageItem>
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.Core.Native.ObservableCollectionView`1<DevExpress.UI.Xaml.Ribbon.IBackstageItem>"));
                userType.CollectionAdd = VectorAdd_232_TemplatedCollectionBase;
                xamlType = userType;
                break;

            case 233:   //  DevExpress.Core.Native.ObservableCollectionView`1<DevExpress.UI.Xaml.Ribbon.IBackstageItem>
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.Mvvm.BindableBase"));
                userType.CollectionAdd = VectorAdd_233_ObservableCollectionView;
                xamlType = userType;
                break;

            case 234:   //  DevExpress.UI.Xaml.Ribbon.IBackstageItem
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.AddMemberName("ClosePopupOnClick");
                xamlType = userType;
                break;

            case 235:   //  DevExpress.UI.Xaml.Ribbon.IBackstageTabItem
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 236:   //  Windows.UI.Xaml.UIElement
                xamlType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 237:   //  DevExpress.UI.Xaml.Ribbon.BackstageButtonItem
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.Internal.RibbonButtonItemBase"));
                userType.Activator = Activate_237_BackstageButtonItem;
                userType.SetIsBindable();
                xamlType = userType;
                break;

            case 238:   //  DevExpress.UI.Xaml.Ribbon.Internal.RibbonButtonItemBase
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.Internal.RibbonItemBase"));
                userType.AddMemberName("Command");
                userType.AddMemberName("CommandParameter");
                xamlType = userType;
                break;

            case 239:   //  DevExpress.UI.Xaml.Ribbon.HelpPane
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.HelpPaneBase"));
                userType.Activator = Activate_239_HelpPane;
                userType.SetContentPropertyName("DevExpress.UI.Xaml.Ribbon.HelpPane.Items");
                userType.AddMemberName("Items");
                userType.AddMemberName("ActualHeaderItems");
                userType.AddMemberName("ActualFooterItems");
                userType.AddMemberName("ItemsCore");
                userType.SetIsBindable();
                xamlType = userType;
                break;

            case 240:   //  DevExpress.UI.Xaml.Ribbon.HelpPaneBase
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObject"));
                userType.AddMemberName("ItemsSource");
                userType.AddMemberName("ItemTemplate");
                userType.AddMemberName("ItemTemplateSelector");
                xamlType = userType;
                break;

            case 241:   //  DevExpress.UI.Xaml.Ribbon.RibbonHelpPaneItemCollection
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.ToolTipItemCollection`1<DevExpress.UI.Xaml.Ribbon.IRibbonHelpPaneItem>"));
                userType.CollectionAdd = VectorAdd_241_RibbonHelpPaneItemCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 242:   //  DevExpress.UI.Xaml.Ribbon.ToolTipItemCollection`1<DevExpress.UI.Xaml.Ribbon.IRibbonHelpPaneItem>
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.UI.Xaml.Internal.TemplatedCollection`1<DevExpress.UI.Xaml.Ribbon.IRibbonHelpPaneItem>"));
                userType.CollectionAdd = VectorAdd_242_ToolTipItemCollection;
                xamlType = userType;
                break;

            case 243:   //  DevExpress.UI.Xaml.Internal.TemplatedCollection`1<DevExpress.UI.Xaml.Ribbon.IRibbonHelpPaneItem>
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.UI.Xaml.Internal.TemplatedCollectionBase`1<DevExpress.UI.Xaml.Ribbon.IRibbonHelpPaneItem>"));
                userType.Activator = Activate_243_TemplatedCollection;
                userType.CollectionAdd = VectorAdd_243_TemplatedCollection;
                xamlType = userType;
                break;

            case 244:   //  DevExpress.UI.Xaml.Internal.TemplatedCollectionBase`1<DevExpress.UI.Xaml.Ribbon.IRibbonHelpPaneItem>
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.Core.Native.ObservableCollectionView`1<DevExpress.UI.Xaml.Ribbon.IRibbonHelpPaneItem>"));
                userType.CollectionAdd = VectorAdd_244_TemplatedCollectionBase;
                xamlType = userType;
                break;

            case 245:   //  DevExpress.Core.Native.ObservableCollectionView`1<DevExpress.UI.Xaml.Ribbon.IRibbonHelpPaneItem>
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.Mvvm.BindableBase"));
                userType.CollectionAdd = VectorAdd_245_ObservableCollectionView;
                xamlType = userType;
                break;

            case 246:   //  DevExpress.UI.Xaml.Ribbon.IRibbonHelpPaneItem
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.AddMemberName("PlatformVisibility");
                userType.AddMemberName("Placement");
                xamlType = userType;
                break;

            case 247:   //  DevExpress.Mvvm.Native.DeviceFamily
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Unknown", global::DevExpress.Mvvm.Native.DeviceFamily.Unknown);
                userType.AddEnumValue("Desktop", global::DevExpress.Mvvm.Native.DeviceFamily.Desktop);
                userType.AddEnumValue("Mobile", global::DevExpress.Mvvm.Native.DeviceFamily.Mobile);
                userType.AddEnumValue("All", global::DevExpress.Mvvm.Native.DeviceFamily.All);
                xamlType = userType;
                break;

            case 248:   //  DevExpress.UI.Xaml.Ribbon.HelpPaneItemPlacement
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Default", global::DevExpress.UI.Xaml.Ribbon.HelpPaneItemPlacement.Default);
                userType.AddEnumValue("Header", global::DevExpress.UI.Xaml.Ribbon.HelpPaneItemPlacement.Header);
                userType.AddEnumValue("Footer", global::DevExpress.UI.Xaml.Ribbon.HelpPaneItemPlacement.Footer);
                xamlType = userType;
                break;

            case 249:   //  System.Collections.Generic.IEnumerable`1<DevExpress.UI.Xaml.Ribbon.IHelpPaneItem>
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 250:   //  DevExpress.UI.Xaml.Ribbon.ToolbarHelpPane
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.HelpPaneBase"));
                userType.Activator = Activate_250_ToolbarHelpPane;
                userType.SetContentPropertyName("DevExpress.UI.Xaml.Ribbon.ToolbarHelpPane.Items");
                userType.AddMemberName("Items");
                userType.AddMemberName("ItemsCore");
                userType.SetIsBindable();
                xamlType = userType;
                break;

            case 251:   //  DevExpress.UI.Xaml.Ribbon.ToolbarHelpPaneItemCollection
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.ToolTipItemCollection`1<DevExpress.UI.Xaml.Ribbon.IToolbarHelpPaneItem>"));
                userType.CollectionAdd = VectorAdd_251_ToolbarHelpPaneItemCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 252:   //  DevExpress.UI.Xaml.Ribbon.ToolTipItemCollection`1<DevExpress.UI.Xaml.Ribbon.IToolbarHelpPaneItem>
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.UI.Xaml.Internal.TemplatedCollection`1<DevExpress.UI.Xaml.Ribbon.IToolbarHelpPaneItem>"));
                userType.CollectionAdd = VectorAdd_252_ToolTipItemCollection;
                xamlType = userType;
                break;

            case 253:   //  DevExpress.UI.Xaml.Internal.TemplatedCollection`1<DevExpress.UI.Xaml.Ribbon.IToolbarHelpPaneItem>
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.UI.Xaml.Internal.TemplatedCollectionBase`1<DevExpress.UI.Xaml.Ribbon.IToolbarHelpPaneItem>"));
                userType.Activator = Activate_253_TemplatedCollection;
                userType.CollectionAdd = VectorAdd_253_TemplatedCollection;
                xamlType = userType;
                break;

            case 254:   //  DevExpress.UI.Xaml.Internal.TemplatedCollectionBase`1<DevExpress.UI.Xaml.Ribbon.IToolbarHelpPaneItem>
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.Core.Native.ObservableCollectionView`1<DevExpress.UI.Xaml.Ribbon.IToolbarHelpPaneItem>"));
                userType.CollectionAdd = VectorAdd_254_TemplatedCollectionBase;
                xamlType = userType;
                break;

            case 255:   //  DevExpress.Core.Native.ObservableCollectionView`1<DevExpress.UI.Xaml.Ribbon.IToolbarHelpPaneItem>
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.Mvvm.BindableBase"));
                userType.CollectionAdd = VectorAdd_255_ObservableCollectionView;
                xamlType = userType;
                break;

            case 256:   //  DevExpress.UI.Xaml.Ribbon.IToolbarHelpPaneItem
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                xamlType = userType;
                break;

            case 257:   //  DevExpress.UI.Xaml.Ribbon.RibbonControl
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.RibbonControlBase"));
                userType.Activator = Activate_257_RibbonControl;
                userType.SetContentPropertyName("DevExpress.UI.Xaml.Ribbon.RibbonControl.Tabs");
                userType.AddMemberName("Tabs");
                userType.AddMemberName("BackstageView");
                userType.AddMemberName("CanMinimize");
                userType.AddMemberName("HelpPane");
                userType.AddMemberName("Title");
                userType.AddMemberName("IsTitleEditable");
                userType.AddMemberName("TitleSettings");
                userType.AddMemberName("EmbedRibbonInWindowTitle");
                userType.AddMemberName("SelectedTab");
                userType.AddMemberName("ShowTitleBar");
                userType.AddMemberName("IsNestedWindowTitleCustomizer");
                userType.SetIsBindable();
                xamlType = userType;
                break;

            case 258:   //  DevExpress.UI.Xaml.Ribbon.RibbonControlBase
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.UI.Xaml.Internal.ContentControlEx"));
                userType.AddMemberName("TabsSource");
                userType.AddMemberName("TabTemplate");
                userType.AddMemberName("TabTemplateSelector");
                userType.AddMemberName("SelectedTabCaption");
                userType.AddMemberName("ViewMode");
                userType.AddMemberName("State");
                userType.AddMemberName("HeaderItemTemplate");
                userType.AddMemberName("HeaderItemContainerStyle");
                userType.AddMemberName("ContextualHeaderItemTemplate");
                userType.AddMemberName("ContextualHeaderItemContainerStyle");
                userType.AddMemberName("ChangeRibbonStateCommand");
                userType.AddMemberName("ChangeRibbonViewModeCommand");
                xamlType = userType;
                break;

            case 259:   //  DevExpress.UI.Xaml.Ribbon.RibbonTabCollection
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.UI.Xaml.Internal.TemplatedCollectionWithOwner`2<DevExpress.UI.Xaml.Ribbon.RibbonTab, DevExpress.UI.Xaml.Ribbon.RibbonControlBase>"));
                userType.CollectionAdd = VectorAdd_259_RibbonTabCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 260:   //  DevExpress.UI.Xaml.Internal.TemplatedCollectionWithOwner`2<DevExpress.UI.Xaml.Ribbon.RibbonTab, DevExpress.UI.Xaml.Ribbon.RibbonControlBase>
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.UI.Xaml.Internal.TemplatedCollection`1<DevExpress.UI.Xaml.Ribbon.RibbonTab>"));
                userType.CollectionAdd = VectorAdd_260_TemplatedCollectionWithOwner;
                xamlType = userType;
                break;

            case 261:   //  DevExpress.UI.Xaml.Internal.TemplatedCollection`1<DevExpress.UI.Xaml.Ribbon.RibbonTab>
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.UI.Xaml.Internal.TemplatedCollectionBase`1<DevExpress.UI.Xaml.Ribbon.RibbonTab>"));
                userType.Activator = Activate_261_TemplatedCollection;
                userType.CollectionAdd = VectorAdd_261_TemplatedCollection;
                xamlType = userType;
                break;

            case 262:   //  DevExpress.UI.Xaml.Internal.TemplatedCollectionBase`1<DevExpress.UI.Xaml.Ribbon.RibbonTab>
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.Core.Native.ObservableCollectionView`1<DevExpress.UI.Xaml.Ribbon.RibbonTab>"));
                userType.CollectionAdd = VectorAdd_262_TemplatedCollectionBase;
                xamlType = userType;
                break;

            case 263:   //  DevExpress.Core.Native.ObservableCollectionView`1<DevExpress.UI.Xaml.Ribbon.RibbonTab>
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.Mvvm.BindableBase"));
                userType.CollectionAdd = VectorAdd_263_ObservableCollectionView;
                xamlType = userType;
                break;

            case 264:   //  DevExpress.UI.Xaml.Ribbon.RibbonTab
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.RibbonTabBase"));
                userType.Activator = Activate_264_RibbonTab;
                userType.SetContentPropertyName("DevExpress.UI.Xaml.Ribbon.RibbonTab.Groups");
                userType.AddMemberName("Groups");
                xamlType = userType;
                break;

            case 265:   //  DevExpress.UI.Xaml.Ribbon.RibbonTabBase
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.Internal.RibbonHeaderedContainerBase"));
                userType.AddMemberName("GroupsSource");
                userType.AddMemberName("GroupTemplate");
                userType.AddMemberName("GroupTemplateSelector");
                userType.AddMemberName("IsSelected");
                xamlType = userType;
                break;

            case 266:   //  DevExpress.UI.Xaml.Ribbon.RibbonGroupCollection
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.UI.Xaml.Internal.TemplatedCollection`1<DevExpress.UI.Xaml.Ribbon.RibbonGroup>"));
                userType.CollectionAdd = VectorAdd_266_RibbonGroupCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 267:   //  DevExpress.UI.Xaml.Internal.TemplatedCollection`1<DevExpress.UI.Xaml.Ribbon.RibbonGroup>
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.UI.Xaml.Internal.TemplatedCollectionBase`1<DevExpress.UI.Xaml.Ribbon.RibbonGroup>"));
                userType.Activator = Activate_267_TemplatedCollection;
                userType.CollectionAdd = VectorAdd_267_TemplatedCollection;
                xamlType = userType;
                break;

            case 268:   //  DevExpress.UI.Xaml.Internal.TemplatedCollectionBase`1<DevExpress.UI.Xaml.Ribbon.RibbonGroup>
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.Core.Native.ObservableCollectionView`1<DevExpress.UI.Xaml.Ribbon.RibbonGroup>"));
                userType.CollectionAdd = VectorAdd_268_TemplatedCollectionBase;
                xamlType = userType;
                break;

            case 269:   //  DevExpress.Core.Native.ObservableCollectionView`1<DevExpress.UI.Xaml.Ribbon.RibbonGroup>
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.Mvvm.BindableBase"));
                userType.CollectionAdd = VectorAdd_269_ObservableCollectionView;
                xamlType = userType;
                break;

            case 270:   //  DevExpress.UI.Xaml.Ribbon.RibbonGroup
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.RibbonGroupBase"));
                userType.Activator = Activate_270_RibbonGroup;
                userType.SetContentPropertyName("DevExpress.UI.Xaml.Ribbon.RibbonGroup.Items");
                userType.AddMemberName("Items");
                xamlType = userType;
                break;

            case 271:   //  DevExpress.UI.Xaml.Ribbon.RibbonGroupBase
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.Internal.RibbonGroupPanelBase"));
                xamlType = userType;
                break;

            case 272:   //  DevExpress.UI.Xaml.Ribbon.Internal.RibbonGroupPanelBase
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.Internal.IndependentGroupPanelBase"));
                userType.AddMemberName("ItemsSource");
                userType.AddMemberName("ItemTemplate");
                userType.AddMemberName("ItemTemplateSelector");
                userType.AddMemberName("Icon");
                userType.AddMemberName("IconSource");
                userType.AddMemberName("IconTemplate");
                userType.AddMemberName("IconWidth");
                userType.AddMemberName("IconHeight");
                userType.AddMemberName("IconStretch");
                userType.AddMemberName("IconFill");
                userType.AddMemberName("FlyoutColumnCount");
                userType.AddMemberName("IconSizeUnit");
                xamlType = userType;
                break;

            case 273:   //  DevExpress.UI.Xaml.Ribbon.Internal.IndependentGroupPanelBase
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.UI.Xaml.Internal.ItemsPanelBase`1<DevExpress.UI.Xaml.Ribbon.IRibbonItemBase>"));
                userType.AddMemberName("Caption");
                userType.AddMemberName("DropDownControl");
                userType.AddMemberName("FlyoutItems");
                userType.AddMemberName("FlyoutCalculator");
                xamlType = userType;
                break;

            case 274:   //  DevExpress.UI.Xaml.Internal.ItemsPanelBase`1<DevExpress.UI.Xaml.Ribbon.IRibbonItemBase>
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Panel"));
                xamlType = userType;
                break;

            case 275:   //  Windows.UI.Xaml.Controls.Panel
                xamlType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 276:   //  DevExpress.UI.Xaml.Ribbon.RibbonItemCollection
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.ToolTipItemCollection`1<DevExpress.UI.Xaml.Ribbon.IRibbonItem>"));
                userType.CollectionAdd = VectorAdd_276_RibbonItemCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 277:   //  DevExpress.UI.Xaml.Ribbon.ToolTipItemCollection`1<DevExpress.UI.Xaml.Ribbon.IRibbonItem>
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.UI.Xaml.Internal.TemplatedCollection`1<DevExpress.UI.Xaml.Ribbon.IRibbonItem>"));
                userType.CollectionAdd = VectorAdd_277_ToolTipItemCollection;
                xamlType = userType;
                break;

            case 278:   //  DevExpress.UI.Xaml.Internal.TemplatedCollection`1<DevExpress.UI.Xaml.Ribbon.IRibbonItem>
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.UI.Xaml.Internal.TemplatedCollectionBase`1<DevExpress.UI.Xaml.Ribbon.IRibbonItem>"));
                userType.Activator = Activate_278_TemplatedCollection;
                userType.CollectionAdd = VectorAdd_278_TemplatedCollection;
                xamlType = userType;
                break;

            case 279:   //  DevExpress.UI.Xaml.Internal.TemplatedCollectionBase`1<DevExpress.UI.Xaml.Ribbon.IRibbonItem>
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.Core.Native.ObservableCollectionView`1<DevExpress.UI.Xaml.Ribbon.IRibbonItem>"));
                userType.CollectionAdd = VectorAdd_279_TemplatedCollectionBase;
                xamlType = userType;
                break;

            case 280:   //  DevExpress.Core.Native.ObservableCollectionView`1<DevExpress.UI.Xaml.Ribbon.IRibbonItem>
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.Mvvm.BindableBase"));
                userType.CollectionAdd = VectorAdd_280_ObservableCollectionView;
                xamlType = userType;
                break;

            case 281:   //  DevExpress.UI.Xaml.Ribbon.IRibbonItem
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                xamlType = userType;
                break;

            case 282:   //  DevExpress.UI.Xaml.Ribbon.RibbonItemBaseCollection
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.Core.Native.ObservableCollectionView`1<DevExpress.UI.Xaml.Ribbon.IRibbonItemBase>"));
                userType.CollectionAdd = VectorAdd_282_RibbonItemBaseCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 283:   //  DevExpress.Core.Native.ObservableCollectionView`1<DevExpress.UI.Xaml.Ribbon.IRibbonItemBase>
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.Mvvm.BindableBase"));
                userType.CollectionAdd = VectorAdd_283_ObservableCollectionView;
                xamlType = userType;
                break;

            case 284:   //  DevExpress.UI.Xaml.Ribbon.IRibbonItemBase
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.AddMemberName("ItemStyle");
                userType.AddMemberName("CollapsePriority");
                userType.AddMemberName("ShrinkPriority");
                userType.AddMemberName("CollapsedGroupName");
                userType.AddMemberName("ShowInFlyoutOnly");
                userType.AddMemberName("HasContent");
                xamlType = userType;
                break;

            case 285:   //  DevExpress.UI.Xaml.Ribbon.Internal.IFlyoutCalculator
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 286:   //  DevExpress.UI.Xaml.Ribbon.RibbonViewMode
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Normal", global::DevExpress.UI.Xaml.Ribbon.RibbonViewMode.Normal);
                userType.AddEnumValue("AutoHide", global::DevExpress.UI.Xaml.Ribbon.RibbonViewMode.AutoHide);
                xamlType = userType;
                break;

            case 287:   //  DevExpress.UI.Xaml.Ribbon.RibbonState
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Normal", global::DevExpress.UI.Xaml.Ribbon.RibbonState.Normal);
                userType.AddEnumValue("Minimized", global::DevExpress.UI.Xaml.Ribbon.RibbonState.Minimized);
                userType.AddEnumValue("Hidden", global::DevExpress.UI.Xaml.Ribbon.RibbonState.Hidden);
                userType.AddEnumValue("Footer", global::DevExpress.UI.Xaml.Ribbon.RibbonState.Footer);
                xamlType = userType;
                break;

            case 288:   //  DevExpress.UI.Xaml.Ribbon.RibbonColorEditBase
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.RibbonSplitItemBase"));
                userType.Activator = Activate_288_RibbonColorEditBase;
                userType.SetContentPropertyName("DevExpress.UI.Xaml.Ribbon.RibbonColorEditBase.ColorGroups");
                userType.AddMemberName("ColorGroups");
                userType.AddMemberName("SelectedBrush");
                userType.AddMemberName("SelectedColor");
                userType.AddMemberName("DefaultColor");
                userType.AddMemberName("Caption");
                userType.AddMemberName("ShowIndicator");
                userType.SetIsBindable();
                xamlType = userType;
                break;

            case 289:   //  DevExpress.UI.Xaml.Ribbon.RibbonSplitItemBase
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.Internal.RibbonMenuItemBase"));
                userType.AddMemberName("Command");
                userType.AddMemberName("CommandParameter");
                xamlType = userType;
                break;

            case 290:   //  DevExpress.UI.Xaml.Ribbon.Internal.RibbonMenuItemBase
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.Internal.RibbonItemBaseEx"));
                userType.AddMemberName("FlyoutCaption");
                userType.AddMemberName("IsOpen");
                userType.AddMemberName("FlyoutSettings");
                xamlType = userType;
                break;

            case 291:   //  DevExpress.UI.Xaml.FlyoutSettingsBase
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObject"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 292:   //  DevExpress.UI.Xaml.Ribbon.RibbonFontEditBase
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.UI.Xaml.Editors.FontEdit"));
                userType.Activator = Activate_292_RibbonFontEditBase;
                userType.AddMemberName("ShrinkPriority");
                userType.AddMemberName("CollapsePriority");
                userType.AddMemberName("CollapsedGroupName");
                userType.AddMemberName("ShowInFlyoutOnly");
                userType.AddMemberName("FlyoutFlowBreak");
                userType.AddMemberName("FlyoutFlowBreakWithSeparator");
                userType.AddMemberName("FlyoutSameRow");
                userType.SetIsBindable();
                xamlType = userType;
                break;

            case 293:   //  DevExpress.UI.Xaml.Editors.FontEdit
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Control"));
                userType.Activator = Activate_293_FontEdit;
                userType.AddMemberName("ActualSelectedFontSize");
                userType.AddMemberName("ActualSelectedFontFamily");
                userType.AddMemberName("SelectedFontSize");
                userType.AddMemberName("FontSizesSource");
                userType.AddMemberName("FontFamilyItemTemplate");
                userType.AddMemberName("SelectedFontFamilyName");
                userType.AddMemberName("FontsSource");
                userType.AddMemberName("SelectedFontFamily");
                userType.AddMemberName("IsFontFamilyDropDownOpen");
                userType.AddMemberName("IsFontSizeDropDownOpen");
                userType.AddMemberName("AvailableFonts");
                userType.AddMemberName("AvailableFontSizes");
                xamlType = userType;
                break;

            case 294:   //  Windows.UI.Xaml.Media.FontFamily
                xamlType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 295:   //  Windows.UI.Xaml.Data.ICollectionView
                xamlType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 296:   //  System.Collections.Generic.IEnumerable`1<Double>
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 297:   //  DevExpress.UI.Xaml.Ribbon.RibbonMenuButton
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.Internal.RibbonMenuButtonBase`1<DevExpress.UI.Xaml.Ribbon.IRibbonItem>"));
                userType.Activator = Activate_297_RibbonMenuButton;
                userType.SetContentPropertyName("DevExpress.UI.Xaml.Ribbon.RibbonMenuButton.Items");
                userType.AddMemberName("Items");
                userType.SetIsBindable();
                xamlType = userType;
                break;

            case 298:   //  DevExpress.UI.Xaml.Ribbon.Internal.RibbonMenuButtonBase`1<DevExpress.UI.Xaml.Ribbon.IRibbonItem>
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.Internal.RibbonMenuButtonBase"));
                userType.AddMemberName("ItemsSource");
                xamlType = userType;
                break;

            case 299:   //  DevExpress.UI.Xaml.Ribbon.Internal.RibbonMenuButtonBase
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.Internal.RibbonMenuItemBase"));
                userType.AddMemberName("ItemTemplate");
                userType.AddMemberName("ItemTemplateSelector");
                userType.AddMemberName("FlyoutColumnCount");
                xamlType = userType;
                break;

            case 300:   //  System.Collections.Generic.IEnumerable`1<DevExpress.UI.Xaml.Ribbon.IRibbonItem>
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 301:   //  DevExpress.UI.Xaml.Ribbon.ToolbarMenuButton
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.Internal.RibbonMenuButtonBase`1<DevExpress.UI.Xaml.Ribbon.IToolbarItem>"));
                userType.Activator = Activate_301_ToolbarMenuButton;
                userType.SetContentPropertyName("DevExpress.UI.Xaml.Ribbon.ToolbarMenuButton.Items");
                userType.AddMemberName("Items");
                userType.SetIsBindable();
                xamlType = userType;
                break;

            case 302:   //  DevExpress.UI.Xaml.Ribbon.Internal.RibbonMenuButtonBase`1<DevExpress.UI.Xaml.Ribbon.IToolbarItem>
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.Internal.RibbonMenuButtonBase"));
                userType.AddMemberName("ItemsSource");
                xamlType = userType;
                break;

            case 303:   //  DevExpress.UI.Xaml.Ribbon.ToolbarItemCollection
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.ToolTipItemCollection`1<DevExpress.UI.Xaml.Ribbon.IToolbarItem>"));
                userType.CollectionAdd = VectorAdd_303_ToolbarItemCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 304:   //  DevExpress.UI.Xaml.Ribbon.ToolTipItemCollection`1<DevExpress.UI.Xaml.Ribbon.IToolbarItem>
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.UI.Xaml.Internal.TemplatedCollection`1<DevExpress.UI.Xaml.Ribbon.IToolbarItem>"));
                userType.CollectionAdd = VectorAdd_304_ToolTipItemCollection;
                xamlType = userType;
                break;

            case 305:   //  DevExpress.UI.Xaml.Internal.TemplatedCollection`1<DevExpress.UI.Xaml.Ribbon.IToolbarItem>
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.UI.Xaml.Internal.TemplatedCollectionBase`1<DevExpress.UI.Xaml.Ribbon.IToolbarItem>"));
                userType.Activator = Activate_305_TemplatedCollection;
                userType.CollectionAdd = VectorAdd_305_TemplatedCollection;
                xamlType = userType;
                break;

            case 306:   //  DevExpress.UI.Xaml.Internal.TemplatedCollectionBase`1<DevExpress.UI.Xaml.Ribbon.IToolbarItem>
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.Core.Native.ObservableCollectionView`1<DevExpress.UI.Xaml.Ribbon.IToolbarItem>"));
                userType.CollectionAdd = VectorAdd_306_TemplatedCollectionBase;
                xamlType = userType;
                break;

            case 307:   //  DevExpress.Core.Native.ObservableCollectionView`1<DevExpress.UI.Xaml.Ribbon.IToolbarItem>
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.Mvvm.BindableBase"));
                userType.CollectionAdd = VectorAdd_307_ObservableCollectionView;
                xamlType = userType;
                break;

            case 308:   //  DevExpress.UI.Xaml.Ribbon.IToolbarItem
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                xamlType = userType;
                break;

            case 309:   //  System.Collections.Generic.IEnumerable`1<DevExpress.UI.Xaml.Ribbon.IToolbarItem>
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 310:   //  DevExpress.UI.Xaml.Ribbon.ContextToolbarMenuButton
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.Internal.RibbonMenuButtonBase`1<DevExpress.UI.Xaml.Ribbon.IContextToolbarItem>"));
                userType.Activator = Activate_310_ContextToolbarMenuButton;
                userType.SetContentPropertyName("DevExpress.UI.Xaml.Ribbon.ContextToolbarMenuButton.Items");
                userType.AddMemberName("Items");
                userType.AddMemberName("Orientation");
                userType.SetIsBindable();
                xamlType = userType;
                break;

            case 311:   //  DevExpress.UI.Xaml.Ribbon.Internal.RibbonMenuButtonBase`1<DevExpress.UI.Xaml.Ribbon.IContextToolbarItem>
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.Internal.RibbonMenuButtonBase"));
                userType.AddMemberName("ItemsSource");
                xamlType = userType;
                break;

            case 312:   //  DevExpress.UI.Xaml.Ribbon.ContextToolbarItemCollection
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.ToolTipItemCollection`1<DevExpress.UI.Xaml.Ribbon.IContextToolbarItem>"));
                userType.CollectionAdd = VectorAdd_312_ContextToolbarItemCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 313:   //  DevExpress.UI.Xaml.Ribbon.ToolTipItemCollection`1<DevExpress.UI.Xaml.Ribbon.IContextToolbarItem>
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.UI.Xaml.Internal.TemplatedCollection`1<DevExpress.UI.Xaml.Ribbon.IContextToolbarItem>"));
                userType.CollectionAdd = VectorAdd_313_ToolTipItemCollection;
                xamlType = userType;
                break;

            case 314:   //  DevExpress.UI.Xaml.Internal.TemplatedCollection`1<DevExpress.UI.Xaml.Ribbon.IContextToolbarItem>
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.UI.Xaml.Internal.TemplatedCollectionBase`1<DevExpress.UI.Xaml.Ribbon.IContextToolbarItem>"));
                userType.Activator = Activate_314_TemplatedCollection;
                userType.CollectionAdd = VectorAdd_314_TemplatedCollection;
                xamlType = userType;
                break;

            case 315:   //  DevExpress.UI.Xaml.Internal.TemplatedCollectionBase`1<DevExpress.UI.Xaml.Ribbon.IContextToolbarItem>
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.Core.Native.ObservableCollectionView`1<DevExpress.UI.Xaml.Ribbon.IContextToolbarItem>"));
                userType.CollectionAdd = VectorAdd_315_TemplatedCollectionBase;
                xamlType = userType;
                break;

            case 316:   //  DevExpress.Core.Native.ObservableCollectionView`1<DevExpress.UI.Xaml.Ribbon.IContextToolbarItem>
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.Mvvm.BindableBase"));
                userType.CollectionAdd = VectorAdd_316_ObservableCollectionView;
                xamlType = userType;
                break;

            case 317:   //  DevExpress.UI.Xaml.Ribbon.IContextToolbarItem
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                xamlType = userType;
                break;

            case 318:   //  Windows.UI.Xaml.Controls.Orientation
                xamlType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 319:   //  System.Collections.Generic.IEnumerable`1<DevExpress.UI.Xaml.Ribbon.IContextToolbarItem>
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 320:   //  DevExpress.UI.Xaml.Ribbon.RibbonToolbarMenuButton
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.Internal.RibbonMenuButtonBase`1<DevExpress.UI.Xaml.Ribbon.IRibbonToolbarItem>"));
                userType.Activator = Activate_320_RibbonToolbarMenuButton;
                userType.SetContentPropertyName("DevExpress.UI.Xaml.Ribbon.RibbonToolbarMenuButton.Items");
                userType.AddMemberName("Items");
                userType.SetIsBindable();
                xamlType = userType;
                break;

            case 321:   //  DevExpress.UI.Xaml.Ribbon.Internal.RibbonMenuButtonBase`1<DevExpress.UI.Xaml.Ribbon.IRibbonToolbarItem>
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.Internal.RibbonMenuButtonBase"));
                userType.AddMemberName("ItemsSource");
                xamlType = userType;
                break;

            case 322:   //  DevExpress.UI.Xaml.Ribbon.RibbonToolbarItemCollection
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.ToolTipItemCollection`1<DevExpress.UI.Xaml.Ribbon.IRibbonToolbarItem>"));
                userType.CollectionAdd = VectorAdd_322_RibbonToolbarItemCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 323:   //  DevExpress.UI.Xaml.Ribbon.ToolTipItemCollection`1<DevExpress.UI.Xaml.Ribbon.IRibbonToolbarItem>
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.UI.Xaml.Internal.TemplatedCollection`1<DevExpress.UI.Xaml.Ribbon.IRibbonToolbarItem>"));
                userType.CollectionAdd = VectorAdd_323_ToolTipItemCollection;
                xamlType = userType;
                break;

            case 324:   //  DevExpress.UI.Xaml.Internal.TemplatedCollection`1<DevExpress.UI.Xaml.Ribbon.IRibbonToolbarItem>
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.UI.Xaml.Internal.TemplatedCollectionBase`1<DevExpress.UI.Xaml.Ribbon.IRibbonToolbarItem>"));
                userType.Activator = Activate_324_TemplatedCollection;
                userType.CollectionAdd = VectorAdd_324_TemplatedCollection;
                xamlType = userType;
                break;

            case 325:   //  DevExpress.UI.Xaml.Internal.TemplatedCollectionBase`1<DevExpress.UI.Xaml.Ribbon.IRibbonToolbarItem>
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.Core.Native.ObservableCollectionView`1<DevExpress.UI.Xaml.Ribbon.IRibbonToolbarItem>"));
                userType.CollectionAdd = VectorAdd_325_TemplatedCollectionBase;
                xamlType = userType;
                break;

            case 326:   //  DevExpress.Core.Native.ObservableCollectionView`1<DevExpress.UI.Xaml.Ribbon.IRibbonToolbarItem>
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.Mvvm.BindableBase"));
                userType.CollectionAdd = VectorAdd_326_ObservableCollectionView;
                xamlType = userType;
                break;

            case 327:   //  DevExpress.UI.Xaml.Ribbon.IRibbonToolbarItem
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                xamlType = userType;
                break;

            case 328:   //  System.Collections.Generic.IEnumerable`1<DevExpress.UI.Xaml.Ribbon.IRibbonToolbarItem>
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 329:   //  DevExpress.UI.Xaml.Ribbon.RibbonToolbarControl
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.RibbonControlBase"));
                userType.Activator = Activate_329_RibbonToolbarControl;
                userType.SetContentPropertyName("DevExpress.UI.Xaml.Ribbon.RibbonToolbarControl.Tabs");
                userType.AddMemberName("Tabs");
                userType.AddMemberName("HelpPane");
                userType.AddMemberName("HotItemsColumnsCount");
                userType.AddMemberName("SelectedTab");
                userType.AddMemberName("HotItems");
                userType.SetIsBindable();
                xamlType = userType;
                break;

            case 330:   //  DevExpress.UI.Xaml.Ribbon.RibbonToolbarTabCollection
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.UI.Xaml.Internal.TemplatedCollectionWithOwner`2<DevExpress.UI.Xaml.Ribbon.RibbonToolbarTab, DevExpress.UI.Xaml.Ribbon.RibbonControlBase>"));
                userType.CollectionAdd = VectorAdd_330_RibbonToolbarTabCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 331:   //  DevExpress.UI.Xaml.Internal.TemplatedCollectionWithOwner`2<DevExpress.UI.Xaml.Ribbon.RibbonToolbarTab, DevExpress.UI.Xaml.Ribbon.RibbonControlBase>
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.UI.Xaml.Internal.TemplatedCollection`1<DevExpress.UI.Xaml.Ribbon.RibbonToolbarTab>"));
                userType.CollectionAdd = VectorAdd_331_TemplatedCollectionWithOwner;
                xamlType = userType;
                break;

            case 332:   //  DevExpress.UI.Xaml.Internal.TemplatedCollection`1<DevExpress.UI.Xaml.Ribbon.RibbonToolbarTab>
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.UI.Xaml.Internal.TemplatedCollectionBase`1<DevExpress.UI.Xaml.Ribbon.RibbonToolbarTab>"));
                userType.Activator = Activate_332_TemplatedCollection;
                userType.CollectionAdd = VectorAdd_332_TemplatedCollection;
                xamlType = userType;
                break;

            case 333:   //  DevExpress.UI.Xaml.Internal.TemplatedCollectionBase`1<DevExpress.UI.Xaml.Ribbon.RibbonToolbarTab>
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.Core.Native.ObservableCollectionView`1<DevExpress.UI.Xaml.Ribbon.RibbonToolbarTab>"));
                userType.CollectionAdd = VectorAdd_333_TemplatedCollectionBase;
                xamlType = userType;
                break;

            case 334:   //  DevExpress.Core.Native.ObservableCollectionView`1<DevExpress.UI.Xaml.Ribbon.RibbonToolbarTab>
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.Mvvm.BindableBase"));
                userType.CollectionAdd = VectorAdd_334_ObservableCollectionView;
                xamlType = userType;
                break;

            case 335:   //  DevExpress.UI.Xaml.Ribbon.RibbonToolbarTab
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.RibbonTabBase"));
                userType.Activator = Activate_335_RibbonToolbarTab;
                userType.SetContentPropertyName("DevExpress.UI.Xaml.Ribbon.RibbonToolbarTab.Groups");
                userType.AddMemberName("Groups");
                xamlType = userType;
                break;

            case 336:   //  DevExpress.UI.Xaml.Ribbon.RibbonToolbarGroupCollection
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.UI.Xaml.Internal.TemplatedCollection`1<DevExpress.UI.Xaml.Ribbon.RibbonToolbarGroup>"));
                userType.CollectionAdd = VectorAdd_336_RibbonToolbarGroupCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 337:   //  DevExpress.UI.Xaml.Internal.TemplatedCollection`1<DevExpress.UI.Xaml.Ribbon.RibbonToolbarGroup>
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.UI.Xaml.Internal.TemplatedCollectionBase`1<DevExpress.UI.Xaml.Ribbon.RibbonToolbarGroup>"));
                userType.Activator = Activate_337_TemplatedCollection;
                userType.CollectionAdd = VectorAdd_337_TemplatedCollection;
                xamlType = userType;
                break;

            case 338:   //  DevExpress.UI.Xaml.Internal.TemplatedCollectionBase`1<DevExpress.UI.Xaml.Ribbon.RibbonToolbarGroup>
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.Core.Native.ObservableCollectionView`1<DevExpress.UI.Xaml.Ribbon.RibbonToolbarGroup>"));
                userType.CollectionAdd = VectorAdd_338_TemplatedCollectionBase;
                xamlType = userType;
                break;

            case 339:   //  DevExpress.Core.Native.ObservableCollectionView`1<DevExpress.UI.Xaml.Ribbon.RibbonToolbarGroup>
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.Mvvm.BindableBase"));
                userType.CollectionAdd = VectorAdd_339_ObservableCollectionView;
                xamlType = userType;
                break;

            case 340:   //  DevExpress.UI.Xaml.Ribbon.RibbonToolbarGroup
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.RibbonGroupBase"));
                userType.Activator = Activate_340_RibbonToolbarGroup;
                userType.SetContentPropertyName("DevExpress.UI.Xaml.Ribbon.RibbonToolbarGroup.Items");
                userType.AddMemberName("Items");
                xamlType = userType;
                break;

            case 341:   //  DevExpress.UI.Xaml.Ribbon.ToolbarControl
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.UI.Xaml.Internal.ControlEx"));
                userType.Activator = Activate_341_ToolbarControl;
                userType.SetContentPropertyName("DevExpress.UI.Xaml.Ribbon.ToolbarControl.Groups");
                userType.AddMemberName("Groups");
                userType.AddMemberName("GroupTemplateSelector");
                userType.AddMemberName("GroupTemplate");
                userType.AddMemberName("GroupsSource");
                userType.AddMemberName("Orientation");
                userType.AddMemberName("Placeholder");
                userType.SetIsBindable();
                xamlType = userType;
                break;

            case 342:   //  DevExpress.UI.Xaml.Ribbon.ToolbarGroupCollection
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.UI.Xaml.Internal.TemplatedCollection`1<DevExpress.UI.Xaml.Ribbon.ToolbarGroup>"));
                userType.CollectionAdd = VectorAdd_342_ToolbarGroupCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 343:   //  DevExpress.UI.Xaml.Internal.TemplatedCollection`1<DevExpress.UI.Xaml.Ribbon.ToolbarGroup>
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.UI.Xaml.Internal.TemplatedCollectionBase`1<DevExpress.UI.Xaml.Ribbon.ToolbarGroup>"));
                userType.Activator = Activate_343_TemplatedCollection;
                userType.CollectionAdd = VectorAdd_343_TemplatedCollection;
                xamlType = userType;
                break;

            case 344:   //  DevExpress.UI.Xaml.Internal.TemplatedCollectionBase`1<DevExpress.UI.Xaml.Ribbon.ToolbarGroup>
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.Core.Native.ObservableCollectionView`1<DevExpress.UI.Xaml.Ribbon.ToolbarGroup>"));
                userType.CollectionAdd = VectorAdd_344_TemplatedCollectionBase;
                xamlType = userType;
                break;

            case 345:   //  DevExpress.Core.Native.ObservableCollectionView`1<DevExpress.UI.Xaml.Ribbon.ToolbarGroup>
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.Mvvm.BindableBase"));
                userType.CollectionAdd = VectorAdd_345_ObservableCollectionView;
                xamlType = userType;
                break;

            case 346:   //  DevExpress.UI.Xaml.Ribbon.ToolbarGroup
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.RibbonGroupBase"));
                userType.Activator = Activate_346_ToolbarGroup;
                userType.SetContentPropertyName("DevExpress.UI.Xaml.Ribbon.ToolbarGroup.Items");
                userType.AddMemberName("Items");
                xamlType = userType;
                break;

            case 347:   //  DevExpress.UI.Xaml.Ribbon.Internal.HorizontalFlyoutCalculator
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.Internal.FlyoutCalculatorBase"));
                userType.Activator = Activate_347_HorizontalFlyoutCalculator;
                userType.SetIsBindable();
                xamlType = userType;
                break;

            case 348:   //  DevExpress.UI.Xaml.Ribbon.Internal.FlyoutCalculatorBase
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.AddMemberName("VisibleItems");
                userType.AddMemberName("ColumnCount");
                userType.AddMemberName("SeparatorManager");
                xamlType = userType;
                break;

            case 349:   //  System.Collections.Generic.IEnumerable`1<DevExpress.UI.Xaml.Ribbon.IRibbonItemBase>
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 350:   //  DevExpress.UI.Xaml.Ribbon.Internal.ISeparatorManager
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 351:   //  DevExpress.UI.Xaml.Ribbon.Internal.VerticalFlyoutCalculator
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.Internal.FlyoutCalculatorBase"));
                userType.Activator = Activate_351_VerticalFlyoutCalculator;
                userType.SetIsBindable();
                xamlType = userType;
                break;

            case 352:   //  DevExpress.UI.Xaml.Ribbon.Internal.RibbonTabsControl
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.UI.Xaml.Internal.ControlEx"));
                userType.Activator = Activate_352_RibbonTabsControl;
                userType.AddMemberName("ItemsSource");
                userType.AddMemberName("HeaderItemTemplate");
                userType.AddMemberName("HeaderItemContainerStyle");
                userType.AddMemberName("ContextualHeaderItemTemplate");
                userType.AddMemberName("ContextualHeaderItemContainerStyle");
                userType.AddMemberName("BackstageView");
                userType.AddMemberName("SelectedTab");
                userType.AddMemberName("Tabs");
                userType.SetIsBindable();
                xamlType = userType;
                break;

            case 353:   //  DevExpress.UI.Xaml.Ribbon.TabHeaderItemCollection
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.ToolTipItemCollection`1<DevExpress.UI.Xaml.Ribbon.IRibbonItemBase>"));
                userType.CollectionAdd = VectorAdd_353_TabHeaderItemCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 354:   //  DevExpress.UI.Xaml.Ribbon.ToolTipItemCollection`1<DevExpress.UI.Xaml.Ribbon.IRibbonItemBase>
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.UI.Xaml.Internal.TemplatedCollection`1<DevExpress.UI.Xaml.Ribbon.IRibbonItemBase>"));
                userType.CollectionAdd = VectorAdd_354_ToolTipItemCollection;
                xamlType = userType;
                break;

            case 355:   //  DevExpress.UI.Xaml.Internal.TemplatedCollection`1<DevExpress.UI.Xaml.Ribbon.IRibbonItemBase>
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.UI.Xaml.Internal.TemplatedCollectionBase`1<DevExpress.UI.Xaml.Ribbon.IRibbonItemBase>"));
                userType.Activator = Activate_355_TemplatedCollection;
                userType.CollectionAdd = VectorAdd_355_TemplatedCollection;
                xamlType = userType;
                break;

            case 356:   //  DevExpress.UI.Xaml.Internal.TemplatedCollectionBase`1<DevExpress.UI.Xaml.Ribbon.IRibbonItemBase>
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.Core.Native.ObservableCollectionView`1<DevExpress.UI.Xaml.Ribbon.IRibbonItemBase>"));
                userType.CollectionAdd = VectorAdd_356_TemplatedCollectionBase;
                xamlType = userType;
                break;

            case 357:   //  DevExpress.UI.Xaml.GalleryGroupContainerGenerator
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.UI.Xaml.GalleryItemContainerGeneratorBase"));
                userType.Activator = Activate_357_GalleryGroupContainerGenerator;
                userType.AddMemberName("GroupHeaderTemplate");
                userType.AddMemberName("ItemContainerGenerator");
                userType.AddMemberName("GroupItemsPath");
                userType.AddMemberName("MaxColCount");
                userType.AddMemberName("ActualGroupItemsPath");
                userType.SetIsBindable();
                xamlType = userType;
                break;

            case 358:   //  DevExpress.UI.Xaml.GalleryItemGroup
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObject"));
                userType.Activator = Activate_358_GalleryItemGroup;
                userType.SetContentPropertyName("DevExpress.UI.Xaml.GalleryItemGroup.Items");
                userType.AddMemberName("Items");
                userType.AddMemberName("Title");
                userType.SetIsBindable();
                xamlType = userType;
                break;

            case 359:   //  DevExpress.UI.Xaml.GalleryItemCollection
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.Core.Native.ObservableCollectionView`1<Object>"));
                userType.CollectionAdd = VectorAdd_359_GalleryItemCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 360:   //  DevExpress.Core.Native.ObservableCollectionView`1<Object>
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.Mvvm.BindableBase"));
                userType.CollectionAdd = VectorAdd_360_ObservableCollectionView;
                xamlType = userType;
                break;

            case 361:   //  DevExpress.UI.Xaml.Internal.DXExpander
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Panel"));
                userType.Activator = Activate_361_DXExpander;
                userType.SetContentPropertyName("DevExpress.UI.Xaml.Internal.DXExpander.Child");
                userType.AddMemberName("Child");
                userType.AddMemberName("IsExpanded");
                userType.AddMemberName("ExpandStoryboard");
                userType.AddMemberName("CollapseStoryboard");
                userType.AddMemberName("Location");
                userType.AddMemberName("AnimationDuration");
                userType.AddMemberName("ClipToBounds");
                userType.AddMemberName("DefineLayoutFromLocation");
                userType.AddMemberName("Children");
                userType.AddMemberName("IsLoaded");
                userType.SetIsBindable();
                xamlType = userType;
                break;

            case 362:   //  Windows.UI.Xaml.Media.Animation.Storyboard
                xamlType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 363:   //  Windows.UI.Xaml.Controls.UIElementCollection
                xamlType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 364:   //  DevExpress.UI.Xaml.Internal.NestedMenuFlyoutControl
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.UI.Xaml.Internal.MenuFlyoutControl"));
                userType.Activator = Activate_364_NestedMenuFlyoutControl;
                userType.AddMemberName("IsHeaderVisible");
                userType.AddMemberName("BackButtonEnabledMode");
                userType.AddMemberName("HeaderEnabledMode");
                userType.AddMemberName("Orientation");
                userType.AddMemberName("HeaderContentTemplate");
                userType.AddMemberName("HeaderContent");
                userType.AddMemberName("BackCommand");
                userType.AddMemberName("PreviousFlyout");
                userType.SetIsBindable();
                xamlType = userType;
                break;

            case 365:   //  DevExpress.UI.Xaml.Internal.MenuFlyoutControl
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.UI.Xaml.FlyoutControl"));
                userType.Activator = Activate_365_MenuFlyoutControl;
                userType.AddMemberName("CloseOnTargetClick");
                userType.AddMemberName("IsLightDismissEnabled");
                xamlType = userType;
                break;

            case 366:   //  DevExpress.UI.Xaml.FlyoutControl
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.UI.Xaml.Native.FlyoutBase"));
                userType.Activator = Activate_366_FlyoutControl;
                xamlType = userType;
                break;

            case 367:   //  DevExpress.UI.Xaml.Native.FlyoutBase
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.UI.Xaml.Native.PopupBase"));
                userType.Activator = Activate_367_FlyoutBase;
                userType.AddMemberName("ActualSettings");
                userType.AddMemberName("IndicatorDirection");
                userType.AddMemberName("AnimationDuration");
                userType.AddMemberName("Settings");
                userType.AddMemberName("ContainerStyle");
                userType.AddMemberName("ActualIsOpen");
                userType.AddMemberName("TargetBounds");
                userType.AddMemberName("AllowMoveAnimation");
                userType.AddMemberName("IsInitialized");
                userType.AddMemberName("CurrentAnimation");
                userType.AddMemberName("AnimationInProgress");
                userType.AddMemberName("AllowRecreateContent");
                userType.AddMemberName("CloseCommand");
                userType.AddMemberName("OpenCommand");
                userType.AddMemberName("RenderGrid");
                xamlType = userType;
                break;

            case 368:   //  DevExpress.UI.Xaml.Native.PopupBase
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.ContentControl"));
                userType.Activator = Activate_368_PopupBase;
                userType.AddMemberName("Child");
                userType.AddMemberName("HorizontalOffset");
                userType.AddMemberName("VerticalOffset");
                userType.AddMemberName("IsOpen");
                userType.AddMemberName("Placement");
                userType.AddMemberName("PlacementTarget");
                userType.AddMemberName("StaysOpen");
                userType.AddMemberName("AllowOutOfScreen");
                userType.AddMemberName("ChildContainer");
                userType.AddMemberName("IsLoaded");
                xamlType = userType;
                break;

            case 369:   //  DevExpress.UI.Xaml.Internal.EnabledMode
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Auto", global::DevExpress.UI.Xaml.Internal.EnabledMode.Auto);
                userType.AddEnumValue("Always", global::DevExpress.UI.Xaml.Internal.EnabledMode.Always);
                userType.AddEnumValue("Never", global::DevExpress.UI.Xaml.Internal.EnabledMode.Never);
                xamlType = userType;
                break;

            case 370:   //  DevExpress.UI.Xaml.Native.IndicatorDirection
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("None", global::DevExpress.UI.Xaml.Native.IndicatorDirection.None);
                userType.AddEnumValue("Left", global::DevExpress.UI.Xaml.Native.IndicatorDirection.Left);
                userType.AddEnumValue("Top", global::DevExpress.UI.Xaml.Native.IndicatorDirection.Top);
                userType.AddEnumValue("Right", global::DevExpress.UI.Xaml.Native.IndicatorDirection.Right);
                userType.AddEnumValue("Bottom", global::DevExpress.UI.Xaml.Native.IndicatorDirection.Bottom);
                xamlType = userType;
                break;

            case 371:   //  Windows.UI.Xaml.Duration
                xamlType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 372:   //  Windows.Foundation.Rect
                xamlType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 373:   //  DevExpress.UI.Xaml.Native.PlacementMode
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Bottom", global::DevExpress.UI.Xaml.Native.PlacementMode.Bottom);
                userType.AddEnumValue("Right", global::DevExpress.UI.Xaml.Native.PlacementMode.Right);
                userType.AddEnumValue("Mouse", global::DevExpress.UI.Xaml.Native.PlacementMode.Mouse);
                userType.AddEnumValue("Left", global::DevExpress.UI.Xaml.Native.PlacementMode.Left);
                userType.AddEnumValue("Top", global::DevExpress.UI.Xaml.Native.PlacementMode.Top);
                userType.AddEnumValue("Center", global::DevExpress.UI.Xaml.Native.PlacementMode.Center);
                xamlType = userType;
                break;

            case 374:   //  DevExpress.UI.Xaml.Internal.SelectorControl
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.UI.Xaml.Internal.SelectorControlBase"));
                userType.Activator = Activate_374_SelectorControl;
                userType.AddMemberName("ItemsSource");
                userType.AddMemberName("SelectedIndex");
                userType.AddMemberName("SelectedItem");
                userType.AddMemberName("SelectionEmptyAction");
                userType.AddMemberName("CanSelect");
                userType.SetIsBindable();
                xamlType = userType;
                break;

            case 375:   //  DevExpress.UI.Xaml.Internal.SelectorControlBase
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.UI.Xaml.Internal.ControlEx"));
                userType.AddMemberName("Orientation");
                userType.AddMemberName("ItemTemplate");
                userType.AddMemberName("ItemTemplateSelector");
                userType.AddMemberName("ItemContainerStyle");
                userType.AddMemberName("IsLockUpdate");
                userType.AddMemberName("Items");
                xamlType = userType;
                break;

            case 376:   //  DevExpress.UI.Xaml.Internal.SelectionEmptyAction
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("SelectFirst", global::DevExpress.UI.Xaml.Internal.SelectionEmptyAction.SelectFirst);
                userType.AddEnumValue("SelectLast", global::DevExpress.UI.Xaml.Internal.SelectionEmptyAction.SelectLast);
                userType.AddEnumValue("Default", global::DevExpress.UI.Xaml.Internal.SelectionEmptyAction.Default);
                xamlType = userType;
                break;

            case 377:   //  DevExpress.UI.Xaml.Internal.SelectableItemCollection
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.UI.Xaml.Internal.ItemContainerCollectionWithOwner`2<DevExpress.UI.Xaml.Internal.SelectorItemBase, DevExpress.UI.Xaml.Internal.ISupportSelection>"));
                userType.CollectionAdd = VectorAdd_377_SelectableItemCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 378:   //  DevExpress.UI.Xaml.Internal.ItemContainerCollectionWithOwner`2<DevExpress.UI.Xaml.Internal.SelectorItemBase, DevExpress.UI.Xaml.Internal.ISupportSelection>
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.UI.Xaml.Internal.ItemContainerCollection`1<DevExpress.UI.Xaml.Internal.SelectorItemBase>"));
                userType.CollectionAdd = VectorAdd_378_ItemContainerCollectionWithOwner;
                xamlType = userType;
                break;

            case 379:   //  DevExpress.UI.Xaml.Internal.ItemContainerCollection`1<DevExpress.UI.Xaml.Internal.SelectorItemBase>
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.UI.Xaml.Internal.TemplatedCollectionBase`1<DevExpress.UI.Xaml.Internal.SelectorItemBase>"));
                userType.Activator = Activate_379_ItemContainerCollection;
                userType.CollectionAdd = VectorAdd_379_ItemContainerCollection;
                xamlType = userType;
                break;

            case 380:   //  DevExpress.UI.Xaml.Internal.TemplatedCollectionBase`1<DevExpress.UI.Xaml.Internal.SelectorItemBase>
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.Core.Native.ObservableCollectionView`1<DevExpress.UI.Xaml.Internal.SelectorItemBase>"));
                userType.CollectionAdd = VectorAdd_380_TemplatedCollectionBase;
                xamlType = userType;
                break;

            case 381:   //  DevExpress.Core.Native.ObservableCollectionView`1<DevExpress.UI.Xaml.Internal.SelectorItemBase>
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.Mvvm.BindableBase"));
                userType.CollectionAdd = VectorAdd_381_ObservableCollectionView;
                xamlType = userType;
                break;

            case 382:   //  DevExpress.UI.Xaml.Internal.SelectorItemBase
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.UI.Xaml.Internal.PointerItemBase"));
                userType.AddMemberName("IsSelected");
                xamlType = userType;
                break;

            case 383:   //  DevExpress.UI.Xaml.Internal.TreeNavigator
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.UI.Xaml.Internal.SelectorControlBase"));
                userType.Activator = Activate_383_TreeNavigator;
                userType.AddMemberName("RootNode");
                userType.AddMemberName("CurrentNode");
                userType.AddMemberName("RootHeaderContent");
                userType.AddMemberName("RootHeaderContentTemplate");
                userType.AddMemberName("HeaderContent");
                userType.AddMemberName("HeaderContentTemplate");
                userType.AddMemberName("HeaderPadding");
                userType.AddMemberName("HeaderFontSize");
                userType.AddMemberName("NavigateToItemCommand");
                userType.AddMemberName("NavigateUpperCommand");
                userType.SetIsBindable();
                xamlType = userType;
                break;

            case 384:   //  DevExpress.UI.Xaml.Internal.TreeNavigatorNode
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.Mvvm.BindableBase"));
                userType.AddMemberName("Parent");
                userType.AddMemberName("IsRootNode");
                userType.AddMemberName("IsSubNode");
                userType.AddMemberName("Node");
                userType.AddMemberName("Children");
                userType.AddMemberName("HasChildren");
                userType.SetIsBindable();
                xamlType = userType;
                break;

            case 385:   //  DevExpress.UI.Xaml.Internal.TreeNavigatorItem
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.UI.Xaml.Internal.SelectorItemBase"));
                userType.Activator = Activate_385_TreeNavigatorItem;
                userType.AddMemberName("Node");
                userType.AddMemberName("IconPadding");
                userType.AddMemberName("ArrowGlyph");
                userType.AddMemberName("ArrowGlyphPressed");
                userType.AddMemberName("IsSelected");
                userType.SetIsBindable();
                xamlType = userType;
                break;

            case 386:   //  DevExpress.UI.Xaml.Internal.TreeNavigatorNodeCollection
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.ObservableCollection`1<DevExpress.UI.Xaml.Internal.TreeNavigatorNode>"));
                userType.CollectionAdd = VectorAdd_386_TreeNavigatorNodeCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 387:   //  System.Collections.ObjectModel.ObservableCollection`1<DevExpress.UI.Xaml.Internal.TreeNavigatorNode>
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<DevExpress.UI.Xaml.Internal.TreeNavigatorNode>"));
                userType.Activator = Activate_387_ObservableCollection;
                userType.CollectionAdd = VectorAdd_387_ObservableCollection;
                xamlType = userType;
                break;

            case 388:   //  System.Collections.ObjectModel.Collection`1<DevExpress.UI.Xaml.Internal.TreeNavigatorNode>
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_388_Collection;
                userType.CollectionAdd = VectorAdd_388_Collection;
                xamlType = userType;
                break;

            case 389:   //  Telerik.UI.Xaml.Controls.Chart.ChartAnnotationLabelDefinition
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObject"));
                userType.Activator = Activate_389_ChartAnnotationLabelDefinition;
                userType.AddMemberName("Format");
                userType.AddMemberName("Template");
                userType.AddMemberName("DefaultVisualStyle");
                userType.AddMemberName("Location");
                userType.AddMemberName("HorizontalAlignment");
                userType.AddMemberName("VerticalAlignment");
                userType.AddMemberName("HorizontalOffset");
                userType.AddMemberName("VerticalOffset");
                userType.SetIsBindable();
                xamlType = userType;
                break;

            case 390:   //  Telerik.UI.Xaml.Controls.Chart.ChartAnnotationLabelLocation
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Left", global::Telerik.UI.Xaml.Controls.Chart.ChartAnnotationLabelLocation.Left);
                userType.AddEnumValue("Top", global::Telerik.UI.Xaml.Controls.Chart.ChartAnnotationLabelLocation.Top);
                userType.AddEnumValue("Right", global::Telerik.UI.Xaml.Controls.Chart.ChartAnnotationLabelLocation.Right);
                userType.AddEnumValue("Bottom", global::Telerik.UI.Xaml.Controls.Chart.ChartAnnotationLabelLocation.Bottom);
                userType.AddEnumValue("Inside", global::Telerik.UI.Xaml.Controls.Chart.ChartAnnotationLabelLocation.Inside);
                xamlType = userType;
                break;

            case 391:   //  Windows.UI.Xaml.HorizontalAlignment
                xamlType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 392:   //  Windows.UI.Xaml.VerticalAlignment
                xamlType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 393:   //  Telerik.UI.Xaml.Controls.Chart.ChartPalette
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObject"));
                userType.Activator = Activate_393_ChartPalette;
                userType.AddMemberName("Name");
                userType.AddMemberName("FillEntries");
                userType.AddMemberName("SpecialFillEntries");
                userType.AddMemberName("StrokeEntries");
                userType.AddMemberName("SpecialStrokeEntries");
                userType.SetIsBindable();
                xamlType = userType;
                break;

            case 394:   //  Telerik.UI.Xaml.Controls.Chart.PaletteEntryCollection
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_394_PaletteEntryCollection;
                userType.SetContentPropertyName("Telerik.UI.Xaml.Controls.Chart.PaletteEntryCollection.Brushes");
                userType.AddMemberName("Brushes");
                xamlType = userType;
                break;

            case 395:   //  System.Collections.Generic.List`1<Windows.UI.Xaml.Media.Brush>
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.CollectionAdd = VectorAdd_395_List;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 396:   //  Telerik.UI.Xaml.Controls.Data.HexView.AngledHexLayoutDefinition
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Telerik.UI.Xaml.Controls.Data.HexView.HexLayoutDefinitionBase"));
                userType.Activator = Activate_396_AngledHexLayoutDefinition;
                userType.SetIsBindable();
                xamlType = userType;
                break;

            case 397:   //  Telerik.UI.Xaml.Controls.Data.HexView.HexLayoutDefinitionBase
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObject"));
                userType.AddMemberName("Orientation");
                userType.AddMemberName("ItemLength");
                userType.AddMemberName("ItemsSpacing");
                userType.AddMemberName("ViewPortExtension");
                xamlType = userType;
                break;

            case 398:   //  Telerik.UI.Xaml.Controls.Data.HexView.FlatLooseHexLayoutDefinition
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Telerik.UI.Xaml.Controls.Data.HexView.HexLayoutDefinitionBase"));
                userType.Activator = Activate_398_FlatLooseHexLayoutDefinition;
                userType.SetIsBindable();
                xamlType = userType;
                break;

            case 399:   //  Telerik.UI.Xaml.Controls.Data.HexView.FlatTightHexLayoutDefinition
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Telerik.UI.Xaml.Controls.Data.HexView.HexLayoutDefinitionBase"));
                userType.Activator = Activate_399_FlatTightHexLayoutDefinition;
                userType.SetIsBindable();
                xamlType = userType;
                break;

            case 400:   //  Telerik.UI.Xaml.Controls.Input.HighlightStyle
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObject"));
                userType.Activator = Activate_400_HighlightStyle;
                userType.AddMemberName("FontFamily");
                userType.AddMemberName("FontWeight");
                userType.AddMemberName("FontStyle");
                userType.AddMemberName("Foreground");
                userType.AddMemberName("FontSize");
                userType.SetIsBindable();
                xamlType = userType;
                break;

            case 401:   //  Telerik.UI.Xaml.Controls.Input.FontWeightName
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Black", global::Telerik.UI.Xaml.Controls.Input.FontWeightName.Black);
                userType.AddEnumValue("Bold", global::Telerik.UI.Xaml.Controls.Input.FontWeightName.Bold);
                userType.AddEnumValue("ExtraBlack", global::Telerik.UI.Xaml.Controls.Input.FontWeightName.ExtraBlack);
                userType.AddEnumValue("ExtraBold", global::Telerik.UI.Xaml.Controls.Input.FontWeightName.ExtraBold);
                userType.AddEnumValue("ExtraLight", global::Telerik.UI.Xaml.Controls.Input.FontWeightName.ExtraLight);
                userType.AddEnumValue("Light", global::Telerik.UI.Xaml.Controls.Input.FontWeightName.Light);
                userType.AddEnumValue("Medium", global::Telerik.UI.Xaml.Controls.Input.FontWeightName.Medium);
                userType.AddEnumValue("Normal", global::Telerik.UI.Xaml.Controls.Input.FontWeightName.Normal);
                userType.AddEnumValue("SemiBold", global::Telerik.UI.Xaml.Controls.Input.FontWeightName.SemiBold);
                userType.AddEnumValue("SemiLight", global::Telerik.UI.Xaml.Controls.Input.FontWeightName.SemiLight);
                userType.AddEnumValue("Thin", global::Telerik.UI.Xaml.Controls.Input.FontWeightName.Thin);
                xamlType = userType;
                break;

            case 402:   //  Windows.UI.Text.FontStyle
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Normal", global::Windows.UI.Text.FontStyle.Normal);
                userType.AddEnumValue("Oblique", global::Windows.UI.Text.FontStyle.Oblique);
                userType.AddEnumValue("Italic", global::Windows.UI.Text.FontStyle.Italic);
                xamlType = userType;
                break;

            case 403:   //  Telerik.UI.Xaml.Controls.Input.CalendarCellStyle
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObject"));
                userType.Activator = Activate_403_CalendarCellStyle;
                userType.AddMemberName("ContentStyle");
                userType.AddMemberName("DecorationStyle");
                userType.SetIsBindable();
                xamlType = userType;
                break;

            case 404:   //  Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Telerik.UI.Xaml.Controls.RadControl"));
                userType.Activator = Activate_404_RadRadialMenu;
                userType.SetContentPropertyName("Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu.Items");
                userType.AddMemberName("Items");
                userType.AddMemberName("ShowToolTip");
                userType.AddMemberName("IsOpen");
                userType.AddMemberName("StartAngle");
                userType.AddMemberName("InnerNavigationRadiusFactor");
                userType.AddMemberName("InnerRadiusFactor");
                userType.AddMemberName("OuterRadiusFactor");
                userType.AddMemberName("ContentMenuBackgroundStyle");
                userType.AddMemberName("NavigationMenuBackgroundStyle");
                userType.AddMemberName("CommandService");
                userType.AddMemberName("Commands");
                userType.AddMemberName("TargetElement");
                userType.SetIsBindable();
                xamlType = userType;
                break;

            case 405:   //  System.Collections.ObjectModel.ObservableCollection`1<Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem>
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem>"));
                userType.CollectionAdd = VectorAdd_405_ObservableCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 406:   //  System.Collections.ObjectModel.Collection`1<Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem>
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_406_Collection;
                userType.CollectionAdd = VectorAdd_406_Collection;
                xamlType = userType;
                break;

            case 407:   //  Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Telerik.UI.Xaml.Controls.Primitives.RadDependencyObject"));
                userType.Activator = Activate_407_RadialMenuItem;
                userType.SetContentPropertyName("Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem.ChildItems");
                userType.AddMemberName("ChildItems");
                userType.AddMemberName("ToolTipContent");
                userType.AddMemberName("CommandParameter");
                userType.AddMemberName("IsEnabled");
                userType.AddMemberName("Command");
                userType.AddMemberName("ParentItem");
                userType.AddMemberName("IsSelected");
                userType.AddMemberName("GroupName");
                userType.AddMemberName("Selectable");
                userType.AddMemberName("Deselectable");
                userType.AddMemberName("Header");
                userType.AddMemberName("IconContent");
                userType.AddMemberName("ContentSectorBackground");
                xamlType = userType;
                break;

            case 408:   //  Telerik.UI.Xaml.Controls.Primitives.Menu.CommandService
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Telerik.UI.Xaml.Controls.Primitives.CommandServiceBase`1<Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu>"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 409:   //  Telerik.UI.Xaml.Controls.Primitives.CommandServiceBase`1<Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu>
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Telerik.UI.Xaml.Controls.Primitives.ServiceBase`1<Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu>"));
                xamlType = userType;
                break;

            case 410:   //  Telerik.UI.Xaml.Controls.Primitives.ServiceBase`1<Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu>
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Telerik.UI.Xaml.Controls.Primitives.AttachableObject`1<Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu>"));
                xamlType = userType;
                break;

            case 411:   //  Telerik.UI.Xaml.Controls.Primitives.AttachableObject`1<Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu>
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Telerik.UI.Xaml.Controls.Primitives.RadDependencyObject"));
                userType.AddMemberName("Owner");
                xamlType = userType;
                break;

            case 412:   //  Telerik.UI.Xaml.Controls.Primitives.CommandCollection`1<Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu>
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Telerik.UI.Xaml.Controls.Primitives.AttachableObjectCollection`2<Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu, Telerik.UI.Xaml.Controls.Primitives.ControlCommandBase`1<Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu>>"));
                userType.CollectionAdd = VectorAdd_412_CommandCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 413:   //  Telerik.UI.Xaml.Controls.Primitives.AttachableObjectCollection`2<Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu, Telerik.UI.Xaml.Controls.Primitives.ControlCommandBase`1<Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu>>
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.ObservableCollection`1<Telerik.UI.Xaml.Controls.Primitives.ControlCommandBase`1<Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu>>"));
                userType.CollectionAdd = VectorAdd_413_AttachableObjectCollection;
                xamlType = userType;
                break;

            case 414:   //  System.Collections.ObjectModel.ObservableCollection`1<Telerik.UI.Xaml.Controls.Primitives.ControlCommandBase`1<Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu>>
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<Telerik.UI.Xaml.Controls.Primitives.ControlCommandBase`1<Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu>>"));
                userType.Activator = Activate_414_ObservableCollection;
                userType.CollectionAdd = VectorAdd_414_ObservableCollection;
                xamlType = userType;
                break;

            case 415:   //  System.Collections.ObjectModel.Collection`1<Telerik.UI.Xaml.Controls.Primitives.ControlCommandBase`1<Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu>>
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_415_Collection;
                userType.CollectionAdd = VectorAdd_415_Collection;
                xamlType = userType;
                break;

            case 416:   //  Telerik.UI.Xaml.Controls.Primitives.ControlCommandBase`1<Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu>
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Telerik.UI.Xaml.Controls.Primitives.AttachableObject`1<Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu>"));
                xamlType = userType;
                break;

            case 417:   //  Telerik.UI.Xaml.Controls.Primitives.RadialMenuTriggerBehavior
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Telerik.UI.Xaml.Controls.Primitives.AttachableObject`1<Windows.UI.Xaml.FrameworkElement>"));
                userType.Activator = Activate_417_RadialMenuTriggerBehavior;
                userType.AddMemberName("AttachTriggers");
                userType.SetIsBindable();
                xamlType = userType;
                break;

            case 418:   //  Telerik.UI.Xaml.Controls.Primitives.AttachableObject`1<Windows.UI.Xaml.FrameworkElement>
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Telerik.UI.Xaml.Controls.Primitives.RadDependencyObject"));
                userType.AddMemberName("Owner");
                xamlType = userType;
                break;

            case 419:   //  Telerik.UI.Xaml.Controls.Primitives.RadialMenuAttachTriggers
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("None", global::Telerik.UI.Xaml.Controls.Primitives.RadialMenuAttachTriggers.None);
                userType.AddEnumValue("PointerPressed", global::Telerik.UI.Xaml.Controls.Primitives.RadialMenuAttachTriggers.PointerPressed);
                userType.AddEnumValue("PointerOver", global::Telerik.UI.Xaml.Controls.Primitives.RadialMenuAttachTriggers.PointerOver);
                userType.AddEnumValue("Focused", global::Telerik.UI.Xaml.Controls.Primitives.RadialMenuAttachTriggers.Focused);
                userType.AddEnumValue("PressedOrFocused", global::Telerik.UI.Xaml.Controls.Primitives.RadialMenuAttachTriggers.PressedOrFocused);
                xamlType = userType;
                break;

            case 420:   //  Telerik.UI.Xaml.Controls.Primitives.BusyIndicator.BusyIndicatorAnimationAdapter
                userType = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.FrameworkElement"));
                userType.Activator = Activate_420_BusyIndicatorAnimationAdapter;
                userType.AddMemberName("Animation");
                userType.SetIsBindable();
                xamlType = userType;
                break;
            }
            return xamlType;
        }

        private global::System.Collections.Generic.List<global::Windows.UI.Xaml.Markup.IXamlMetadataProvider> _otherProviders;
        private global::System.Collections.Generic.List<global::Windows.UI.Xaml.Markup.IXamlMetadataProvider> OtherProviders
        {
            get
            {
                if(_otherProviders == null)
                {
                    var otherProviders = new global::System.Collections.Generic.List<global::Windows.UI.Xaml.Markup.IXamlMetadataProvider>();
                    global::Windows.UI.Xaml.Markup.IXamlMetadataProvider provider;
                    provider = new global::DevExpress.Core.DevExpress_Core_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::DevExpress.UI.Xaml.Charts.DevExpress_UI_Xaml_Charts_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::DevExpress.UI.Xaml.Controls.DevExpress_UI_Xaml_Controls_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::DevExpress.UI.Xaml.Editors.DevExpress_UI_Xaml_Editors_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::DevExpress.UI.Xaml.Gauges.DevExpress_UI_Xaml_Gauges_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::DevExpress.UI.Xaml.Grid.DevExpress_UI_Xaml_Grid_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::DevExpress.UI.Xaml.Layout.DevExpress_UI_Xaml_Layout_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::DevExpress.UI.Xaml.Map.DevExpress_UI_Xaml_Map_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::DevExpress.UI.Xaml.Ribbon.DevExpress_UI_Xaml_Ribbon_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::DevExpress.UI.Xaml.DevExpress_UI_Xaml_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Telerik.UI.Xaml.Controls.Chart.Chart_UWP_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Telerik.UI.Xaml.Controls.Data.DataControls_UWP_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Telerik.UI.Xaml.Controls.DataVisualization.DataVisualization_UWP_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Telerik.UI.Xaml.Controls.Grid.Grid_UWP_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Telerik.UI.Xaml.Controls.Input.Input_UWP_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Telerik.UI.Xaml.Controls.Primitives.Primitives_UWP_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    _otherProviders = otherProviders;
                }
                return _otherProviders;
            }
        }

        private global::Windows.UI.Xaml.Markup.IXamlType CheckOtherMetadataProvidersForName(string typeName)
        {
            global::Windows.UI.Xaml.Markup.IXamlType xamlType = null;
            global::Windows.UI.Xaml.Markup.IXamlType foundXamlType = null;
            foreach(global::Windows.UI.Xaml.Markup.IXamlMetadataProvider xmp in OtherProviders)
            {
                xamlType = xmp.GetXamlType(typeName);
                if(xamlType != null)
                {
                    if(xamlType.IsConstructible)    // not Constructible means it might be a Return Type Stub
                    {
                        return xamlType;
                    }
                    foundXamlType = xamlType;
                }
            }
            return foundXamlType;
        }

        private global::Windows.UI.Xaml.Markup.IXamlType CheckOtherMetadataProvidersForType(global::System.Type type)
        {
            global::Windows.UI.Xaml.Markup.IXamlType xamlType = null;
            global::Windows.UI.Xaml.Markup.IXamlType foundXamlType = null;
            foreach(global::Windows.UI.Xaml.Markup.IXamlMetadataProvider xmp in OtherProviders)
            {
                xamlType = xmp.GetXamlType(type);
                if(xamlType != null)
                {
                    if(xamlType.IsConstructible)    // not Constructible means it might be a Return Type Stub
                    {
                        return xamlType;
                    }
                    foundXamlType = xamlType;
                }
            }
            return foundXamlType;
        }

        private object get_0_RadDataGrid_ItemsSource(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.RadDataGrid)instance;
            return that.ItemsSource;
        }
        private void set_0_RadDataGrid_ItemsSource(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.RadDataGrid)instance;
            that.ItemsSource = (global::System.Object)Value;
        }
        private object get_1_RadDataGrid_Columns(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.RadDataGrid)instance;
            return that.Columns;
        }
        private object get_2_DataGridColumn_IsCellFlyoutEnabled(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.DataGridColumn)instance;
            return that.IsCellFlyoutEnabled;
        }
        private void set_2_DataGridColumn_IsCellFlyoutEnabled(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.DataGridColumn)instance;
            that.IsCellFlyoutEnabled = (global::System.Boolean)Value;
        }
        private object get_3_DataGridColumn_CellDecorationStyle(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.DataGridColumn)instance;
            return that.CellDecorationStyle;
        }
        private void set_3_DataGridColumn_CellDecorationStyle(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.DataGridColumn)instance;
            that.CellDecorationStyle = (global::Windows.UI.Xaml.Style)Value;
        }
        private object get_4_DataGridColumn_CellDecorationStyleSelector(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.DataGridColumn)instance;
            return that.CellDecorationStyleSelector;
        }
        private void set_4_DataGridColumn_CellDecorationStyleSelector(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.DataGridColumn)instance;
            that.CellDecorationStyleSelector = (global::Windows.UI.Xaml.Controls.StyleSelector)Value;
        }
        private object get_5_DataGridColumn_Name(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.DataGridColumn)instance;
            return that.Name;
        }
        private void set_5_DataGridColumn_Name(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.DataGridColumn)instance;
            that.Name = (global::System.String)Value;
        }
        private object get_6_DataGridColumn_CanUserEdit(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.DataGridColumn)instance;
            return that.CanUserEdit;
        }
        private void set_6_DataGridColumn_CanUserEdit(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.DataGridColumn)instance;
            that.CanUserEdit = (global::System.Boolean)Value;
        }
        private object get_7_DataGridColumn_CanUserResize(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.DataGridColumn)instance;
            return that.CanUserResize;
        }
        private void set_7_DataGridColumn_CanUserResize(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.DataGridColumn)instance;
            that.CanUserResize = (global::System.Boolean)Value;
        }
        private object get_8_DataGridColumn_CanUserFilter(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.DataGridColumn)instance;
            return that.CanUserFilter;
        }
        private void set_8_DataGridColumn_CanUserFilter(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.DataGridColumn)instance;
            that.CanUserFilter = (global::System.Boolean)Value;
        }
        private object get_9_DataGridColumn_CanUserReorder(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.DataGridColumn)instance;
            return that.CanUserReorder;
        }
        private void set_9_DataGridColumn_CanUserReorder(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.DataGridColumn)instance;
            that.CanUserReorder = (global::System.Boolean)Value;
        }
        private object get_10_DataGridColumn_CanUserGroup(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.DataGridColumn)instance;
            return that.CanUserGroup;
        }
        private void set_10_DataGridColumn_CanUserGroup(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.DataGridColumn)instance;
            that.CanUserGroup = (global::System.Boolean)Value;
        }
        private object get_11_DataGridColumn_CanUserSort(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.DataGridColumn)instance;
            return that.CanUserSort;
        }
        private void set_11_DataGridColumn_CanUserSort(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.DataGridColumn)instance;
            that.CanUserSort = (global::System.Boolean)Value;
        }
        private object get_12_DataGridColumn_IsVisible(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.DataGridColumn)instance;
            return that.IsVisible;
        }
        private void set_12_DataGridColumn_IsVisible(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.DataGridColumn)instance;
            that.IsVisible = (global::System.Boolean)Value;
        }
        private object get_13_DataGridColumn_HeaderStyle(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.DataGridColumn)instance;
            return that.HeaderStyle;
        }
        private void set_13_DataGridColumn_HeaderStyle(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.DataGridColumn)instance;
            that.HeaderStyle = (global::Windows.UI.Xaml.Style)Value;
        }
        private object get_14_DataGridColumn_SizeMode(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.DataGridColumn)instance;
            return that.SizeMode;
        }
        private void set_14_DataGridColumn_SizeMode(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.DataGridColumn)instance;
            that.SizeMode = (global::Telerik.UI.Xaml.Controls.Grid.DataGridColumnSizeMode)Value;
        }
        private object get_15_DataGridColumn_Width(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.DataGridColumn)instance;
            return that.Width;
        }
        private void set_15_DataGridColumn_Width(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.DataGridColumn)instance;
            that.Width = (global::System.Double)Value;
        }
        private object get_16_DataGridColumn_ActualWidth(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.DataGridColumn)instance;
            return that.ActualWidth;
        }
        private object get_17_DataGridColumn_IsAutoGenerated(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.DataGridColumn)instance;
            return that.IsAutoGenerated;
        }
        private object get_18_DataGridColumn_Header(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.DataGridColumn)instance;
            return that.Header;
        }
        private void set_18_DataGridColumn_Header(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.DataGridColumn)instance;
            that.Header = (global::System.Object)Value;
        }
        private object get_19_DataGridColumn_SortDirection(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.DataGridColumn)instance;
            return that.SortDirection;
        }
        private void set_19_DataGridColumn_SortDirection(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.DataGridColumn)instance;
            that.SortDirection = (global::Telerik.UI.Xaml.Controls.Grid.SortDirection)Value;
        }
        private object get_20_DataGridColumn_DataOperationsFlyoutTemplate(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.DataGridColumn)instance;
            return that.DataOperationsFlyoutTemplate;
        }
        private void set_20_DataGridColumn_DataOperationsFlyoutTemplate(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.DataGridColumn)instance;
            that.DataOperationsFlyoutTemplate = (global::Windows.UI.Xaml.DataTemplate)Value;
        }
        private object get_21_RadDataGrid_AutoGenerateColumns(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.RadDataGrid)instance;
            return that.AutoGenerateColumns;
        }
        private void set_21_RadDataGrid_AutoGenerateColumns(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.RadDataGrid)instance;
            that.AutoGenerateColumns = (global::System.Boolean)Value;
        }
        private object get_22_RadDataGrid_FrozenColumnCount(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.RadDataGrid)instance;
            return that.FrozenColumnCount;
        }
        private void set_22_RadDataGrid_FrozenColumnCount(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.RadDataGrid)instance;
            that.FrozenColumnCount = (global::System.Int32)Value;
        }
        private object get_23_RadDataGrid_ColumnDataOperationsMode(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.RadDataGrid)instance;
            return that.ColumnDataOperationsMode;
        }
        private void set_23_RadDataGrid_ColumnDataOperationsMode(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.RadDataGrid)instance;
            that.ColumnDataOperationsMode = (global::Telerik.UI.Xaml.Controls.Grid.Primitives.ColumnDataOperationsMode)Value;
        }
        private object get_24_RadDataGrid_CanUserChooseColumns(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.RadDataGrid)instance;
            return that.CanUserChooseColumns;
        }
        private void set_24_RadDataGrid_CanUserChooseColumns(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.RadDataGrid)instance;
            that.CanUserChooseColumns = (global::System.Boolean)Value;
        }
        private object get_25_RadDataGrid_RealizedItemsVerticalBufferScale(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.RadDataGrid)instance;
            return that.RealizedItemsVerticalBufferScale;
        }
        private void set_25_RadDataGrid_RealizedItemsVerticalBufferScale(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.RadDataGrid)instance;
            that.RealizedItemsVerticalBufferScale = (global::System.Double)Value;
        }
        private object get_26_RadDataGrid_IsBusyIndicatorEnabled(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.RadDataGrid)instance;
            return that.IsBusyIndicatorEnabled;
        }
        private void set_26_RadDataGrid_IsBusyIndicatorEnabled(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.RadDataGrid)instance;
            that.IsBusyIndicatorEnabled = (global::System.Boolean)Value;
        }
        private object get_27_RadDataGrid_UserFilterMode(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.RadDataGrid)instance;
            return that.UserFilterMode;
        }
        private void set_27_RadDataGrid_UserFilterMode(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.RadDataGrid)instance;
            that.UserFilterMode = (global::Telerik.UI.Xaml.Controls.Grid.DataGridUserFilterMode)Value;
        }
        private object get_28_RadDataGrid_UserColumnReorderMode(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.RadDataGrid)instance;
            return that.UserColumnReorderMode;
        }
        private void set_28_RadDataGrid_UserColumnReorderMode(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.RadDataGrid)instance;
            that.UserColumnReorderMode = (global::Telerik.UI.Xaml.Controls.Grid.DataGridUserColumnReorderMode)Value;
        }
        private object get_29_RadDataGrid_ColumnResizeHandleDisplayMode(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.RadDataGrid)instance;
            return that.ColumnResizeHandleDisplayMode;
        }
        private void set_29_RadDataGrid_ColumnResizeHandleDisplayMode(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.RadDataGrid)instance;
            that.ColumnResizeHandleDisplayMode = (global::Telerik.UI.Xaml.Controls.Grid.DataGridColumnResizeHandleDisplayMode)Value;
        }
        private object get_30_RadDataGrid_UserSortMode(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.RadDataGrid)instance;
            return that.UserSortMode;
        }
        private void set_30_RadDataGrid_UserSortMode(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.RadDataGrid)instance;
            that.UserSortMode = (global::Telerik.UI.Xaml.Controls.Grid.DataGridUserSortMode)Value;
        }
        private object get_31_RadDataGrid_UserGroupMode(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.RadDataGrid)instance;
            return that.UserGroupMode;
        }
        private void set_31_RadDataGrid_UserGroupMode(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.RadDataGrid)instance;
            that.UserGroupMode = (global::Telerik.UI.Xaml.Controls.Grid.DataGridUserGroupMode)Value;
        }
        private object get_32_RadDataGrid_IndentWidth(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.RadDataGrid)instance;
            return that.IndentWidth;
        }
        private void set_32_RadDataGrid_IndentWidth(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.RadDataGrid)instance;
            that.IndentWidth = (global::System.Double)Value;
        }
        private object get_33_RadDataGrid_GroupHeaderDisplayMode(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.RadDataGrid)instance;
            return that.GroupHeaderDisplayMode;
        }
        private void set_33_RadDataGrid_GroupHeaderDisplayMode(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.RadDataGrid)instance;
            that.GroupHeaderDisplayMode = (global::Telerik.UI.Xaml.Controls.Grid.DataGridGroupHeaderDisplayMode)Value;
        }
        private object get_34_RadDataGrid_GroupHeaderTemplate(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.RadDataGrid)instance;
            return that.GroupHeaderTemplate;
        }
        private void set_34_RadDataGrid_GroupHeaderTemplate(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.RadDataGrid)instance;
            that.GroupHeaderTemplate = (global::Windows.UI.Xaml.DataTemplate)Value;
        }
        private object get_35_RadDataGrid_GroupHeaderTemplateSelector(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.RadDataGrid)instance;
            return that.GroupHeaderTemplateSelector;
        }
        private void set_35_RadDataGrid_GroupHeaderTemplateSelector(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.RadDataGrid)instance;
            that.GroupHeaderTemplateSelector = (global::Windows.UI.Xaml.Controls.DataTemplateSelector)Value;
        }
        private object get_36_RadDataGrid_GroupHeaderStyle(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.RadDataGrid)instance;
            return that.GroupHeaderStyle;
        }
        private void set_36_RadDataGrid_GroupHeaderStyle(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.RadDataGrid)instance;
            that.GroupHeaderStyle = (global::Windows.UI.Xaml.Style)Value;
        }
        private object get_37_RadDataGrid_GroupHeaderStyleSelector(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.RadDataGrid)instance;
            return that.GroupHeaderStyleSelector;
        }
        private void set_37_RadDataGrid_GroupHeaderStyleSelector(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.RadDataGrid)instance;
            that.GroupHeaderStyleSelector = (global::Windows.UI.Xaml.Controls.StyleSelector)Value;
        }
        private object get_38_RadDataGrid_Commands(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.RadDataGrid)instance;
            return that.Commands;
        }
        private object get_39_AttachableObject_Owner(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Primitives.AttachableObject<global::Telerik.UI.Xaml.Controls.Grid.RadDataGrid>)instance;
            return that.Owner;
        }
        private object get_40_RadDataGrid_RowHeight(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.RadDataGrid)instance;
            return that.RowHeight;
        }
        private void set_40_RadDataGrid_RowHeight(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.RadDataGrid)instance;
            that.RowHeight = (global::System.Double)Value;
        }
        private object get_41_RadDataGrid_CommandService(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.RadDataGrid)instance;
            return that.CommandService;
        }
        private object get_42_RadDataGrid_DragBehavior(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.RadDataGrid)instance;
            return that.DragBehavior;
        }
        private void set_42_RadDataGrid_DragBehavior(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.RadDataGrid)instance;
            that.DragBehavior = (global::Telerik.UI.Xaml.Controls.Grid.DataGridDragBehavior)Value;
        }
        private object get_43_RadDataGrid_GroupPanelPosition(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.RadDataGrid)instance;
            return that.GroupPanelPosition;
        }
        private void set_43_RadDataGrid_GroupPanelPosition(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.RadDataGrid)instance;
            that.GroupPanelPosition = (global::Telerik.UI.Xaml.Controls.Grid.GroupPanelPosition)Value;
        }
        private object get_44_RadDataGrid_CurrentItem(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.RadDataGrid)instance;
            return that.CurrentItem;
        }
        private object get_45_RadDataGrid_EnsureCurrentItemIntoView(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.RadDataGrid)instance;
            return that.EnsureCurrentItemIntoView;
        }
        private void set_45_RadDataGrid_EnsureCurrentItemIntoView(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.RadDataGrid)instance;
            that.EnsureCurrentItemIntoView = (global::System.Boolean)Value;
        }
        private object get_46_RadDataGrid_IsSynchronizedWithCurrentItem(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.RadDataGrid)instance;
            return that.IsSynchronizedWithCurrentItem;
        }
        private void set_46_RadDataGrid_IsSynchronizedWithCurrentItem(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.RadDataGrid)instance;
            that.IsSynchronizedWithCurrentItem = (global::System.Boolean)Value;
        }
        private object get_47_RadDataGrid_IncrementalLoadingMode(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.RadDataGrid)instance;
            return that.IncrementalLoadingMode;
        }
        private void set_47_RadDataGrid_IncrementalLoadingMode(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.RadDataGrid)instance;
            that.IncrementalLoadingMode = (global::Telerik.Core.Data.BatchLoadingMode)Value;
        }
        private object get_48_RadDataGrid_SortDescriptors(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.RadDataGrid)instance;
            return that.SortDescriptors;
        }
        private object get_49_SortDescriptorBase_Comparer(object instance)
        {
            var that = (global::Telerik.Data.Core.SortDescriptorBase)instance;
            return that.Comparer;
        }
        private void set_49_SortDescriptorBase_Comparer(object instance, object Value)
        {
            var that = (global::Telerik.Data.Core.SortDescriptorBase)instance;
            that.Comparer = (global::System.Collections.IComparer)Value;
        }
        private object get_50_OrderedDescriptor_SortOrder(object instance)
        {
            var that = (global::Telerik.Data.Core.OrderedDescriptor)instance;
            return that.SortOrder;
        }
        private void set_50_OrderedDescriptor_SortOrder(object instance, object Value)
        {
            var that = (global::Telerik.Data.Core.OrderedDescriptor)instance;
            that.SortOrder = (global::Telerik.Data.Core.SortOrder)Value;
        }
        private object get_51_RadDataGrid_GroupDescriptors(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.RadDataGrid)instance;
            return that.GroupDescriptors;
        }
        private object get_52_GroupDescriptorBase_DisplayContent(object instance)
        {
            var that = (global::Telerik.Data.Core.GroupDescriptorBase)instance;
            return that.DisplayContent;
        }
        private void set_52_GroupDescriptorBase_DisplayContent(object instance, object Value)
        {
            var that = (global::Telerik.Data.Core.GroupDescriptorBase)instance;
            that.DisplayContent = (global::System.Object)Value;
        }
        private object get_53_RadDataGrid_FilterDescriptors(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.RadDataGrid)instance;
            return that.FilterDescriptors;
        }
        private object get_54_RadDataGrid_AggregateDescriptors(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.RadDataGrid)instance;
            return that.AggregateDescriptors;
        }
        private object get_55_RadDataGrid_RowBackground(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.RadDataGrid)instance;
            return that.RowBackground;
        }
        private void set_55_RadDataGrid_RowBackground(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.RadDataGrid)instance;
            that.RowBackground = (global::Windows.UI.Xaml.Media.Brush)Value;
        }
        private object get_56_RadDataGrid_RowBackgroundSelector(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.RadDataGrid)instance;
            return that.RowBackgroundSelector;
        }
        private void set_56_RadDataGrid_RowBackgroundSelector(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.RadDataGrid)instance;
            that.RowBackgroundSelector = (global::Telerik.UI.Xaml.Controls.Primitives.ObjectSelector<global::Windows.UI.Xaml.Media.Brush>)Value;
        }
        private object get_57_RadDataGrid_AlternateRowBackground(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.RadDataGrid)instance;
            return that.AlternateRowBackground;
        }
        private void set_57_RadDataGrid_AlternateRowBackground(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.RadDataGrid)instance;
            that.AlternateRowBackground = (global::Windows.UI.Xaml.Media.Brush)Value;
        }
        private object get_58_RadDataGrid_AlternationStep(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.RadDataGrid)instance;
            return that.AlternationStep;
        }
        private void set_58_RadDataGrid_AlternationStep(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.RadDataGrid)instance;
            that.AlternationStep = (global::System.Int32)Value;
        }
        private object get_59_RadDataGrid_AlternationStartIndex(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.RadDataGrid)instance;
            return that.AlternationStartIndex;
        }
        private void set_59_RadDataGrid_AlternationStartIndex(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.RadDataGrid)instance;
            that.AlternationStartIndex = (global::System.Int32)Value;
        }
        private object get_60_RadDataGrid_GridLinesBrush(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.RadDataGrid)instance;
            return that.GridLinesBrush;
        }
        private void set_60_RadDataGrid_GridLinesBrush(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.RadDataGrid)instance;
            that.GridLinesBrush = (global::Windows.UI.Xaml.Media.Brush)Value;
        }
        private object get_61_RadDataGrid_GridLinesVisibility(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.RadDataGrid)instance;
            return that.GridLinesVisibility;
        }
        private void set_61_RadDataGrid_GridLinesVisibility(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.RadDataGrid)instance;
            that.GridLinesVisibility = (global::Telerik.UI.Xaml.Controls.Primitives.GridLinesVisibility)Value;
        }
        private object get_62_RadDataGrid_GridLinesThickness(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.RadDataGrid)instance;
            return that.GridLinesThickness;
        }
        private void set_62_RadDataGrid_GridLinesThickness(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.RadDataGrid)instance;
            that.GridLinesThickness = (global::System.Double)Value;
        }
        private object get_63_RadDataGrid_UserEditMode(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.RadDataGrid)instance;
            return that.UserEditMode;
        }
        private void set_63_RadDataGrid_UserEditMode(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.RadDataGrid)instance;
            that.UserEditMode = (global::Telerik.UI.Xaml.Controls.Grid.DataGridUserEditMode)Value;
        }
        private object get_64_RadDataGrid_ExternalEditor(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.RadDataGrid)instance;
            return that.ExternalEditor;
        }
        private void set_64_RadDataGrid_ExternalEditor(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.RadDataGrid)instance;
            that.ExternalEditor = (global::Telerik.UI.Xaml.Controls.Grid.IGridExternalEditor)Value;
        }
        private object get_65_RadDataGrid_HitTestService(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.RadDataGrid)instance;
            return that.HitTestService;
        }
        private object get_66_RadDataGrid_RowDetailsDisplayMode(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.RadDataGrid)instance;
            return that.RowDetailsDisplayMode;
        }
        private void set_66_RadDataGrid_RowDetailsDisplayMode(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.RadDataGrid)instance;
            that.RowDetailsDisplayMode = (global::Telerik.UI.Xaml.Controls.Grid.DataGridRowDetailsMode)Value;
        }
        private object get_67_RadDataGrid_RowDetailsTemplate(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.RadDataGrid)instance;
            return that.RowDetailsTemplate;
        }
        private void set_67_RadDataGrid_RowDetailsTemplate(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.RadDataGrid)instance;
            that.RowDetailsTemplate = (global::Windows.UI.Xaml.DataTemplate)Value;
        }
        private object get_68_RadDataGrid_SelectionUnit(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.RadDataGrid)instance;
            return that.SelectionUnit;
        }
        private void set_68_RadDataGrid_SelectionUnit(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.RadDataGrid)instance;
            that.SelectionUnit = (global::Telerik.UI.Xaml.Controls.Grid.DataGridSelectionUnit)Value;
        }
        private object get_69_RadDataGrid_SelectedItem(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.RadDataGrid)instance;
            return that.SelectedItem;
        }
        private void set_69_RadDataGrid_SelectedItem(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.RadDataGrid)instance;
            that.SelectedItem = (global::System.Object)Value;
        }
        private object get_70_RadDataGrid_SelectionMode(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.RadDataGrid)instance;
            return that.SelectionMode;
        }
        private void set_70_RadDataGrid_SelectionMode(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.RadDataGrid)instance;
            that.SelectionMode = (global::Telerik.UI.Xaml.Controls.Grid.DataGridSelectionMode)Value;
        }
        private object get_71_RadDataGrid_SelectedItems(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.RadDataGrid)instance;
            return that.SelectedItems;
        }
        private object get_72_RadDataGrid_HideFlyoutOnBackButtonPressed(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.RadDataGrid)instance;
            return that.HideFlyoutOnBackButtonPressed;
        }
        private void set_72_RadDataGrid_HideFlyoutOnBackButtonPressed(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.RadDataGrid)instance;
            that.HideFlyoutOnBackButtonPressed = (global::System.Boolean)Value;
        }
        private object get_73_RadControl_CurrentVisualState(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.RadControl)instance;
            return that.CurrentVisualState;
        }
        private object get_74_DataGridTypedColumn_PropertyName(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.DataGridTypedColumn)instance;
            return that.PropertyName;
        }
        private void set_74_DataGridTypedColumn_PropertyName(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.DataGridTypedColumn)instance;
            that.PropertyName = (global::System.String)Value;
        }
        private object get_75_DataGridTextColumn_CellContentFormat(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.DataGridTextColumn)instance;
            return that.CellContentFormat;
        }
        private void set_75_DataGridTextColumn_CellContentFormat(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.DataGridTextColumn)instance;
            that.CellContentFormat = (global::System.String)Value;
        }
        private object get_76_DataGridTypedColumn_CellContentStyle(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.DataGridTypedColumn)instance;
            return that.CellContentStyle;
        }
        private void set_76_DataGridTypedColumn_CellContentStyle(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.DataGridTypedColumn)instance;
            that.CellContentStyle = (global::Windows.UI.Xaml.Style)Value;
        }
        private object get_77_DataGridTypedColumn_CellContentStyleSelector(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.DataGridTypedColumn)instance;
            return that.CellContentStyleSelector;
        }
        private void set_77_DataGridTypedColumn_CellContentStyleSelector(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.DataGridTypedColumn)instance;
            that.CellContentStyleSelector = (global::Windows.UI.Xaml.Controls.StyleSelector)Value;
        }
        private object get_78_DataGridTypedColumn_CellEditorStyle(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.DataGridTypedColumn)instance;
            return that.CellEditorStyle;
        }
        private void set_78_DataGridTypedColumn_CellEditorStyle(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Grid.DataGridTypedColumn)instance;
            that.CellEditorStyle = (global::Windows.UI.Xaml.Style)Value;
        }
        private object get_79_RadDatePicker_DayStepBehavior(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Input.RadDatePicker)instance;
            return that.DayStepBehavior;
        }
        private void set_79_RadDatePicker_DayStepBehavior(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Input.RadDatePicker)instance;
            that.DayStepBehavior = (global::Telerik.UI.Xaml.Controls.Input.StepBehavior)Value;
        }
        private object get_80_RadDatePicker_MonthStepBehavior(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Input.RadDatePicker)instance;
            return that.MonthStepBehavior;
        }
        private void set_80_RadDatePicker_MonthStepBehavior(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Input.RadDatePicker)instance;
            that.MonthStepBehavior = (global::Telerik.UI.Xaml.Controls.Input.StepBehavior)Value;
        }
        private object get_81_RadDatePicker_YearStepBehavior(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Input.RadDatePicker)instance;
            return that.YearStepBehavior;
        }
        private void set_81_RadDatePicker_YearStepBehavior(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Input.RadDatePicker)instance;
            that.YearStepBehavior = (global::Telerik.UI.Xaml.Controls.Input.StepBehavior)Value;
        }
        private object get_82_DateTimePicker_DisplayMode(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Input.DateTimePicker)instance;
            return that.DisplayMode;
        }
        private void set_82_DateTimePicker_DisplayMode(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Input.DateTimePicker)instance;
            that.DisplayMode = (global::Telerik.UI.Xaml.Controls.Input.DateTimePickerDisplayMode)Value;
        }
        private object get_83_DateTimePicker_CalendarNumeralSystem(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Input.DateTimePicker)instance;
            return that.CalendarNumeralSystem;
        }
        private void set_83_DateTimePicker_CalendarNumeralSystem(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Input.DateTimePicker)instance;
            that.CalendarNumeralSystem = (global::System.String)Value;
        }
        private object get_84_DateTimePicker_CalendarIdentifier(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Input.DateTimePicker)instance;
            return that.CalendarIdentifier;
        }
        private void set_84_DateTimePicker_CalendarIdentifier(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Input.DateTimePicker)instance;
            that.CalendarIdentifier = (global::System.String)Value;
        }
        private object get_85_DateTimePicker_CalendarLanguage(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Input.DateTimePicker)instance;
            return that.CalendarLanguage;
        }
        private void set_85_DateTimePicker_CalendarLanguage(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Input.DateTimePicker)instance;
            that.CalendarLanguage = (global::System.String)Value;
        }
        private object get_86_DateTimePicker_Step(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Input.DateTimePicker)instance;
            return that.Step;
        }
        private void set_86_DateTimePicker_Step(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Input.DateTimePicker)instance;
            that.Step = (global::System.DateTimeOffset)Value;
        }
        private object get_87_DateTimePicker_AutoSizeWidth(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Input.DateTimePicker)instance;
            return that.AutoSizeWidth;
        }
        private void set_87_DateTimePicker_AutoSizeWidth(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Input.DateTimePicker)instance;
            that.AutoSizeWidth = (global::System.Boolean)Value;
        }
        private object get_88_DateTimePicker_IsReadOnly(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Input.DateTimePicker)instance;
            return that.IsReadOnly;
        }
        private void set_88_DateTimePicker_IsReadOnly(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Input.DateTimePicker)instance;
            that.IsReadOnly = (global::System.Boolean)Value;
        }
        private object get_89_DateTimePicker_EmptyContent(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Input.DateTimePicker)instance;
            return that.EmptyContent;
        }
        private void set_89_DateTimePicker_EmptyContent(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Input.DateTimePicker)instance;
            that.EmptyContent = (global::System.Object)Value;
        }
        private object get_90_DateTimePicker_EmptyContentTemplate(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Input.DateTimePicker)instance;
            return that.EmptyContentTemplate;
        }
        private void set_90_DateTimePicker_EmptyContentTemplate(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Input.DateTimePicker)instance;
            that.EmptyContentTemplate = (global::Windows.UI.Xaml.DataTemplate)Value;
        }
        private object get_91_DateTimePicker_ValueString(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Input.DateTimePicker)instance;
            return that.ValueString;
        }
        private object get_92_DateTimePicker_MaxValue(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Input.DateTimePicker)instance;
            return that.MaxValue;
        }
        private void set_92_DateTimePicker_MaxValue(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Input.DateTimePicker)instance;
            that.MaxValue = (global::System.DateTime)Value;
        }
        private object get_93_DateTimePicker_MinValue(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Input.DateTimePicker)instance;
            return that.MinValue;
        }
        private void set_93_DateTimePicker_MinValue(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Input.DateTimePicker)instance;
            that.MinValue = (global::System.DateTime)Value;
        }
        private object get_94_DateTimePicker_Value(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Input.DateTimePicker)instance;
            return that.Value;
        }
        private void set_94_DateTimePicker_Value(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Input.DateTimePicker)instance;
            that.Value = (global::System.Nullable<global::System.DateTime>)Value;
        }
        private object get_95_DateTimePicker_DisplayValueFormat(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Input.DateTimePicker)instance;
            return that.DisplayValueFormat;
        }
        private void set_95_DateTimePicker_DisplayValueFormat(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Input.DateTimePicker)instance;
            that.DisplayValueFormat = (global::System.String)Value;
        }
        private object get_96_DateTimePicker_SelectorBackgroundStyle(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Input.DateTimePicker)instance;
            return that.SelectorBackgroundStyle;
        }
        private void set_96_DateTimePicker_SelectorBackgroundStyle(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Input.DateTimePicker)instance;
            that.SelectorBackgroundStyle = (global::Windows.UI.Xaml.Style)Value;
        }
        private object get_97_DateTimePicker_ItemLength(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Input.DateTimePicker)instance;
            return that.ItemLength;
        }
        private void set_97_DateTimePicker_ItemLength(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Input.DateTimePicker)instance;
            that.ItemLength = (global::System.Double)Value;
        }
        private object get_98_DateTimePicker_ItemSpacing(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Input.DateTimePicker)instance;
            return that.ItemSpacing;
        }
        private void set_98_DateTimePicker_ItemSpacing(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Input.DateTimePicker)instance;
            that.ItemSpacing = (global::System.Double)Value;
        }
        private object get_99_DateTimePicker_SelectorOrder(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Input.DateTimePicker)instance;
            return that.SelectorOrder;
        }
        private void set_99_DateTimePicker_SelectorOrder(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Input.DateTimePicker)instance;
            that.SelectorOrder = (global::System.String)Value;
        }
        private object get_100_DateTimePicker_IsOpen(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Input.DateTimePicker)instance;
            return that.IsOpen;
        }
        private void set_100_DateTimePicker_IsOpen(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Input.DateTimePicker)instance;
            that.IsOpen = (global::System.Boolean)Value;
        }
        private object get_101_DateTimePicker_SelectorDefaultValue(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Input.DateTimePicker)instance;
            return that.SelectorDefaultValue;
        }
        private void set_101_DateTimePicker_SelectorDefaultValue(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Input.DateTimePicker)instance;
            that.SelectorDefaultValue = (global::System.Nullable<global::System.DateTime>)Value;
        }
        private object get_102_DateTimePicker_SelectorHeader(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Input.DateTimePicker)instance;
            return that.SelectorHeader;
        }
        private void set_102_DateTimePicker_SelectorHeader(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Input.DateTimePicker)instance;
            that.SelectorHeader = (global::System.Object)Value;
        }
        private object get_103_DateTimePicker_SelectorHeaderTemplate(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Input.DateTimePicker)instance;
            return that.SelectorHeaderTemplate;
        }
        private void set_103_DateTimePicker_SelectorHeaderTemplate(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Input.DateTimePicker)instance;
            that.SelectorHeaderTemplate = (global::Windows.UI.Xaml.DataTemplate)Value;
        }
        private object get_104_DateTimePicker_ItemCount(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Input.DateTimePicker)instance;
            return that.ItemCount;
        }
        private void set_104_DateTimePicker_ItemCount(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Input.DateTimePicker)instance;
            that.ItemCount = (global::System.Int32)Value;
        }
        private object get_105_RadHeaderedControl_Header(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.RadHeaderedControl)instance;
            return that.Header;
        }
        private void set_105_RadHeaderedControl_Header(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.RadHeaderedControl)instance;
            that.Header = (global::System.Object)Value;
        }
        private object get_106_RadHeaderedControl_HeaderTemplate(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.RadHeaderedControl)instance;
            return that.HeaderTemplate;
        }
        private void set_106_RadHeaderedControl_HeaderTemplate(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.RadHeaderedControl)instance;
            that.HeaderTemplate = (global::Windows.UI.Xaml.DataTemplate)Value;
        }
        private object get_107_RadHeaderedControl_HeaderStyle(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.RadHeaderedControl)instance;
            return that.HeaderStyle;
        }
        private void set_107_RadHeaderedControl_HeaderStyle(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.RadHeaderedControl)instance;
            that.HeaderStyle = (global::Windows.UI.Xaml.Style)Value;
        }
        private object get_108_TitleSettings_ButtonInactiveForeground(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.TitleSettings)instance;
            return that.ButtonInactiveForeground;
        }
        private void set_108_TitleSettings_ButtonInactiveForeground(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.TitleSettings)instance;
            that.ButtonInactiveForeground = (global::Windows.UI.Xaml.Media.SolidColorBrush)Value;
        }
        private object get_109_TitleSettings_ButtonInactiveBackground(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.TitleSettings)instance;
            return that.ButtonInactiveBackground;
        }
        private void set_109_TitleSettings_ButtonInactiveBackground(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.TitleSettings)instance;
            that.ButtonInactiveBackground = (global::Windows.UI.Xaml.Media.SolidColorBrush)Value;
        }
        private object get_110_TitleSettings_ButtonPressedForeground(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.TitleSettings)instance;
            return that.ButtonPressedForeground;
        }
        private void set_110_TitleSettings_ButtonPressedForeground(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.TitleSettings)instance;
            that.ButtonPressedForeground = (global::Windows.UI.Xaml.Media.SolidColorBrush)Value;
        }
        private object get_111_TitleSettings_ButtonPressedBackground(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.TitleSettings)instance;
            return that.ButtonPressedBackground;
        }
        private void set_111_TitleSettings_ButtonPressedBackground(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.TitleSettings)instance;
            that.ButtonPressedBackground = (global::Windows.UI.Xaml.Media.SolidColorBrush)Value;
        }
        private object get_112_TitleSettings_ButtonHoverForeground(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.TitleSettings)instance;
            return that.ButtonHoverForeground;
        }
        private void set_112_TitleSettings_ButtonHoverForeground(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.TitleSettings)instance;
            that.ButtonHoverForeground = (global::Windows.UI.Xaml.Media.SolidColorBrush)Value;
        }
        private object get_113_TitleSettings_ButtonHoverBackground(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.TitleSettings)instance;
            return that.ButtonHoverBackground;
        }
        private void set_113_TitleSettings_ButtonHoverBackground(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.TitleSettings)instance;
            that.ButtonHoverBackground = (global::Windows.UI.Xaml.Media.SolidColorBrush)Value;
        }
        private object get_114_TitleSettings_ButtonBackground(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.TitleSettings)instance;
            return that.ButtonBackground;
        }
        private void set_114_TitleSettings_ButtonBackground(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.TitleSettings)instance;
            that.ButtonBackground = (global::Windows.UI.Xaml.Media.SolidColorBrush)Value;
        }
        private object get_115_TitleSettings_ButtonForeground(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.TitleSettings)instance;
            return that.ButtonForeground;
        }
        private void set_115_TitleSettings_ButtonForeground(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.TitleSettings)instance;
            that.ButtonForeground = (global::Windows.UI.Xaml.Media.SolidColorBrush)Value;
        }
        private object get_116_TitleSettings_InactiveForeground(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.TitleSettings)instance;
            return that.InactiveForeground;
        }
        private void set_116_TitleSettings_InactiveForeground(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.TitleSettings)instance;
            that.InactiveForeground = (global::Windows.UI.Xaml.Media.SolidColorBrush)Value;
        }
        private object get_117_TitleSettings_InactiveBackground(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.TitleSettings)instance;
            return that.InactiveBackground;
        }
        private void set_117_TitleSettings_InactiveBackground(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.TitleSettings)instance;
            that.InactiveBackground = (global::Windows.UI.Xaml.Media.SolidColorBrush)Value;
        }
        private object get_118_TitleSettings_Foreground(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.TitleSettings)instance;
            return that.Foreground;
        }
        private void set_118_TitleSettings_Foreground(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.TitleSettings)instance;
            that.Foreground = (global::Windows.UI.Xaml.Media.SolidColorBrush)Value;
        }
        private object get_119_TitleSettings_Background(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.TitleSettings)instance;
            return that.Background;
        }
        private void set_119_TitleSettings_Background(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.TitleSettings)instance;
            that.Background = (global::Windows.UI.Xaml.Media.SolidColorBrush)Value;
        }
        private object get_120_PdfOverlayBarLocation_Location(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfOverlayBarLocation)instance;
            return that.Location;
        }
        private void set_120_PdfOverlayBarLocation_Location(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfOverlayBarLocation)instance;
            that.Location = (global::Windows.UI.Xaml.Controls.Primitives.EdgeTransitionLocation)Value;
        }
        private object get_121_PdfOverlayBarLocation_Width(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfOverlayBarLocation)instance;
            return that.Width;
        }
        private void set_121_PdfOverlayBarLocation_Width(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfOverlayBarLocation)instance;
            that.Width = (global::System.Double)Value;
        }
        private object get_122_PdfOverlayBarLocation_Height(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfOverlayBarLocation)instance;
            return that.Height;
        }
        private void set_122_PdfOverlayBarLocation_Height(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfOverlayBarLocation)instance;
            that.Height = (global::System.Double)Value;
        }
        private object get_123_SimpleSettingsBarOverlaySettings_ShowRightSideDefaultItems(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.SimpleSettingsBarOverlaySettings)instance;
            return that.ShowRightSideDefaultItems;
        }
        private void set_123_SimpleSettingsBarOverlaySettings_ShowRightSideDefaultItems(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.SimpleSettingsBarOverlaySettings)instance;
            that.ShowRightSideDefaultItems = (global::System.Boolean)Value;
        }
        private object get_124_SimpleSettingsBarOverlaySettings_ShowLeftSideDefaultItems(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.SimpleSettingsBarOverlaySettings)instance;
            return that.ShowLeftSideDefaultItems;
        }
        private void set_124_SimpleSettingsBarOverlaySettings_ShowLeftSideDefaultItems(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.SimpleSettingsBarOverlaySettings)instance;
            that.ShowLeftSideDefaultItems = (global::System.Boolean)Value;
        }
        private object get_125_SimpleSettingsBarOverlaySettings_FlyoutItemTemplateSelector(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.SimpleSettingsBarOverlaySettings)instance;
            return that.FlyoutItemTemplateSelector;
        }
        private void set_125_SimpleSettingsBarOverlaySettings_FlyoutItemTemplateSelector(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.SimpleSettingsBarOverlaySettings)instance;
            that.FlyoutItemTemplateSelector = (global::Windows.UI.Xaml.Controls.DataTemplateSelector)Value;
        }
        private object get_126_SimpleSettingsBarOverlaySettings_LeftSideItemsSource(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.SimpleSettingsBarOverlaySettings)instance;
            return that.LeftSideItemsSource;
        }
        private void set_126_SimpleSettingsBarOverlaySettings_LeftSideItemsSource(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.SimpleSettingsBarOverlaySettings)instance;
            that.LeftSideItemsSource = (global::System.Object)Value;
        }
        private object get_127_SimpleSettingsBarOverlaySettings_RightSideItemsSource(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.SimpleSettingsBarOverlaySettings)instance;
            return that.RightSideItemsSource;
        }
        private void set_127_SimpleSettingsBarOverlaySettings_RightSideItemsSource(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.SimpleSettingsBarOverlaySettings)instance;
            that.RightSideItemsSource = (global::System.Object)Value;
        }
        private object get_128_SimpleSettingsBarOverlaySettings_ActualFlyoutItemTemplateSelector(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.SimpleSettingsBarOverlaySettings)instance;
            return that.ActualFlyoutItemTemplateSelector;
        }
        private object get_129_SimpleSettingsBarOverlaySettings_LeftSideItems(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.SimpleSettingsBarOverlaySettings)instance;
            return that.LeftSideItems;
        }
        private object get_130_SimpleSettingsBarOverlaySettings_RightSideItems(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.SimpleSettingsBarOverlaySettings)instance;
            return that.RightSideItems;
        }
        private object get_131_PdfOverlaySettingsBase_AttachmentsPanelLocation(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfOverlaySettingsBase)instance;
            return that.AttachmentsPanelLocation;
        }
        private void set_131_PdfOverlaySettingsBase_AttachmentsPanelLocation(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfOverlaySettingsBase)instance;
            that.AttachmentsPanelLocation = (global::DevExpress.UI.Xaml.Controls.IPdfOverlayBarLocation)Value;
        }
        private object get_132_PdfOverlaySettingsBase_BookmarksPanelLocation(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfOverlaySettingsBase)instance;
            return that.BookmarksPanelLocation;
        }
        private void set_132_PdfOverlaySettingsBase_BookmarksPanelLocation(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfOverlaySettingsBase)instance;
            that.BookmarksPanelLocation = (global::DevExpress.UI.Xaml.Controls.IPdfOverlayBarLocation)Value;
        }
        private object get_133_PdfOverlaySettingsBase_FindPanelLocation(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfOverlaySettingsBase)instance;
            return that.FindPanelLocation;
        }
        private void set_133_PdfOverlaySettingsBase_FindPanelLocation(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfOverlaySettingsBase)instance;
            that.FindPanelLocation = (global::DevExpress.UI.Xaml.Controls.IPdfOverlayBarLocation)Value;
        }
        private object get_134_PdfOverlaySettingsBase_SettingsBarLocation(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfOverlaySettingsBase)instance;
            return that.SettingsBarLocation;
        }
        private void set_134_PdfOverlaySettingsBase_SettingsBarLocation(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfOverlaySettingsBase)instance;
            that.SettingsBarLocation = (global::DevExpress.UI.Xaml.Controls.IPdfOverlayBarLocation)Value;
        }
        private object get_135_PdfOverlaySettingsBase_IsSettingsBarVisible(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfOverlaySettingsBase)instance;
            return that.IsSettingsBarVisible;
        }
        private void set_135_PdfOverlaySettingsBase_IsSettingsBarVisible(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfOverlaySettingsBase)instance;
            that.IsSettingsBarVisible = (global::System.Boolean)Value;
        }
        private object get_136_PdfOverlaySettingsBase_IsZoomBarVisible(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfOverlaySettingsBase)instance;
            return that.IsZoomBarVisible;
        }
        private void set_136_PdfOverlaySettingsBase_IsZoomBarVisible(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfOverlaySettingsBase)instance;
            that.IsZoomBarVisible = (global::System.Boolean)Value;
        }
        private object get_137_PdfOverlaySettingsBase_IsPageBarVisible(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfOverlaySettingsBase)instance;
            return that.IsPageBarVisible;
        }
        private void set_137_PdfOverlaySettingsBase_IsPageBarVisible(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfOverlaySettingsBase)instance;
            that.IsPageBarVisible = (global::System.Boolean)Value;
        }
        private object get_138_PdfOverlaySettingsBase_IsBookmarksPanelVisible(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfOverlaySettingsBase)instance;
            return that.IsBookmarksPanelVisible;
        }
        private void set_138_PdfOverlaySettingsBase_IsBookmarksPanelVisible(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfOverlaySettingsBase)instance;
            that.IsBookmarksPanelVisible = (global::System.Boolean)Value;
        }
        private object get_139_PdfOverlaySettingsBase_IsAttachmentsPanelVisible(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfOverlaySettingsBase)instance;
            return that.IsAttachmentsPanelVisible;
        }
        private void set_139_PdfOverlaySettingsBase_IsAttachmentsPanelVisible(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfOverlaySettingsBase)instance;
            that.IsAttachmentsPanelVisible = (global::System.Boolean)Value;
        }
        private object get_140_PdfOverlaySettingsBase_IsFindPanelVisible(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfOverlaySettingsBase)instance;
            return that.IsFindPanelVisible;
        }
        private void set_140_PdfOverlaySettingsBase_IsFindPanelVisible(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfOverlaySettingsBase)instance;
            that.IsFindPanelVisible = (global::System.Boolean)Value;
        }
        private object get_141_PdfOverlaySettingsBase_HideZoomBarDelay(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfOverlaySettingsBase)instance;
            return that.HideZoomBarDelay;
        }
        private void set_141_PdfOverlaySettingsBase_HideZoomBarDelay(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfOverlaySettingsBase)instance;
            that.HideZoomBarDelay = (global::System.TimeSpan)Value;
        }
        private object get_142_PdfOverlaySettingsBase_HidePageBarDelay(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfOverlaySettingsBase)instance;
            return that.HidePageBarDelay;
        }
        private void set_142_PdfOverlaySettingsBase_HidePageBarDelay(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfOverlaySettingsBase)instance;
            that.HidePageBarDelay = (global::System.TimeSpan)Value;
        }
        private object get_143_PdfOverlaySettingsBase_ShowPrintDocumentButton(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfOverlaySettingsBase)instance;
            return that.ShowPrintDocumentButton;
        }
        private void set_143_PdfOverlaySettingsBase_ShowPrintDocumentButton(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfOverlaySettingsBase)instance;
            that.ShowPrintDocumentButton = (global::System.Boolean)Value;
        }
        private object get_144_PdfOverlaySettingsBase_ShowOpenDocumentButton(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfOverlaySettingsBase)instance;
            return that.ShowOpenDocumentButton;
        }
        private void set_144_PdfOverlaySettingsBase_ShowOpenDocumentButton(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfOverlaySettingsBase)instance;
            that.ShowOpenDocumentButton = (global::System.Boolean)Value;
        }
        private object get_145_PdfOverlaySettingsBase_ShowSaveDocumentButton(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfOverlaySettingsBase)instance;
            return that.ShowSaveDocumentButton;
        }
        private void set_145_PdfOverlaySettingsBase_ShowSaveDocumentButton(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfOverlaySettingsBase)instance;
            that.ShowSaveDocumentButton = (global::System.Boolean)Value;
        }
        private object get_146_PdfOverlaySettingsBase_ShowBookmarksButton(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfOverlaySettingsBase)instance;
            return that.ShowBookmarksButton;
        }
        private void set_146_PdfOverlaySettingsBase_ShowBookmarksButton(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfOverlaySettingsBase)instance;
            that.ShowBookmarksButton = (global::System.Boolean)Value;
        }
        private object get_147_PdfOverlaySettingsBase_ShowAttachmentsButton(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfOverlaySettingsBase)instance;
            return that.ShowAttachmentsButton;
        }
        private void set_147_PdfOverlaySettingsBase_ShowAttachmentsButton(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfOverlaySettingsBase)instance;
            that.ShowAttachmentsButton = (global::System.Boolean)Value;
        }
#pragma warning disable 0618  //   Warning on Deprecated usage
        private object get_148_PdfViewerControl_ActualIsSettingsBarVisible(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfViewerControl)instance;
            return that.ActualIsSettingsBarVisible;
        }
#pragma warning restore 0618
#pragma warning disable 0618  //   Warning on Deprecated usage
        private object get_149_PdfViewerControl_ActualIsPageBarVisible(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfViewerControl)instance;
            return that.ActualIsPageBarVisible;
        }
#pragma warning restore 0618
#pragma warning disable 0618  //   Warning on Deprecated usage
        private object get_150_PdfViewerControl_ActualIsZoomBarVisible(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfViewerControl)instance;
            return that.ActualIsZoomBarVisible;
        }
#pragma warning restore 0618
#pragma warning disable 0618  //   Warning on Deprecated usage
        private object get_151_PdfViewerControl_ActualIsFindTextPanelVisible(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfViewerControl)instance;
            return that.ActualIsFindTextPanelVisible;
        }
#pragma warning restore 0618
#pragma warning disable 0618  //   Warning on Deprecated usage
        private object get_152_PdfViewerControl_ShowPrintDocumentButton(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfViewerControl)instance;
            return that.ShowPrintDocumentButton;
        }
        private void set_152_PdfViewerControl_ShowPrintDocumentButton(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfViewerControl)instance;
            that.ShowPrintDocumentButton = (global::System.Boolean)Value;
        }
#pragma warning restore 0618
#pragma warning disable 0618  //   Warning on Deprecated usage
        private object get_153_PdfViewerControl_ShowOpenDocumentButton(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfViewerControl)instance;
            return that.ShowOpenDocumentButton;
        }
        private void set_153_PdfViewerControl_ShowOpenDocumentButton(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfViewerControl)instance;
            that.ShowOpenDocumentButton = (global::System.Boolean)Value;
        }
#pragma warning restore 0618
#pragma warning disable 0618  //   Warning on Deprecated usage
        private object get_154_PdfViewerControl_ShowSaveDocumentButton(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfViewerControl)instance;
            return that.ShowSaveDocumentButton;
        }
        private void set_154_PdfViewerControl_ShowSaveDocumentButton(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfViewerControl)instance;
            that.ShowSaveDocumentButton = (global::System.Boolean)Value;
        }
#pragma warning restore 0618
#pragma warning disable 0618  //   Warning on Deprecated usage
        private object get_155_PdfViewerControl_ShowBookmarksButton(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfViewerControl)instance;
            return that.ShowBookmarksButton;
        }
        private void set_155_PdfViewerControl_ShowBookmarksButton(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfViewerControl)instance;
            that.ShowBookmarksButton = (global::System.Boolean)Value;
        }
#pragma warning restore 0618
#pragma warning disable 0618  //   Warning on Deprecated usage
        private object get_156_PdfViewerControl_IsSettingsBarVisible(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfViewerControl)instance;
            return that.IsSettingsBarVisible;
        }
        private void set_156_PdfViewerControl_IsSettingsBarVisible(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfViewerControl)instance;
            that.IsSettingsBarVisible = (global::System.Boolean)Value;
        }
#pragma warning restore 0618
#pragma warning disable 0618  //   Warning on Deprecated usage
        private object get_157_PdfViewerControl_IsZoomBarVisible(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfViewerControl)instance;
            return that.IsZoomBarVisible;
        }
        private void set_157_PdfViewerControl_IsZoomBarVisible(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfViewerControl)instance;
            that.IsZoomBarVisible = (global::System.Boolean)Value;
        }
#pragma warning restore 0618
#pragma warning disable 0618  //   Warning on Deprecated usage
        private object get_158_PdfViewerControl_IsPageBarVisible(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfViewerControl)instance;
            return that.IsPageBarVisible;
        }
        private void set_158_PdfViewerControl_IsPageBarVisible(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfViewerControl)instance;
            that.IsPageBarVisible = (global::System.Boolean)Value;
        }
#pragma warning restore 0618
#pragma warning disable 0618  //   Warning on Deprecated usage
        private object get_159_PdfViewerControl_IsFindTextPanelVisible(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfViewerControl)instance;
            return that.IsFindTextPanelVisible;
        }
        private void set_159_PdfViewerControl_IsFindTextPanelVisible(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfViewerControl)instance;
            that.IsFindTextPanelVisible = (global::System.Boolean)Value;
        }
#pragma warning restore 0618
#pragma warning disable 0618  //   Warning on Deprecated usage
        private object get_160_PdfViewerControl_ShowRightSideDefaultSettingsBarItems(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfViewerControl)instance;
            return that.ShowRightSideDefaultSettingsBarItems;
        }
        private void set_160_PdfViewerControl_ShowRightSideDefaultSettingsBarItems(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfViewerControl)instance;
            that.ShowRightSideDefaultSettingsBarItems = (global::System.Boolean)Value;
        }
#pragma warning restore 0618
#pragma warning disable 0618  //   Warning on Deprecated usage
        private object get_161_PdfViewerControl_ShowLeftSideDefaultSettingsBarItems(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfViewerControl)instance;
            return that.ShowLeftSideDefaultSettingsBarItems;
        }
        private void set_161_PdfViewerControl_ShowLeftSideDefaultSettingsBarItems(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfViewerControl)instance;
            that.ShowLeftSideDefaultSettingsBarItems = (global::System.Boolean)Value;
        }
#pragma warning restore 0618
#pragma warning disable 0618  //   Warning on Deprecated usage
        private object get_162_PdfViewerControl_SettingsBarFlyoutItemTemplateSelector(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfViewerControl)instance;
            return that.SettingsBarFlyoutItemTemplateSelector;
        }
        private void set_162_PdfViewerControl_SettingsBarFlyoutItemTemplateSelector(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfViewerControl)instance;
            that.SettingsBarFlyoutItemTemplateSelector = (global::Windows.UI.Xaml.Controls.DataTemplateSelector)Value;
        }
#pragma warning restore 0618
#pragma warning disable 0618  //   Warning on Deprecated usage
        private object get_163_PdfViewerControl_LeftSideSettingsBarItemsSource(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfViewerControl)instance;
            return that.LeftSideSettingsBarItemsSource;
        }
        private void set_163_PdfViewerControl_LeftSideSettingsBarItemsSource(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfViewerControl)instance;
            that.LeftSideSettingsBarItemsSource = (global::System.Object)Value;
        }
#pragma warning restore 0618
#pragma warning disable 0618  //   Warning on Deprecated usage
        private object get_164_PdfViewerControl_RightSideSettingsBarItemsSource(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfViewerControl)instance;
            return that.RightSideSettingsBarItemsSource;
        }
        private void set_164_PdfViewerControl_RightSideSettingsBarItemsSource(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfViewerControl)instance;
            that.RightSideSettingsBarItemsSource = (global::System.Object)Value;
        }
#pragma warning restore 0618
        private object get_165_PdfViewerControl_DocumentSource(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfViewerControl)instance;
            return that.DocumentSource;
        }
        private void set_165_PdfViewerControl_DocumentSource(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfViewerControl)instance;
            that.DocumentSource = (global::System.Object)Value;
        }
        private object get_166_PdfViewerControl_DocumentUri(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfViewerControl)instance;
            return that.DocumentUri;
        }
        private void set_166_PdfViewerControl_DocumentUri(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfViewerControl)instance;
            that.DocumentUri = (global::System.Uri)Value;
        }
        private object get_167_PdfViewerControl_PdfViewMode(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfViewerControl)instance;
            return that.PdfViewMode;
        }
        private void set_167_PdfViewerControl_PdfViewMode(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfViewerControl)instance;
            that.PdfViewMode = (global::DevExpress.UI.Xaml.Controls.PdfViewMode)Value;
        }
        private object get_168_PdfViewerControl_PrintDocumentSource(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfViewerControl)instance;
            return that.PrintDocumentSource;
        }
        private void set_168_PdfViewerControl_PrintDocumentSource(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfViewerControl)instance;
            that.PrintDocumentSource = (global::Windows.Graphics.Printing.IPrintDocumentSource)Value;
        }
        private object get_169_PdfViewerControl_PageSpacing(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfViewerControl)instance;
            return that.PageSpacing;
        }
        private void set_169_PdfViewerControl_PageSpacing(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfViewerControl)instance;
            that.PageSpacing = (global::System.Int32)Value;
        }
        private object get_170_PdfViewerControl_PageMargin(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfViewerControl)instance;
            return that.PageMargin;
        }
        private void set_170_PdfViewerControl_PageMargin(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfViewerControl)instance;
            that.PageMargin = (global::Windows.UI.Xaml.Thickness)Value;
        }
        private object get_171_PdfViewerControl_ContentMargin(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfViewerControl)instance;
            return that.ContentMargin;
        }
        private void set_171_PdfViewerControl_ContentMargin(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfViewerControl)instance;
            that.ContentMargin = (global::Windows.UI.Xaml.Thickness)Value;
        }
        private object get_172_PdfViewerControl_ZoomMode(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfViewerControl)instance;
            return that.ZoomMode;
        }
        private void set_172_PdfViewerControl_ZoomMode(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfViewerControl)instance;
            that.ZoomMode = (global::DevExpress.UI.Xaml.Controls.PdfZoomMode)Value;
        }
        private object get_173_PdfViewerControl_CurrentPageIndex(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfViewerControl)instance;
            return that.CurrentPageIndex;
        }
        private void set_173_PdfViewerControl_CurrentPageIndex(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfViewerControl)instance;
            that.CurrentPageIndex = (global::System.Int32)Value;
        }
        private object get_174_PdfViewerControl_CurrentZoomFactor(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfViewerControl)instance;
            return that.CurrentZoomFactor;
        }
        private void set_174_PdfViewerControl_CurrentZoomFactor(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfViewerControl)instance;
            that.CurrentZoomFactor = (global::System.Single)Value;
        }
        private object get_175_PdfViewerControl_DefaultZoomFactor(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfViewerControl)instance;
            return that.DefaultZoomFactor;
        }
        private void set_175_PdfViewerControl_DefaultZoomFactor(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfViewerControl)instance;
            that.DefaultZoomFactor = (global::System.Double)Value;
        }
        private object get_176_PdfViewerControl_MaxZoomFactor(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfViewerControl)instance;
            return that.MaxZoomFactor;
        }
        private void set_176_PdfViewerControl_MaxZoomFactor(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfViewerControl)instance;
            that.MaxZoomFactor = (global::System.Double)Value;
        }
        private object get_177_PdfViewerControl_CurrentPageNumber(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfViewerControl)instance;
            return that.CurrentPageNumber;
        }
        private void set_177_PdfViewerControl_CurrentPageNumber(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfViewerControl)instance;
            that.CurrentPageNumber = (global::System.Int32)Value;
        }
        private object get_178_PdfViewerControl_ActualIsLoading(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfViewerControl)instance;
            return that.ActualIsLoading;
        }
        private object get_179_PdfViewerControl_IsDataLoading(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfViewerControl)instance;
            return that.IsDataLoading;
        }
        private void set_179_PdfViewerControl_IsDataLoading(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfViewerControl)instance;
            that.IsDataLoading = (global::System.Boolean)Value;
        }
        private object get_180_PdfViewerControl_PageCount(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfViewerControl)instance;
            return that.PageCount;
        }
        private object get_181_PdfViewerControl_Document(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfViewerControl)instance;
            return that.Document;
        }
        private object get_182_PdfViewerControl_CornerRadius(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfViewerControl)instance;
            return that.CornerRadius;
        }
        private void set_182_PdfViewerControl_CornerRadius(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfViewerControl)instance;
            that.CornerRadius = (global::Windows.UI.Xaml.CornerRadius)Value;
        }
        private object get_183_PdfViewerControl_PrintDocumentCommand(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfViewerControl)instance;
            return that.PrintDocumentCommand;
        }
        private void set_183_PdfViewerControl_PrintDocumentCommand(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfViewerControl)instance;
            that.PrintDocumentCommand = (global::System.Windows.Input.ICommand)Value;
        }
        private object get_184_PdfViewerControl_ViewerError(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfViewerControl)instance;
            return that.ViewerError;
        }
        private void set_184_PdfViewerControl_ViewerError(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfViewerControl)instance;
            that.ViewerError = (global::DevExpress.UI.Xaml.Controls.PdfViewerErrorWrapper)Value;
        }
        private object get_185_PdfViewerControl_DocumentPrintingQuality(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfViewerControl)instance;
            return that.DocumentPrintingQuality;
        }
        private void set_185_PdfViewerControl_DocumentPrintingQuality(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfViewerControl)instance;
            that.DocumentPrintingQuality = (global::System.Double)Value;
        }
        private object get_186_PdfViewerControl_ThumbnailHeight(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfViewerControl)instance;
            return that.ThumbnailHeight;
        }
        private void set_186_PdfViewerControl_ThumbnailHeight(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfViewerControl)instance;
            that.ThumbnailHeight = (global::System.Double)Value;
        }
        private object get_187_PdfViewerControl_PdfDocumentLoadingPolicy(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfViewerControl)instance;
            return that.PdfDocumentLoadingPolicy;
        }
        private void set_187_PdfViewerControl_PdfDocumentLoadingPolicy(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfViewerControl)instance;
            that.PdfDocumentLoadingPolicy = (global::DevExpress.UI.Xaml.Controls.PdfDocumentLoadingPolicy)Value;
        }
        private object get_188_PdfViewerControl_OverlaySettings(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfViewerControl)instance;
            return that.OverlaySettings;
        }
        private void set_188_PdfViewerControl_OverlaySettings(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfViewerControl)instance;
            that.OverlaySettings = (global::DevExpress.UI.Xaml.Controls.PdfOverlaySettingsBase)Value;
        }
        private object get_189_PdfViewerControl_OverlaySettingsTemplate(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfViewerControl)instance;
            return that.OverlaySettingsTemplate;
        }
        private void set_189_PdfViewerControl_OverlaySettingsTemplate(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfViewerControl)instance;
            that.OverlaySettingsTemplate = (global::Windows.UI.Xaml.DataTemplate)Value;
        }
        private object get_190_PdfViewerControl_ActualOverlaySettings(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfViewerControl)instance;
            return that.ActualOverlaySettings;
        }
        private object get_191_PdfViewerControl_ContainerActualWidth(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfViewerControl)instance;
            return that.ContainerActualWidth;
        }
        private object get_192_PdfViewerControl_ContainerActualHeight(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfViewerControl)instance;
            return that.ContainerActualHeight;
        }
        private object get_193_PdfViewerControl_ThumbnailSpacing(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfViewerControl)instance;
            return that.ThumbnailSpacing;
        }
        private void set_193_PdfViewerControl_ThumbnailSpacing(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfViewerControl)instance;
            that.ThumbnailSpacing = (global::System.Double)Value;
        }
#pragma warning disable 0618  //   Warning on Deprecated usage
        private object get_194_PdfViewerControl_IsInitialized(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfViewerControl)instance;
            return that.IsInitialized;
        }
#pragma warning restore 0618
        private object get_195_PdfViewerControl_IsZoomedOutView(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfViewerControl)instance;
            return that.IsZoomedOutView;
        }
        private object get_196_PdfViewerControl_ZoomCommand(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfViewerControl)instance;
            return that.ZoomCommand;
        }
        private object get_197_PdfViewerControl_SetViewModeCommand(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfViewerControl)instance;
            return that.SetViewModeCommand;
        }
        private object get_198_PdfViewerControl_FitSizeCommand(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfViewerControl)instance;
            return that.FitSizeCommand;
        }
        private object get_199_PdfViewerControl_SetZoomModeCommand(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfViewerControl)instance;
            return that.SetZoomModeCommand;
        }
        private object get_200_PdfViewerControl_OpenFileCommand(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfViewerControl)instance;
            return that.OpenFileCommand;
        }
        private object get_201_PdfViewerControl_SaveAsCommand(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfViewerControl)instance;
            return that.SaveAsCommand;
        }
        private object get_202_PdfViewerControl_LoadDocumentCommand(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfViewerControl)instance;
            return that.LoadDocumentCommand;
        }
        private object get_203_PdfViewerControl_CloseDocumentCommand(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfViewerControl)instance;
            return that.CloseDocumentCommand;
        }
        private object get_204_PdfViewerControl_NextPageCommand(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfViewerControl)instance;
            return that.NextPageCommand;
        }
        private object get_205_PdfViewerControl_PreviousPageCommand(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfViewerControl)instance;
            return that.PreviousPageCommand;
        }
        private object get_206_PdfViewerControl_SetPageNumberCommand(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfViewerControl)instance;
            return that.SetPageNumberCommand;
        }
        private object get_207_PdfViewerControl_SetZoomFactorCommand(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfViewerControl)instance;
            return that.SetZoomFactorCommand;
        }
        private object get_208_PdfViewerControl_FindTextCommand(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfViewerControl)instance;
            return that.FindTextCommand;
        }
        private object get_209_PdfViewerControl_FindNextTextCommand(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfViewerControl)instance;
            return that.FindNextTextCommand;
        }
        private object get_210_PdfViewerControl_FindPreviousTextCommand(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfViewerControl)instance;
            return that.FindPreviousTextCommand;
        }
        private object get_211_PdfViewerControl_ClearFindResultsCommand(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfViewerControl)instance;
            return that.ClearFindResultsCommand;
        }
#pragma warning disable 0618  //   Warning on Deprecated usage
        private object get_212_PdfViewerControl_ShowFindPanelCommand(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfViewerControl)instance;
            return that.ShowFindPanelCommand;
        }
#pragma warning restore 0618
#pragma warning disable 0618  //   Warning on Deprecated usage
        private object get_213_PdfViewerControl_CloseFindPanelAndClearFindResultsCommand(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfViewerControl)instance;
            return that.CloseFindPanelAndClearFindResultsCommand;
        }
#pragma warning restore 0618
        private object get_214_PdfViewerControl_ToggleOverlayCommand(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfViewerControl)instance;
            return that.ToggleOverlayCommand;
        }
        private object get_215_PdfViewerControl_OpenAttachmentCommand(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfViewerControl)instance;
            return that.OpenAttachmentCommand;
        }
        private object get_216_PdfViewerControl_SaveAttachmentCommand(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfViewerControl)instance;
            return that.SaveAttachmentCommand;
        }
        private object get_217_PdfViewerControl_NavigateToOutlineCommand(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.PdfViewerControl)instance;
            return that.NavigateToOutlineCommand;
        }
        private object get_218_ControlEx_ActualSize(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Internal.ControlEx)instance;
            return that.ActualSize;
        }
        private object get_219_ControlEx_IsLoaded(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Internal.ControlEx)instance;
            return that.IsLoaded;
        }
        private object get_220_RadialContextMenuCommandBase_Content(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.RadialContextMenuCommandBase)instance;
            return that.Content;
        }
        private void set_220_RadialContextMenuCommandBase_Content(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.RadialContextMenuCommandBase)instance;
            that.Content = (global::System.Object)Value;
        }
        private object get_221_RadialContextMenuCommandBase_ActualIndex(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.RadialContextMenuCommandBase)instance;
            return that.ActualIndex;
        }
        private void set_221_RadialContextMenuCommandBase_ActualIndex(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.RadialContextMenuCommandBase)instance;
            that.ActualIndex = (global::System.Int32)Value;
        }
        private object get_222_RadialContextMenuCommandBase_Index(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.RadialContextMenuCommandBase)instance;
            return that.Index;
        }
        private void set_222_RadialContextMenuCommandBase_Index(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.RadialContextMenuCommandBase)instance;
            that.Index = (global::System.Int32)Value;
        }
        private object get_223_RadialContextMenuCommandBase_Location(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.RadialContextMenuCommandBase)instance;
            return that.Location;
        }
        private object get_224_RadialContextMenuCommandBase_ContentTemplate(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.RadialContextMenuCommandBase)instance;
            return that.ContentTemplate;
        }
        private void set_224_RadialContextMenuCommandBase_ContentTemplate(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.RadialContextMenuCommandBase)instance;
            that.ContentTemplate = (global::Windows.UI.Xaml.DataTemplate)Value;
        }
        private object get_225_RadialContextMenuCommandBase_ActualContentTemplate(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.RadialContextMenuCommandBase)instance;
            return that.ActualContentTemplate;
        }
        private object get_226_RadialContextMenuCommandBase_ViewInfo(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.RadialContextMenuCommandBase)instance;
            return that.ViewInfo;
        }
        private object get_227_RadialContextMenuCommandBase_Uri(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.RadialContextMenuCommandBase)instance;
            return that.Uri;
        }
        private void set_227_RadialContextMenuCommandBase_Uri(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.RadialContextMenuCommandBase)instance;
            that.Uri = (global::System.Uri)Value;
        }
        private object get_228_RadialContextMenuCommandBase_Label(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.RadialContextMenuCommandBase)instance;
            return that.Label;
        }
        private void set_228_RadialContextMenuCommandBase_Label(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.RadialContextMenuCommandBase)instance;
            that.Label = (global::System.String)Value;
        }
        private object get_229_DXControl_IsFocused(object instance)
        {
            var that = (global::DevExpress.Core.Native.DXControl)instance;
            return that.IsFocused;
        }
        private object get_230_DXControl_IsKeyboardFocusWithin(object instance)
        {
            var that = (global::DevExpress.Core.Native.DXControl)instance;
            return that.IsKeyboardFocusWithin;
        }
        private object get_231_DXControl_IsLoaded(object instance)
        {
            var that = (global::DevExpress.Core.Native.DXControl)instance;
            return that.IsLoaded;
        }
        private object get_232_DXControl_IsMouseOver(object instance)
        {
            var that = (global::DevExpress.Core.Native.DXControl)instance;
            return that.IsMouseOver;
        }
        private object get_233_RadialMenuControlBase_DefaultActionCommand(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.RadialMenuControlBase)instance;
            return that.DefaultActionCommand;
        }
        private object get_234_RadialMenuControlBase_NavigateCommand(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.RadialMenuControlBase)instance;
            return that.NavigateCommand;
        }
        private object get_235_PdfDocumentStateBase_Document(object instance)
        {
            var that = (global::DevExpress.Pdf.Native.PdfDocumentStateBase)instance;
            return that.Document;
        }
        private object get_236_PdfDocumentStateBase_FontStorage(object instance)
        {
            var that = (global::DevExpress.Pdf.Native.PdfDocumentStateBase)instance;
            return that.FontStorage;
        }
        private object get_237_PdfDocumentStateBase_ImageDataStorage(object instance)
        {
            var that = (global::DevExpress.Pdf.Native.PdfDocumentStateBase)instance;
            return that.ImageDataStorage;
        }
        private object get_238_PdfDocumentStateBase_SelectionState(object instance)
        {
            var that = (global::DevExpress.Pdf.Native.PdfDocumentStateBase)instance;
            return that.SelectionState;
        }
        private object get_239_PdfDocumentStateBase_Outlines(object instance)
        {
            var that = (global::DevExpress.Pdf.Native.PdfDocumentStateBase)instance;
            return that.Outlines;
        }
        private object get_240_PdfOutlineTreeListItem_Id(object instance)
        {
            var that = (global::DevExpress.Pdf.Native.PdfOutlineTreeListItem)instance;
            return that.Id;
        }
        private object get_241_PdfOutlineTreeListItem_ParentId(object instance)
        {
            var that = (global::DevExpress.Pdf.Native.PdfOutlineTreeListItem)instance;
            return that.ParentId;
        }
        private object get_242_PdfOutlineTreeListItem_Title(object instance)
        {
            var that = (global::DevExpress.Pdf.Native.PdfOutlineTreeListItem)instance;
            return that.Title;
        }
        private object get_243_PdfOutlineTreeListItem_Italic(object instance)
        {
            var that = (global::DevExpress.Pdf.Native.PdfOutlineTreeListItem)instance;
            return that.Italic;
        }
        private object get_244_PdfOutlineTreeListItem_Bold(object instance)
        {
            var that = (global::DevExpress.Pdf.Native.PdfOutlineTreeListItem)instance;
            return that.Bold;
        }
        private object get_245_PdfOutlineTreeListItem_ForeColor(object instance)
        {
            var that = (global::DevExpress.Pdf.Native.PdfOutlineTreeListItem)instance;
            return that.ForeColor;
        }
        private object get_246_PdfOutlineTreeListItem_HasChildNodes(object instance)
        {
            var that = (global::DevExpress.Pdf.Native.PdfOutlineTreeListItem)instance;
            return that.HasChildNodes;
        }
        private object get_247_PdfOutlineTreeListItem_UseForeColor(object instance)
        {
            var that = (global::DevExpress.Pdf.Native.PdfOutlineTreeListItem)instance;
            return that.UseForeColor;
        }
        private void set_247_PdfOutlineTreeListItem_UseForeColor(object instance, object Value)
        {
            var that = (global::DevExpress.Pdf.Native.PdfOutlineTreeListItem)instance;
            that.UseForeColor = (global::System.Boolean)Value;
        }
        private object get_248_PdfOutlineTreeListItem_Expanded(object instance)
        {
            var that = (global::DevExpress.Pdf.Native.PdfOutlineTreeListItem)instance;
            return that.Expanded;
        }
        private void set_248_PdfOutlineTreeListItem_Expanded(object instance, object Value)
        {
            var that = (global::DevExpress.Pdf.Native.PdfOutlineTreeListItem)instance;
            that.Expanded = (global::System.Boolean)Value;
        }
        private object get_249_PdfDocumentStateBase_FileAttachments(object instance)
        {
            var that = (global::DevExpress.Pdf.Native.PdfDocumentStateBase)instance;
            return that.FileAttachments;
        }
        private object get_250_PdfFileAttachmentListItem_FileAttachment(object instance)
        {
            var that = (global::DevExpress.Pdf.Native.PdfFileAttachmentListItem)instance;
            return that.FileAttachment;
        }
        private object get_251_PdfFileAttachmentListItem_Icon(object instance)
        {
            var that = (global::DevExpress.Pdf.Native.PdfFileAttachmentListItem)instance;
            return that.Icon;
        }
        private object get_252_PdfFileAttachmentListItem_Size(object instance)
        {
            var that = (global::DevExpress.Pdf.Native.PdfFileAttachmentListItem)instance;
            return that.Size;
        }
        private object get_253_PdfFileAttachmentListItem_Hint(object instance)
        {
            var that = (global::DevExpress.Pdf.Native.PdfFileAttachmentListItem)instance;
            return that.Hint;
        }
        private object get_254_PdfFileAttachmentListItem_FileName(object instance)
        {
            var that = (global::DevExpress.Pdf.Native.PdfFileAttachmentListItem)instance;
            return that.FileName;
        }
        private object get_255_PdfFileAttachmentListItem_ModificationDate(object instance)
        {
            var that = (global::DevExpress.Pdf.Native.PdfFileAttachmentListItem)instance;
            return that.ModificationDate;
        }
        private object get_256_PdfFileAttachmentListItem_Description(object instance)
        {
            var that = (global::DevExpress.Pdf.Native.PdfFileAttachmentListItem)instance;
            return that.Description;
        }
        private object get_257_PdfDocumentStateBase_RotationAngle(object instance)
        {
            var that = (global::DevExpress.Pdf.Native.PdfDocumentStateBase)instance;
            return that.RotationAngle;
        }
        private void set_257_PdfDocumentStateBase_RotationAngle(object instance, object Value)
        {
            var that = (global::DevExpress.Pdf.Native.PdfDocumentStateBase)instance;
            that.RotationAngle = (global::System.Int32)Value;
        }
        private object get_258_PdfDocumentStateBase_HighlightFormFields(object instance)
        {
            var that = (global::DevExpress.Pdf.Native.PdfDocumentStateBase)instance;
            return that.HighlightFormFields;
        }
        private void set_258_PdfDocumentStateBase_HighlightFormFields(object instance, object Value)
        {
            var that = (global::DevExpress.Pdf.Native.PdfDocumentStateBase)instance;
            that.HighlightFormFields = (global::System.Boolean)Value;
        }
        private object get_259_PdfDocumentStateBase_HighlightedFormFieldColor(object instance)
        {
            var that = (global::DevExpress.Pdf.Native.PdfDocumentStateBase)instance;
            return that.HighlightedFormFieldColor;
        }
        private void set_259_PdfDocumentStateBase_HighlightedFormFieldColor(object instance, object Value)
        {
            var that = (global::DevExpress.Pdf.Native.PdfDocumentStateBase)instance;
            that.HighlightedFormFieldColor = (global::DevExpress.Pdf.PdfColor)Value;
        }
        private object get_260_PdfDocumentStateBase_FormData(object instance)
        {
            var that = (global::DevExpress.Pdf.Native.PdfDocumentStateBase)instance;
            return that.FormData;
        }
        private object get_261_PdfTextHighlightViewModel_Items(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.Internal.Pdf.PdfTextHighlightViewModel)instance;
            return that.Items;
        }
        private object get_262_IPdfTextSearchResult_PageIndex(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.IPdfTextSearchResult)instance;
            return that.PageIndex;
        }
        private object get_263_IPdfTextSearchResult_Rectangles(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.IPdfTextSearchResult)instance;
            return that.Rectangles;
        }
        private object get_264_PdfOrientedRectangle_Left(object instance)
        {
            var that = (global::DevExpress.Pdf.PdfOrientedRectangle)instance;
            return that.Left;
        }
        private object get_265_PdfOrientedRectangle_Top(object instance)
        {
            var that = (global::DevExpress.Pdf.PdfOrientedRectangle)instance;
            return that.Top;
        }
        private object get_266_PdfOrientedRectangle_Width(object instance)
        {
            var that = (global::DevExpress.Pdf.PdfOrientedRectangle)instance;
            return that.Width;
        }
        private object get_267_PdfOrientedRectangle_Height(object instance)
        {
            var that = (global::DevExpress.Pdf.PdfOrientedRectangle)instance;
            return that.Height;
        }
        private object get_268_PdfOrientedRectangle_Angle(object instance)
        {
            var that = (global::DevExpress.Pdf.PdfOrientedRectangle)instance;
            return that.Angle;
        }
        private object get_269_IPdfTextSearchResult_Words(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.IPdfTextSearchResult)instance;
            return that.Words;
        }
        private object get_270_PdfWord_Text(object instance)
        {
            var that = (global::DevExpress.Pdf.PdfWord)instance;
            return that.Text;
        }
        private object get_271_PdfWord_Rectangles(object instance)
        {
            var that = (global::DevExpress.Pdf.PdfWord)instance;
            return that.Rectangles;
        }
        private object get_272_PdfWord_Characters(object instance)
        {
            var that = (global::DevExpress.Pdf.PdfWord)instance;
            return that.Characters;
        }
        private object get_273_PdfCharacter_UnicodeData(object instance)
        {
            var that = (global::DevExpress.Pdf.PdfCharacter)instance;
            return that.UnicodeData;
        }
        private object get_274_PdfCharacter_Font(object instance)
        {
            var that = (global::DevExpress.Pdf.PdfCharacter)instance;
            return that.Font;
        }
        private object get_275_PdfCharacter_FontSize(object instance)
        {
            var that = (global::DevExpress.Pdf.PdfCharacter)instance;
            return that.FontSize;
        }
        private object get_276_PdfCharacter_Rectangle(object instance)
        {
            var that = (global::DevExpress.Pdf.PdfCharacter)instance;
            return that.Rectangle;
        }
        private object get_277_IPdfTextSearchResult_SearchText(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.IPdfTextSearchResult)instance;
            return that.SearchText;
        }
        private object get_278_IPdfTextSearchResult_IsSelected(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.IPdfTextSearchResult)instance;
            return that.IsSelected;
        }
        private void set_278_IPdfTextSearchResult_IsSelected(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.IPdfTextSearchResult)instance;
            that.IsSelected = (global::System.Boolean)Value;
        }
        private object get_279_PdfTextHighlightViewModel_HighlightGeometry(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.Internal.Pdf.PdfTextHighlightViewModel)instance;
            return that.HighlightGeometry;
        }
        private object get_280_PdfTextHighlightViewModel_SelectionGeometry(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.Internal.Pdf.PdfTextHighlightViewModel)instance;
            return that.SelectionGeometry;
        }
        private object get_281_PdfTextHighlightViewModel_IsLockUpdate(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.Internal.Pdf.PdfTextHighlightViewModel)instance;
            return that.IsLockUpdate;
        }
        private object get_282_PdfTextHighlightViewModel_HasSelection(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Controls.Internal.Pdf.PdfTextHighlightViewModel)instance;
            return that.HasSelection;
        }
        private object get_283_ColorGroup_BaseColors(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Editors.ColorGroup)instance;
            return that.BaseColors;
        }
        private object get_284_Color_A(object instance)
        {
            var that = (global::Windows.UI.Color)instance;
            return that.A;
        }
        private void set_284_Color_A(object instance, object Value)
        {
            var that = (global::Windows.UI.Color)instance;
            that.A = (global::System.Byte)Value;
        }
        private object get_285_Color_B(object instance)
        {
            var that = (global::Windows.UI.Color)instance;
            return that.B;
        }
        private void set_285_Color_B(object instance, object Value)
        {
            var that = (global::Windows.UI.Color)instance;
            that.B = (global::System.Byte)Value;
        }
        private object get_286_Color_G(object instance)
        {
            var that = (global::Windows.UI.Color)instance;
            return that.G;
        }
        private void set_286_Color_G(object instance, object Value)
        {
            var that = (global::Windows.UI.Color)instance;
            that.G = (global::System.Byte)Value;
        }
        private object get_287_Color_R(object instance)
        {
            var that = (global::Windows.UI.Color)instance;
            return that.R;
        }
        private void set_287_Color_R(object instance, object Value)
        {
            var that = (global::Windows.UI.Color)instance;
            that.R = (global::System.Byte)Value;
        }
        private object get_288_ColorGroup_ColorVariationsCount(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Editors.ColorGroup)instance;
            return that.ColorVariationsCount;
        }
        private void set_288_ColorGroup_ColorVariationsCount(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Editors.ColorGroup)instance;
            that.ColorVariationsCount = (global::System.Int32)Value;
        }
        private object get_289_ColorGroup_Title(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Editors.ColorGroup)instance;
            return that.Title;
        }
        private void set_289_ColorGroup_Title(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Editors.ColorGroup)instance;
            that.Title = (global::System.String)Value;
        }
        private object get_290_ColorGroup_ActualColors(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Editors.ColorGroup)instance;
            return that.ActualColors;
        }
        private object get_291_ColorGroup_dummyColorsCount(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Editors.ColorGroup)instance;
            return that.dummyColorsCount;
        }
        private void set_291_ColorGroup_dummyColorsCount(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Editors.ColorGroup)instance;
            that.dummyColorsCount = (global::System.Int32)Value;
        }
        private object get_292_ColorEdit_ColorGroups(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Editors.ColorEdit)instance;
            return that.ColorGroups;
        }
        private object get_293_ColorEdit_ActualPickerSelectedColor(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Editors.ColorEdit)instance;
            return that.ActualPickerSelectedColor;
        }
        private void set_293_ColorEdit_ActualPickerSelectedColor(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Editors.ColorEdit)instance;
            that.ActualPickerSelectedColor = (global::Windows.UI.Color)Value;
        }
        private object get_294_ColorEdit_Color(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Editors.ColorEdit)instance;
            return that.Color;
        }
        private void set_294_ColorEdit_Color(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Editors.ColorEdit)instance;
            that.Color = (global::Windows.UI.Color)Value;
        }
        private object get_295_ColorEdit_DefaultColor(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Editors.ColorEdit)instance;
            return that.DefaultColor;
        }
        private void set_295_ColorEdit_DefaultColor(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Editors.ColorEdit)instance;
            that.DefaultColor = (global::Windows.UI.Color)Value;
        }
        private object get_296_ColorEdit_GallerySelectedColor(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Editors.ColorEdit)instance;
            return that.GallerySelectedColor;
        }
        private void set_296_ColorEdit_GallerySelectedColor(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Editors.ColorEdit)instance;
            that.GallerySelectedColor = (global::Windows.UI.Color)Value;
        }
        private object get_297_ColorEdit_IsInAdvancedMode(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Editors.ColorEdit)instance;
            return that.IsInAdvancedMode;
        }
        private void set_297_ColorEdit_IsInAdvancedMode(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Editors.ColorEdit)instance;
            that.IsInAdvancedMode = (global::System.Boolean)Value;
        }
        private object get_298_ColorEdit_MaxColCount(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Editors.ColorEdit)instance;
            return that.MaxColCount;
        }
        private void set_298_ColorEdit_MaxColCount(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Editors.ColorEdit)instance;
            that.MaxColCount = (global::System.Int32)Value;
        }
        private object get_299_ColorEdit_MaxGroupSize(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Editors.ColorEdit)instance;
            return that.MaxGroupSize;
        }
        private void set_299_ColorEdit_MaxGroupSize(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Editors.ColorEdit)instance;
            that.MaxGroupSize = (global::System.Int32)Value;
        }
        private object get_300_ColorEdit_PickerSelectedColor(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Editors.ColorEdit)instance;
            return that.PickerSelectedColor;
        }
        private void set_300_ColorEdit_PickerSelectedColor(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Editors.ColorEdit)instance;
            that.PickerSelectedColor = (global::Windows.UI.Color)Value;
        }
        private object get_301_ColorEdit_ColorGroupsSource(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Editors.ColorEdit)instance;
            return that.ColorGroupsSource;
        }
        private void set_301_ColorEdit_ColorGroupsSource(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Editors.ColorEdit)instance;
            that.ColorGroupsSource = (global::System.Object)Value;
        }
        private object get_302_ColorEdit_ActualColorGroups(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Editors.ColorEdit)instance;
            return that.ActualColorGroups;
        }
        private object get_303_ColorEdit_ApplyCustomColorCommand(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Editors.ColorEdit)instance;
            return that.ApplyCustomColorCommand;
        }
        private object get_304_ColorEdit_ApplyDefaultColorCommand(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Editors.ColorEdit)instance;
            return that.ApplyDefaultColorCommand;
        }
        private object get_305_ColorEdit_CancelCommand(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Editors.ColorEdit)instance;
            return that.CancelCommand;
        }
        private object get_306_ColorEdit_ApplyColorCommand(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Editors.ColorEdit)instance;
            return that.ApplyColorCommand;
        }
        private object get_307_ColorPicker_AThumbOffset(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Editors.ColorPicker)instance;
            return that.AThumbOffset;
        }
        private object get_308_ColorPicker_HThumbOffset(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Editors.ColorPicker)instance;
            return that.HThumbOffset;
        }
        private object get_309_ColorPicker_SThumbOffset(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Editors.ColorPicker)instance;
            return that.SThumbOffset;
        }
        private object get_310_ColorPicker_BThumbOffset(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Editors.ColorPicker)instance;
            return that.BThumbOffset;
        }
        private object get_311_ColorPicker_PureColor(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Editors.ColorPicker)instance;
            return that.PureColor;
        }
        private object get_312_ColorPicker_PureTransparentColor(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Editors.ColorPicker)instance;
            return that.PureTransparentColor;
        }
        private void set_312_ColorPicker_PureTransparentColor(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Editors.ColorPicker)instance;
            that.PureTransparentColor = (global::Windows.UI.Color)Value;
        }
        private object get_313_ColorPicker_SelectedColor(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Editors.ColorPicker)instance;
            return that.SelectedColor;
        }
        private void set_313_ColorPicker_SelectedColor(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Editors.ColorPicker)instance;
            that.SelectedColor = (global::Windows.UI.Color)Value;
        }
        private object get_314_ColorPicker_ColorModels(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Editors.ColorPicker)instance;
            return that.ColorModels;
        }
        private object get_315_ColorModelBase_ALow(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Editors.ColorModelBase)instance;
            return that.ALow;
        }
        private void set_315_ColorModelBase_ALow(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Editors.ColorModelBase)instance;
            that.ALow = (global::Windows.UI.Color)Value;
        }
        private object get_316_ColorModelBase_AHigh(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Editors.ColorModelBase)instance;
            return that.AHigh;
        }
        private void set_316_ColorModelBase_AHigh(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Editors.ColorModelBase)instance;
            that.AHigh = (global::Windows.UI.Color)Value;
        }
        private object get_317_ColorModelBase_A(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Editors.ColorModelBase)instance;
            return that.A;
        }
        private void set_317_ColorModelBase_A(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Editors.ColorModelBase)instance;
            that.A = (global::System.Int32)Value;
        }
        private object get_318_ColorModelBase_Color(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Editors.ColorModelBase)instance;
            return that.Color;
        }
        private void set_318_ColorModelBase_Color(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Editors.ColorModelBase)instance;
            that.Color = (global::Windows.UI.Color)Value;
        }
        private object get_319_ColorModelBase_Hex(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Editors.ColorModelBase)instance;
            return that.Hex;
        }
        private void set_319_ColorModelBase_Hex(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Editors.ColorModelBase)instance;
            that.Hex = (global::System.String)Value;
        }
        private object get_320_ColorModelBase_ColorMode(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Editors.ColorModelBase)instance;
            return that.ColorMode;
        }
        private object get_321_ColorPicker_HSBColor(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Editors.ColorPicker)instance;
            return that.HSBColor;
        }
        private object get_322_ColorPicker_RGBColor(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Editors.ColorPicker)instance;
            return that.RGBColor;
        }
        private object get_323_PopupSettings_PopupContent(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Editors.PopupSettings)instance;
            return that.PopupContent;
        }
        private void set_323_PopupSettings_PopupContent(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Editors.PopupSettings)instance;
            that.PopupContent = (global::System.Object)Value;
        }
        private object get_324_PopupSettings_ClosePopupCommand(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Editors.PopupSettings)instance;
            return that.ClosePopupCommand;
        }
        private object get_325_PopupSettings_ShowPopupButtons(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Editors.PopupSettings)instance;
            return that.ShowPopupButtons;
        }
        private void set_325_PopupSettings_ShowPopupButtons(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Editors.PopupSettings)instance;
            that.ShowPopupButtons = (global::System.Boolean)Value;
        }
        private object get_326_PopupSettings_IsPopupOpen(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Editors.PopupSettings)instance;
            return that.IsPopupOpen;
        }
        private void set_326_PopupSettings_IsPopupOpen(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Editors.PopupSettings)instance;
            that.IsPopupOpen = (global::System.Boolean)Value;
        }
        private object get_327_PopupSettings_PopupContentTemplate(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Editors.PopupSettings)instance;
            return that.PopupContentTemplate;
        }
        private void set_327_PopupSettings_PopupContentTemplate(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Editors.PopupSettings)instance;
            that.PopupContentTemplate = (global::Windows.UI.Xaml.DataTemplate)Value;
        }
        private object get_328_PopupSettings_PopupTemplate(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Editors.PopupSettings)instance;
            return that.PopupTemplate;
        }
        private void set_328_PopupSettings_PopupTemplate(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Editors.PopupSettings)instance;
            that.PopupTemplate = (global::Windows.UI.Xaml.Controls.ControlTemplate)Value;
        }
        private object get_329_PopupSettings_PopupContentTemplateSelector(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Editors.PopupSettings)instance;
            return that.PopupContentTemplateSelector;
        }
        private void set_329_PopupSettings_PopupContentTemplateSelector(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Editors.PopupSettings)instance;
            that.PopupContentTemplateSelector = (global::Windows.UI.Xaml.Controls.DataTemplateSelector)Value;
        }
        private object get_330_PopupSettings_PopupContentContainerTemplate(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Editors.PopupSettings)instance;
            return that.PopupContentContainerTemplate;
        }
        private void set_330_PopupSettings_PopupContentContainerTemplate(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Editors.PopupSettings)instance;
            that.PopupContentContainerTemplate = (global::Windows.UI.Xaml.Controls.ControlTemplate)Value;
        }
        private object get_331_PopupSettings_PopupAutoWidth(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Editors.PopupSettings)instance;
            return that.PopupAutoWidth;
        }
        private void set_331_PopupSettings_PopupAutoWidth(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Editors.PopupSettings)instance;
            that.PopupAutoWidth = (global::System.Boolean)Value;
        }
        private object get_332_PopupSettings_PopupWidth(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Editors.PopupSettings)instance;
            return that.PopupWidth;
        }
        private void set_332_PopupSettings_PopupWidth(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Editors.PopupSettings)instance;
            that.PopupWidth = (global::System.Double)Value;
        }
        private object get_333_PopupSettings_PopupHeight(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Editors.PopupSettings)instance;
            return that.PopupHeight;
        }
        private void set_333_PopupSettings_PopupHeight(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Editors.PopupSettings)instance;
            that.PopupHeight = (global::System.Double)Value;
        }
        private object get_334_PopupSettings_ActualPopupWidth(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Editors.PopupSettings)instance;
            return that.ActualPopupWidth;
        }
        private object get_335_PopupSettings_ActualPopupHeight(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Editors.PopupSettings)instance;
            return that.ActualPopupHeight;
        }
        private object get_336_PopupSettings_PopupMaxWidth(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Editors.PopupSettings)instance;
            return that.PopupMaxWidth;
        }
        private void set_336_PopupSettings_PopupMaxWidth(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Editors.PopupSettings)instance;
            that.PopupMaxWidth = (global::System.Double)Value;
        }
        private object get_337_PopupSettings_PopupMinWidth(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Editors.PopupSettings)instance;
            return that.PopupMinWidth;
        }
        private void set_337_PopupSettings_PopupMinWidth(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Editors.PopupSettings)instance;
            that.PopupMinWidth = (global::System.Double)Value;
        }
        private object get_338_PopupSettings_ActualPopupMinWidth(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Editors.PopupSettings)instance;
            return that.ActualPopupMinWidth;
        }
        private object get_339_PopupSettings_PopupMaxHeight(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Editors.PopupSettings)instance;
            return that.PopupMaxHeight;
        }
        private void set_339_PopupSettings_PopupMaxHeight(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Editors.PopupSettings)instance;
            that.PopupMaxHeight = (global::System.Double)Value;
        }
        private object get_340_PopupSettings_PopupMinHeight(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Editors.PopupSettings)instance;
            return that.PopupMinHeight;
        }
        private void set_340_PopupSettings_PopupMinHeight(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Editors.PopupSettings)instance;
            that.PopupMinHeight = (global::System.Double)Value;
        }
        private object get_341_PopupSettings_PostEditValue(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Editors.PopupSettings)instance;
            return that.PostEditValue;
        }
        private void set_341_PopupSettings_PostEditValue(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Editors.PopupSettings)instance;
            that.PostEditValue = (global::System.Boolean)Value;
        }
        private object get_342_PopupSettings_PopupEditValue(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Editors.PopupSettings)instance;
            return that.PopupEditValue;
        }
        private void set_342_PopupSettings_PopupEditValue(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Editors.PopupSettings)instance;
            that.PopupEditValue = (global::System.Object)Value;
        }
        private object get_343_GalleryItemContainerGeneratorBase_ContentTemplate(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.GalleryItemContainerGeneratorBase)instance;
            return that.ContentTemplate;
        }
        private void set_343_GalleryItemContainerGeneratorBase_ContentTemplate(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.GalleryItemContainerGeneratorBase)instance;
            that.ContentTemplate = (global::Windows.UI.Xaml.DataTemplate)Value;
        }
        private object get_344_GalleryItemContainerGeneratorBase_ContentTemplateSelector(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.GalleryItemContainerGeneratorBase)instance;
            return that.ContentTemplateSelector;
        }
        private void set_344_GalleryItemContainerGeneratorBase_ContentTemplateSelector(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.GalleryItemContainerGeneratorBase)instance;
            that.ContentTemplateSelector = (global::Windows.UI.Xaml.Controls.DataTemplateSelector)Value;
        }
        private object get_345_GalleryItemContainerGeneratorBase_ContainerStyle(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.GalleryItemContainerGeneratorBase)instance;
            return that.ContainerStyle;
        }
        private void set_345_GalleryItemContainerGeneratorBase_ContainerStyle(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.GalleryItemContainerGeneratorBase)instance;
            that.ContainerStyle = (global::Windows.UI.Xaml.Style)Value;
        }
        private object get_346_GalleryItemContainerGeneratorBase_ActualColumnWidth(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.GalleryItemContainerGeneratorBase)instance;
            return that.ActualColumnWidth;
        }
        private object get_347_GalleryItemContainerGeneratorBase_AverageContainerHeight(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.GalleryItemContainerGeneratorBase)instance;
            return that.AverageContainerHeight;
        }
        private object get_348_GalleryItemContainerGeneratorBase_GroupedItems(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.GalleryItemContainerGeneratorBase)instance;
            return that.GroupedItems;
        }
        private void set_348_GalleryItemContainerGeneratorBase_GroupedItems(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.GalleryItemContainerGeneratorBase)instance;
            that.GroupedItems = (global::System.Boolean)Value;
        }
        private object get_349_GalleryItemContainerGeneratorBase_MaxContainerHeight(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.GalleryItemContainerGeneratorBase)instance;
            return that.MaxContainerHeight;
        }
        private object get_350_GalleryItemContainerGeneratorBase_DummyItem(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.GalleryItemContainerGeneratorBase)instance;
            return that.DummyItem;
        }
        private object get_351_MenuFrameBase_Menu(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Layout.Internal.MenuFrameBase<global::DevExpress.UI.Xaml.Layout.HamburgerMenu>)instance;
            return that.Menu;
        }
        private void set_351_MenuFrameBase_Menu(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Layout.Internal.MenuFrameBase<global::DevExpress.UI.Xaml.Layout.HamburgerMenu>)instance;
            that.Menu = (global::DevExpress.UI.Xaml.Layout.HamburgerMenu)Value;
        }
        private object get_352_HamburgerMenu_Items(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Layout.HamburgerMenu)instance;
            return that.Items;
        }
        private object get_353_IHamburgerMenuItem_Placement(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Layout.Internal.IHamburgerMenuItem)instance;
            return that.Placement;
        }
        private object get_354_MenuFrameBase_MenuPageType(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Layout.Internal.MenuFrameBase<global::DevExpress.UI.Xaml.Layout.HamburgerMenu>)instance;
            return that.MenuPageType;
        }
        private object get_355_DXFrame_ViewModel(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Layout.DXFrame)instance;
            return that.ViewModel;
        }
        private void set_355_DXFrame_ViewModel(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Layout.DXFrame)instance;
            that.ViewModel = (global::System.Object)Value;
        }
        private object get_356_DXFrame_NavigationTypeProvider(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Layout.DXFrame)instance;
            return that.NavigationTypeProvider;
        }
        private void set_356_DXFrame_NavigationTypeProvider(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Layout.DXFrame)instance;
            that.NavigationTypeProvider = (global::DevExpress.UI.Xaml.Layout.TypeProviderBase)Value;
        }
        private object get_357_DXFrame_AllowCustomizingWindowTitle(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Layout.DXFrame)instance;
            return that.AllowCustomizingWindowTitle;
        }
        private void set_357_DXFrame_AllowCustomizingWindowTitle(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Layout.DXFrame)instance;
            that.AllowCustomizingWindowTitle = (global::System.Boolean)Value;
        }
        private object get_358_DXFrame_WindowTitle(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Layout.DXFrame)instance;
            return that.WindowTitle;
        }
        private void set_358_DXFrame_WindowTitle(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Layout.DXFrame)instance;
            that.WindowTitle = (global::System.String)Value;
        }
        private object get_359_DXFrame_WindowTitleSettings(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Layout.DXFrame)instance;
            return that.WindowTitleSettings;
        }
        private void set_359_DXFrame_WindowTitleSettings(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Layout.DXFrame)instance;
            that.WindowTitleSettings = (global::DevExpress.UI.Xaml.TitleSettings)Value;
        }
        private object get_360_DXFrame_IsMobileStatusBarVisible(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Layout.DXFrame)instance;
            return that.IsMobileStatusBarVisible;
        }
        private void set_360_DXFrame_IsMobileStatusBarVisible(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Layout.DXFrame)instance;
            that.IsMobileStatusBarVisible = (global::System.Boolean)Value;
        }
        private object get_361_DXFrame_MobileStatusBarBackground(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Layout.DXFrame)instance;
            return that.MobileStatusBarBackground;
        }
        private void set_361_DXFrame_MobileStatusBarBackground(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Layout.DXFrame)instance;
            that.MobileStatusBarBackground = (global::Windows.UI.Xaml.Media.SolidColorBrush)Value;
        }
        private object get_362_DXFrame_MobileStatusBarForeground(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Layout.DXFrame)instance;
            return that.MobileStatusBarForeground;
        }
        private void set_362_DXFrame_MobileStatusBarForeground(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Layout.DXFrame)instance;
            that.MobileStatusBarForeground = (global::Windows.UI.Xaml.Media.SolidColorBrush)Value;
        }
        private object get_363_DXFrame_SyncRequestedThemeWithThemeManager(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Layout.DXFrame)instance;
            return that.SyncRequestedThemeWithThemeManager;
        }
        private void set_363_DXFrame_SyncRequestedThemeWithThemeManager(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Layout.DXFrame)instance;
            that.SyncRequestedThemeWithThemeManager = (global::System.Boolean)Value;
        }
        private object get_364_DXFrame_HideBackButton(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Layout.DXFrame)instance;
            return that.HideBackButton;
        }
        private void set_364_DXFrame_HideBackButton(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Layout.DXFrame)instance;
            that.HideBackButton = (global::System.Boolean)Value;
        }
        private object get_365_MenuFrameBase_Menu(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Layout.Internal.MenuFrameBase<global::DevExpress.UI.Xaml.Layout.TileBar>)instance;
            return that.Menu;
        }
        private void set_365_MenuFrameBase_Menu(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Layout.Internal.MenuFrameBase<global::DevExpress.UI.Xaml.Layout.TileBar>)instance;
            that.Menu = (global::DevExpress.UI.Xaml.Layout.TileBar)Value;
        }
        private object get_366_TileBarFrame_MenuPlacement(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Layout.TileBarFrame)instance;
            return that.MenuPlacement;
        }
        private void set_366_TileBarFrame_MenuPlacement(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Layout.TileBarFrame)instance;
            that.MenuPlacement = (global::DevExpress.Core.Dock)Value;
        }
        private object get_367_MenuFrameBase_MenuPageType(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Layout.Internal.MenuFrameBase<global::DevExpress.UI.Xaml.Layout.TileBar>)instance;
            return that.MenuPageType;
        }
        private object get_368_BackstageTabItem_ControlPane(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.BackstageTabItem)instance;
            return that.ControlPane;
        }
        private void set_368_BackstageTabItem_ControlPane(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.BackstageTabItem)instance;
            that.ControlPane = (global::System.Object)Value;
        }
        private object get_369_BackstageTabItem_ControlPaneShowMode(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.BackstageTabItem)instance;
            return that.ControlPaneShowMode;
        }
        private void set_369_BackstageTabItem_ControlPaneShowMode(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.BackstageTabItem)instance;
            that.ControlPaneShowMode = (global::DevExpress.UI.Xaml.Ribbon.ControlPaneShowMode)Value;
        }
        private object get_370_BackstageTabItem_FlyoutCaption(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.BackstageTabItem)instance;
            return that.FlyoutCaption;
        }
        private void set_370_BackstageTabItem_FlyoutCaption(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.BackstageTabItem)instance;
            that.FlyoutCaption = (global::System.String)Value;
        }
        private object get_371_BackstageTabItem_IsSelectable(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.BackstageTabItem)instance;
            return that.IsSelectable;
        }
        private object get_372_RibbonSelectorItemBase_IsSelected(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.Internal.RibbonSelectorItemBase)instance;
            return that.IsSelected;
        }
        private void set_372_RibbonSelectorItemBase_IsSelected(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.Internal.RibbonSelectorItemBase)instance;
            that.IsSelected = (global::System.Boolean)Value;
        }
        private object get_373_RibbonItemBase_FlyoutFlowBreak(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.Internal.RibbonItemBase)instance;
            return that.FlyoutFlowBreak;
        }
        private void set_373_RibbonItemBase_FlyoutFlowBreak(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.Internal.RibbonItemBase)instance;
            that.FlyoutFlowBreak = (global::System.Boolean)Value;
        }
        private object get_374_RibbonItemBase_FlyoutSameRow(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.Internal.RibbonItemBase)instance;
            return that.FlyoutSameRow;
        }
        private void set_374_RibbonItemBase_FlyoutSameRow(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.Internal.RibbonItemBase)instance;
            that.FlyoutSameRow = (global::System.Boolean)Value;
        }
        private object get_375_RibbonItemBase_FlyoutFlowBreakWithSeparator(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.Internal.RibbonItemBase)instance;
            return that.FlyoutFlowBreakWithSeparator;
        }
        private void set_375_RibbonItemBase_FlyoutFlowBreakWithSeparator(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.Internal.RibbonItemBase)instance;
            that.FlyoutFlowBreakWithSeparator = (global::System.Boolean)Value;
        }
        private object get_376_RibbonItemBase_ItemStyle(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.Internal.RibbonItemBase)instance;
            return that.ItemStyle;
        }
        private void set_376_RibbonItemBase_ItemStyle(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.Internal.RibbonItemBase)instance;
            that.ItemStyle = (global::DevExpress.UI.Xaml.Ribbon.RibbonItemStyle)Value;
        }
        private object get_377_RibbonItemBase_ShowInFlyoutOnly(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.Internal.RibbonItemBase)instance;
            return that.ShowInFlyoutOnly;
        }
        private void set_377_RibbonItemBase_ShowInFlyoutOnly(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.Internal.RibbonItemBase)instance;
            that.ShowInFlyoutOnly = (global::System.Boolean)Value;
        }
        private object get_378_RibbonItemBase_ShrinkPriority(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.Internal.RibbonItemBase)instance;
            return that.ShrinkPriority;
        }
        private void set_378_RibbonItemBase_ShrinkPriority(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.Internal.RibbonItemBase)instance;
            that.ShrinkPriority = (global::DevExpress.UI.Xaml.Ribbon.CollapsePriority)Value;
        }
        private object get_379_RibbonItemBase_CollapsePriority(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.Internal.RibbonItemBase)instance;
            return that.CollapsePriority;
        }
        private void set_379_RibbonItemBase_CollapsePriority(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.Internal.RibbonItemBase)instance;
            that.CollapsePriority = (global::DevExpress.UI.Xaml.Ribbon.CollapsePriority)Value;
        }
        private object get_380_RibbonItemBase_CollapsedGroupName(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.Internal.RibbonItemBase)instance;
            return that.CollapsedGroupName;
        }
        private void set_380_RibbonItemBase_CollapsedGroupName(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.Internal.RibbonItemBase)instance;
            that.CollapsedGroupName = (global::System.String)Value;
        }
        private object get_381_GlyphItemBase_Icon(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Internal.GlyphItemBase)instance;
            return that.Icon;
        }
        private void set_381_GlyphItemBase_Icon(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Internal.GlyphItemBase)instance;
            that.Icon = (global::Windows.UI.Xaml.Controls.IconElement)Value;
        }
        private object get_382_GlyphItemBase_IconSource(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Internal.GlyphItemBase)instance;
            return that.IconSource;
        }
        private void set_382_GlyphItemBase_IconSource(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Internal.GlyphItemBase)instance;
            that.IconSource = (global::System.Object)Value;
        }
        private object get_383_GlyphItemBase_IconTemplate(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Internal.GlyphItemBase)instance;
            return that.IconTemplate;
        }
        private void set_383_GlyphItemBase_IconTemplate(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Internal.GlyphItemBase)instance;
            that.IconTemplate = (global::Windows.UI.Xaml.DataTemplate)Value;
        }
        private object get_384_GlyphItemBase_IconFill(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Internal.GlyphItemBase)instance;
            return that.IconFill;
        }
        private void set_384_GlyphItemBase_IconFill(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Internal.GlyphItemBase)instance;
            that.IconFill = (global::Windows.UI.Xaml.Media.SolidColorBrush)Value;
        }
        private object get_385_GlyphItemBase_IconWidth(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Internal.GlyphItemBase)instance;
            return that.IconWidth;
        }
        private void set_385_GlyphItemBase_IconWidth(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Internal.GlyphItemBase)instance;
            that.IconWidth = (global::System.Double)Value;
        }
        private object get_386_GlyphItemBase_IconHeight(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Internal.GlyphItemBase)instance;
            return that.IconHeight;
        }
        private void set_386_GlyphItemBase_IconHeight(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Internal.GlyphItemBase)instance;
            that.IconHeight = (global::System.Double)Value;
        }
        private object get_387_GlyphItemBase_IconStretch(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Internal.GlyphItemBase)instance;
            return that.IconStretch;
        }
        private void set_387_GlyphItemBase_IconStretch(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Internal.GlyphItemBase)instance;
            that.IconStretch = (global::Windows.UI.Xaml.Media.Stretch)Value;
        }
        private object get_388_GlyphItemBase_IconSizeUnit(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Internal.GlyphItemBase)instance;
            return that.IconSizeUnit;
        }
        private void set_388_GlyphItemBase_IconSizeUnit(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Internal.GlyphItemBase)instance;
            that.IconSizeUnit = (global::DevExpress.UI.Xaml.IconSizeUnit)Value;
        }
        private object get_389_GlyphItemBase_TemplateSelector(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Internal.GlyphItemBase)instance;
            return that.TemplateSelector;
        }
        private void set_389_GlyphItemBase_TemplateSelector(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Internal.GlyphItemBase)instance;
            that.TemplateSelector = (global::DevExpress.UI.Xaml.ControlTemplateSelector)Value;
        }
        private object get_390_GlyphItemBase_ClosePopupOnClick(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Internal.GlyphItemBase)instance;
            return that.ClosePopupOnClick;
        }
        private void set_390_GlyphItemBase_ClosePopupOnClick(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Internal.GlyphItemBase)instance;
            that.ClosePopupOnClick = (global::System.Boolean)Value;
        }
        private object get_391_PointerItemBase_ClickMode(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Internal.PointerItemBase)instance;
            return that.ClickMode;
        }
        private void set_391_PointerItemBase_ClickMode(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Internal.PointerItemBase)instance;
            that.ClickMode = (global::Windows.UI.Xaml.Controls.ClickMode)Value;
        }
        private object get_392_PointerItemBase_IsPointerOver(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Internal.PointerItemBase)instance;
            return that.IsPointerOver;
        }
        private object get_393_PointerItemBase_IsPressed(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Internal.PointerItemBase)instance;
            return that.IsPressed;
        }
        private object get_394_ContentControlEx_ActualSize(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Internal.ContentControlEx)instance;
            return that.ActualSize;
        }
        private object get_395_ContentControlEx_IsLoaded(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Internal.ContentControlEx)instance;
            return that.IsLoaded;
        }
        private object get_396_BackstageView_Items(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.BackstageView)instance;
            return that.Items;
        }
        private object get_397_IBackstageItem_ClosePopupOnClick(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.IBackstageItem)instance;
            return that.ClosePopupOnClick;
        }
        private object get_398_BackstageView_ItemsSource(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.BackstageView)instance;
            return that.ItemsSource;
        }
        private void set_398_BackstageView_ItemsSource(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.BackstageView)instance;
            that.ItemsSource = (global::System.Object)Value;
        }
        private object get_399_BackstageView_ItemTemplate(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.BackstageView)instance;
            return that.ItemTemplate;
        }
        private void set_399_BackstageView_ItemTemplate(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.BackstageView)instance;
            that.ItemTemplate = (global::Windows.UI.Xaml.DataTemplate)Value;
        }
        private object get_400_BackstageView_ItemTemplateSelector(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.BackstageView)instance;
            return that.ItemTemplateSelector;
        }
        private void set_400_BackstageView_ItemTemplateSelector(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.BackstageView)instance;
            that.ItemTemplateSelector = (global::Windows.UI.Xaml.Controls.DataTemplateSelector)Value;
        }
        private object get_401_BackstageView_SelectedTab(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.BackstageView)instance;
            return that.SelectedTab;
        }
        private void set_401_BackstageView_SelectedTab(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.BackstageView)instance;
            that.SelectedTab = (global::DevExpress.UI.Xaml.Ribbon.IBackstageTabItem)Value;
        }
        private object get_402_BackstageView_IsOpen(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.BackstageView)instance;
            return that.IsOpen;
        }
        private void set_402_BackstageView_IsOpen(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.BackstageView)instance;
            that.IsOpen = (global::System.Boolean)Value;
        }
        private object get_403_BackstageView_SelectedTabOnShow(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.BackstageView)instance;
            return that.SelectedTabOnShow;
        }
        private void set_403_BackstageView_SelectedTabOnShow(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.BackstageView)instance;
            that.SelectedTabOnShow = (global::DevExpress.UI.Xaml.Ribbon.IBackstageTabItem)Value;
        }
        private object get_404_BackstageView_SelectedTabCaptionOnShow(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.BackstageView)instance;
            return that.SelectedTabCaptionOnShow;
        }
        private void set_404_BackstageView_SelectedTabCaptionOnShow(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.BackstageView)instance;
            that.SelectedTabCaptionOnShow = (global::System.String)Value;
        }
        private object get_405_BackstageView_SelectedTabIndexOnShow(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.BackstageView)instance;
            return that.SelectedTabIndexOnShow;
        }
        private void set_405_BackstageView_SelectedTabIndexOnShow(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.BackstageView)instance;
            that.SelectedTabIndexOnShow = (global::System.Int32)Value;
        }
        private object get_406_BackstageView_TitleSettings(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.BackstageView)instance;
            return that.TitleSettings;
        }
        private void set_406_BackstageView_TitleSettings(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.BackstageView)instance;
            that.TitleSettings = (global::DevExpress.UI.Xaml.TitleSettings)Value;
        }
        private object get_407_BackstageView_PlacementTarget(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.BackstageView)instance;
            return that.PlacementTarget;
        }
        private void set_407_BackstageView_PlacementTarget(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.BackstageView)instance;
            that.PlacementTarget = (global::Windows.UI.Xaml.UIElement)Value;
        }
        private object get_408_BackstageView_ActualPlacementTarget(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.BackstageView)instance;
            return that.ActualPlacementTarget;
        }
        private object get_409_BackstageView_StaysOpen(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.BackstageView)instance;
            return that.StaysOpen;
        }
        private void set_409_BackstageView_StaysOpen(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.BackstageView)instance;
            that.StaysOpen = (global::System.Boolean)Value;
        }
        private object get_410_BackstageView_CloseCommand(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.BackstageView)instance;
            return that.CloseCommand;
        }
        private object get_411_RibbonHeaderedContainerBase_Caption(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.Internal.RibbonHeaderedContainerBase)instance;
            return that.Caption;
        }
        private void set_411_RibbonHeaderedContainerBase_Caption(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.Internal.RibbonHeaderedContainerBase)instance;
            that.Caption = (global::System.String)Value;
        }
        private object get_412_RibbonButtonItemBase_Command(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.Internal.RibbonButtonItemBase)instance;
            return that.Command;
        }
        private void set_412_RibbonButtonItemBase_Command(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.Internal.RibbonButtonItemBase)instance;
            that.Command = (global::System.Windows.Input.ICommand)Value;
        }
        private object get_413_RibbonButtonItemBase_CommandParameter(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.Internal.RibbonButtonItemBase)instance;
            return that.CommandParameter;
        }
        private void set_413_RibbonButtonItemBase_CommandParameter(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.Internal.RibbonButtonItemBase)instance;
            that.CommandParameter = (global::System.Object)Value;
        }
        private object get_414_HelpPane_Items(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.HelpPane)instance;
            return that.Items;
        }
        private object get_415_IRibbonHelpPaneItem_PlatformVisibility(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.IRibbonHelpPaneItem)instance;
            return that.PlatformVisibility;
        }
        private object get_416_IRibbonHelpPaneItem_Placement(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.IRibbonHelpPaneItem)instance;
            return that.Placement;
        }
        private object get_417_HelpPane_ActualHeaderItems(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.HelpPane)instance;
            return that.ActualHeaderItems;
        }
        private object get_418_HelpPane_ActualFooterItems(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.HelpPane)instance;
            return that.ActualFooterItems;
        }
        private object get_419_HelpPane_ItemsCore(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.HelpPane)instance;
            return that.ItemsCore;
        }
        private object get_420_HelpPaneBase_ItemsSource(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.HelpPaneBase)instance;
            return that.ItemsSource;
        }
        private void set_420_HelpPaneBase_ItemsSource(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.HelpPaneBase)instance;
            that.ItemsSource = (global::System.Object)Value;
        }
        private object get_421_HelpPaneBase_ItemTemplate(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.HelpPaneBase)instance;
            return that.ItemTemplate;
        }
        private void set_421_HelpPaneBase_ItemTemplate(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.HelpPaneBase)instance;
            that.ItemTemplate = (global::Windows.UI.Xaml.DataTemplate)Value;
        }
        private object get_422_HelpPaneBase_ItemTemplateSelector(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.HelpPaneBase)instance;
            return that.ItemTemplateSelector;
        }
        private void set_422_HelpPaneBase_ItemTemplateSelector(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.HelpPaneBase)instance;
            that.ItemTemplateSelector = (global::Windows.UI.Xaml.Controls.DataTemplateSelector)Value;
        }
        private object get_423_ToolbarHelpPane_Items(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.ToolbarHelpPane)instance;
            return that.Items;
        }
        private object get_424_ToolbarHelpPane_ItemsCore(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.ToolbarHelpPane)instance;
            return that.ItemsCore;
        }
        private object get_425_RibbonControl_Tabs(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.RibbonControl)instance;
            return that.Tabs;
        }
        private object get_426_RibbonTab_Groups(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.RibbonTab)instance;
            return that.Groups;
        }
        private object get_427_RibbonGroup_Items(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.RibbonGroup)instance;
            return that.Items;
        }
        private object get_428_RibbonGroupPanelBase_ItemsSource(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.Internal.RibbonGroupPanelBase)instance;
            return that.ItemsSource;
        }
        private void set_428_RibbonGroupPanelBase_ItemsSource(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.Internal.RibbonGroupPanelBase)instance;
            that.ItemsSource = (global::System.Object)Value;
        }
        private object get_429_RibbonGroupPanelBase_ItemTemplate(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.Internal.RibbonGroupPanelBase)instance;
            return that.ItemTemplate;
        }
        private void set_429_RibbonGroupPanelBase_ItemTemplate(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.Internal.RibbonGroupPanelBase)instance;
            that.ItemTemplate = (global::Windows.UI.Xaml.DataTemplate)Value;
        }
        private object get_430_RibbonGroupPanelBase_ItemTemplateSelector(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.Internal.RibbonGroupPanelBase)instance;
            return that.ItemTemplateSelector;
        }
        private void set_430_RibbonGroupPanelBase_ItemTemplateSelector(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.Internal.RibbonGroupPanelBase)instance;
            that.ItemTemplateSelector = (global::Windows.UI.Xaml.Controls.DataTemplateSelector)Value;
        }
        private object get_431_RibbonGroupPanelBase_Icon(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.Internal.RibbonGroupPanelBase)instance;
            return that.Icon;
        }
        private void set_431_RibbonGroupPanelBase_Icon(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.Internal.RibbonGroupPanelBase)instance;
            that.Icon = (global::Windows.UI.Xaml.Controls.IconElement)Value;
        }
        private object get_432_RibbonGroupPanelBase_IconSource(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.Internal.RibbonGroupPanelBase)instance;
            return that.IconSource;
        }
        private void set_432_RibbonGroupPanelBase_IconSource(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.Internal.RibbonGroupPanelBase)instance;
            that.IconSource = (global::System.Object)Value;
        }
        private object get_433_RibbonGroupPanelBase_IconTemplate(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.Internal.RibbonGroupPanelBase)instance;
            return that.IconTemplate;
        }
        private void set_433_RibbonGroupPanelBase_IconTemplate(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.Internal.RibbonGroupPanelBase)instance;
            that.IconTemplate = (global::Windows.UI.Xaml.DataTemplate)Value;
        }
        private object get_434_RibbonGroupPanelBase_IconWidth(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.Internal.RibbonGroupPanelBase)instance;
            return that.IconWidth;
        }
        private void set_434_RibbonGroupPanelBase_IconWidth(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.Internal.RibbonGroupPanelBase)instance;
            that.IconWidth = (global::System.Double)Value;
        }
        private object get_435_RibbonGroupPanelBase_IconHeight(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.Internal.RibbonGroupPanelBase)instance;
            return that.IconHeight;
        }
        private void set_435_RibbonGroupPanelBase_IconHeight(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.Internal.RibbonGroupPanelBase)instance;
            that.IconHeight = (global::System.Double)Value;
        }
        private object get_436_RibbonGroupPanelBase_IconStretch(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.Internal.RibbonGroupPanelBase)instance;
            return that.IconStretch;
        }
        private void set_436_RibbonGroupPanelBase_IconStretch(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.Internal.RibbonGroupPanelBase)instance;
            that.IconStretch = (global::Windows.UI.Xaml.Media.Stretch)Value;
        }
        private object get_437_RibbonGroupPanelBase_IconFill(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.Internal.RibbonGroupPanelBase)instance;
            return that.IconFill;
        }
        private void set_437_RibbonGroupPanelBase_IconFill(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.Internal.RibbonGroupPanelBase)instance;
            that.IconFill = (global::Windows.UI.Xaml.Media.SolidColorBrush)Value;
        }
        private object get_438_RibbonGroupPanelBase_FlyoutColumnCount(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.Internal.RibbonGroupPanelBase)instance;
            return that.FlyoutColumnCount;
        }
        private void set_438_RibbonGroupPanelBase_FlyoutColumnCount(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.Internal.RibbonGroupPanelBase)instance;
            that.FlyoutColumnCount = (global::System.Int32)Value;
        }
        private object get_439_RibbonGroupPanelBase_IconSizeUnit(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.Internal.RibbonGroupPanelBase)instance;
            return that.IconSizeUnit;
        }
        private void set_439_RibbonGroupPanelBase_IconSizeUnit(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.Internal.RibbonGroupPanelBase)instance;
            that.IconSizeUnit = (global::DevExpress.UI.Xaml.IconSizeUnit)Value;
        }
        private object get_440_IndependentGroupPanelBase_Caption(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.Internal.IndependentGroupPanelBase)instance;
            return that.Caption;
        }
        private void set_440_IndependentGroupPanelBase_Caption(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.Internal.IndependentGroupPanelBase)instance;
            that.Caption = (global::System.String)Value;
        }
        private object get_441_IndependentGroupPanelBase_DropDownControl(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.Internal.IndependentGroupPanelBase)instance;
            return that.DropDownControl;
        }
        private void set_441_IndependentGroupPanelBase_DropDownControl(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.Internal.IndependentGroupPanelBase)instance;
            that.DropDownControl = (global::Windows.UI.Xaml.UIElement)Value;
        }
        private object get_442_IndependentGroupPanelBase_FlyoutItems(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.Internal.IndependentGroupPanelBase)instance;
            return that.FlyoutItems;
        }
        private object get_443_IRibbonItemBase_ItemStyle(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.IRibbonItemBase)instance;
            return that.ItemStyle;
        }
        private object get_444_IRibbonItemBase_CollapsePriority(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.IRibbonItemBase)instance;
            return that.CollapsePriority;
        }
        private object get_445_IRibbonItemBase_ShrinkPriority(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.IRibbonItemBase)instance;
            return that.ShrinkPriority;
        }
        private object get_446_IRibbonItemBase_CollapsedGroupName(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.IRibbonItemBase)instance;
            return that.CollapsedGroupName;
        }
        private object get_447_IRibbonItemBase_ShowInFlyoutOnly(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.IRibbonItemBase)instance;
            return that.ShowInFlyoutOnly;
        }
        private object get_448_IRibbonItemBase_HasContent(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.IRibbonItemBase)instance;
            return that.HasContent;
        }
        private object get_449_IndependentGroupPanelBase_FlyoutCalculator(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.Internal.IndependentGroupPanelBase)instance;
            return that.FlyoutCalculator;
        }
        private object get_450_RibbonTabBase_GroupsSource(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.RibbonTabBase)instance;
            return that.GroupsSource;
        }
        private void set_450_RibbonTabBase_GroupsSource(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.RibbonTabBase)instance;
            that.GroupsSource = (global::System.Object)Value;
        }
        private object get_451_RibbonTabBase_GroupTemplate(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.RibbonTabBase)instance;
            return that.GroupTemplate;
        }
        private void set_451_RibbonTabBase_GroupTemplate(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.RibbonTabBase)instance;
            that.GroupTemplate = (global::Windows.UI.Xaml.DataTemplate)Value;
        }
        private object get_452_RibbonTabBase_GroupTemplateSelector(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.RibbonTabBase)instance;
            return that.GroupTemplateSelector;
        }
        private void set_452_RibbonTabBase_GroupTemplateSelector(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.RibbonTabBase)instance;
            that.GroupTemplateSelector = (global::Windows.UI.Xaml.Controls.DataTemplateSelector)Value;
        }
        private object get_453_RibbonTabBase_IsSelected(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.RibbonTabBase)instance;
            return that.IsSelected;
        }
        private void set_453_RibbonTabBase_IsSelected(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.RibbonTabBase)instance;
            that.IsSelected = (global::System.Boolean)Value;
        }
        private object get_454_RibbonControl_BackstageView(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.RibbonControl)instance;
            return that.BackstageView;
        }
        private void set_454_RibbonControl_BackstageView(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.RibbonControl)instance;
            that.BackstageView = (global::DevExpress.UI.Xaml.Ribbon.BackstageView)Value;
        }
        private object get_455_RibbonControl_CanMinimize(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.RibbonControl)instance;
            return that.CanMinimize;
        }
        private void set_455_RibbonControl_CanMinimize(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.RibbonControl)instance;
            that.CanMinimize = (global::System.Boolean)Value;
        }
        private object get_456_RibbonControl_HelpPane(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.RibbonControl)instance;
            return that.HelpPane;
        }
        private void set_456_RibbonControl_HelpPane(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.RibbonControl)instance;
            that.HelpPane = (global::DevExpress.UI.Xaml.Ribbon.HelpPane)Value;
        }
        private object get_457_RibbonControl_Title(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.RibbonControl)instance;
            return that.Title;
        }
        private void set_457_RibbonControl_Title(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.RibbonControl)instance;
            that.Title = (global::System.String)Value;
        }
        private object get_458_RibbonControl_IsTitleEditable(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.RibbonControl)instance;
            return that.IsTitleEditable;
        }
        private void set_458_RibbonControl_IsTitleEditable(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.RibbonControl)instance;
            that.IsTitleEditable = (global::System.Boolean)Value;
        }
        private object get_459_RibbonControl_TitleSettings(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.RibbonControl)instance;
            return that.TitleSettings;
        }
        private void set_459_RibbonControl_TitleSettings(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.RibbonControl)instance;
            that.TitleSettings = (global::DevExpress.UI.Xaml.TitleSettings)Value;
        }
        private object get_460_RibbonControl_EmbedRibbonInWindowTitle(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.RibbonControl)instance;
            return that.EmbedRibbonInWindowTitle;
        }
        private void set_460_RibbonControl_EmbedRibbonInWindowTitle(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.RibbonControl)instance;
            that.EmbedRibbonInWindowTitle = (global::System.Boolean)Value;
        }
        private object get_461_RibbonControl_SelectedTab(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.RibbonControl)instance;
            return that.SelectedTab;
        }
        private void set_461_RibbonControl_SelectedTab(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.RibbonControl)instance;
            that.SelectedTab = (global::DevExpress.UI.Xaml.Ribbon.RibbonTab)Value;
        }
        private object get_462_RibbonControl_ShowTitleBar(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.RibbonControl)instance;
            return that.ShowTitleBar;
        }
        private void set_462_RibbonControl_ShowTitleBar(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.RibbonControl)instance;
            that.ShowTitleBar = (global::System.Boolean)Value;
        }
        private object get_463_RibbonControl_IsNestedWindowTitleCustomizer(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.RibbonControl)instance;
            return that.IsNestedWindowTitleCustomizer;
        }
        private object get_464_RibbonControlBase_TabsSource(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.RibbonControlBase)instance;
            return that.TabsSource;
        }
        private void set_464_RibbonControlBase_TabsSource(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.RibbonControlBase)instance;
            that.TabsSource = (global::System.Object)Value;
        }
        private object get_465_RibbonControlBase_TabTemplate(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.RibbonControlBase)instance;
            return that.TabTemplate;
        }
        private void set_465_RibbonControlBase_TabTemplate(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.RibbonControlBase)instance;
            that.TabTemplate = (global::Windows.UI.Xaml.DataTemplate)Value;
        }
        private object get_466_RibbonControlBase_TabTemplateSelector(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.RibbonControlBase)instance;
            return that.TabTemplateSelector;
        }
        private void set_466_RibbonControlBase_TabTemplateSelector(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.RibbonControlBase)instance;
            that.TabTemplateSelector = (global::Windows.UI.Xaml.Controls.DataTemplateSelector)Value;
        }
        private object get_467_RibbonControlBase_SelectedTabCaption(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.RibbonControlBase)instance;
            return that.SelectedTabCaption;
        }
        private void set_467_RibbonControlBase_SelectedTabCaption(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.RibbonControlBase)instance;
            that.SelectedTabCaption = (global::System.String)Value;
        }
        private object get_468_RibbonControlBase_ViewMode(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.RibbonControlBase)instance;
            return that.ViewMode;
        }
        private void set_468_RibbonControlBase_ViewMode(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.RibbonControlBase)instance;
            that.ViewMode = (global::DevExpress.UI.Xaml.Ribbon.RibbonViewMode)Value;
        }
        private object get_469_RibbonControlBase_State(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.RibbonControlBase)instance;
            return that.State;
        }
        private void set_469_RibbonControlBase_State(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.RibbonControlBase)instance;
            that.State = (global::DevExpress.UI.Xaml.Ribbon.RibbonState)Value;
        }
        private object get_470_RibbonControlBase_HeaderItemTemplate(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.RibbonControlBase)instance;
            return that.HeaderItemTemplate;
        }
        private void set_470_RibbonControlBase_HeaderItemTemplate(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.RibbonControlBase)instance;
            that.HeaderItemTemplate = (global::Windows.UI.Xaml.DataTemplate)Value;
        }
        private object get_471_RibbonControlBase_HeaderItemContainerStyle(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.RibbonControlBase)instance;
            return that.HeaderItemContainerStyle;
        }
        private void set_471_RibbonControlBase_HeaderItemContainerStyle(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.RibbonControlBase)instance;
            that.HeaderItemContainerStyle = (global::Windows.UI.Xaml.Style)Value;
        }
        private object get_472_RibbonControlBase_ContextualHeaderItemTemplate(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.RibbonControlBase)instance;
            return that.ContextualHeaderItemTemplate;
        }
        private void set_472_RibbonControlBase_ContextualHeaderItemTemplate(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.RibbonControlBase)instance;
            that.ContextualHeaderItemTemplate = (global::Windows.UI.Xaml.DataTemplate)Value;
        }
        private object get_473_RibbonControlBase_ContextualHeaderItemContainerStyle(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.RibbonControlBase)instance;
            return that.ContextualHeaderItemContainerStyle;
        }
        private void set_473_RibbonControlBase_ContextualHeaderItemContainerStyle(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.RibbonControlBase)instance;
            that.ContextualHeaderItemContainerStyle = (global::Windows.UI.Xaml.Style)Value;
        }
        private object get_474_RibbonControlBase_ChangeRibbonStateCommand(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.RibbonControlBase)instance;
            return that.ChangeRibbonStateCommand;
        }
        private object get_475_RibbonControlBase_ChangeRibbonViewModeCommand(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.RibbonControlBase)instance;
            return that.ChangeRibbonViewModeCommand;
        }
        private object get_476_RibbonColorEditBase_ColorGroups(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.RibbonColorEditBase)instance;
            return that.ColorGroups;
        }
        private object get_477_RibbonColorEditBase_SelectedBrush(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.RibbonColorEditBase)instance;
            return that.SelectedBrush;
        }
        private void set_477_RibbonColorEditBase_SelectedBrush(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.RibbonColorEditBase)instance;
            that.SelectedBrush = (global::Windows.UI.Xaml.Media.SolidColorBrush)Value;
        }
        private object get_478_RibbonColorEditBase_SelectedColor(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.RibbonColorEditBase)instance;
            return that.SelectedColor;
        }
        private void set_478_RibbonColorEditBase_SelectedColor(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.RibbonColorEditBase)instance;
            that.SelectedColor = (global::Windows.UI.Color)Value;
        }
        private object get_479_RibbonColorEditBase_DefaultColor(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.RibbonColorEditBase)instance;
            return that.DefaultColor;
        }
        private void set_479_RibbonColorEditBase_DefaultColor(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.RibbonColorEditBase)instance;
            that.DefaultColor = (global::Windows.UI.Color)Value;
        }
        private object get_480_RibbonColorEditBase_Caption(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.RibbonColorEditBase)instance;
            return that.Caption;
        }
        private void set_480_RibbonColorEditBase_Caption(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.RibbonColorEditBase)instance;
            that.Caption = (global::System.String)Value;
        }
        private object get_481_RibbonColorEditBase_ShowIndicator(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.RibbonColorEditBase)instance;
            return that.ShowIndicator;
        }
        private void set_481_RibbonColorEditBase_ShowIndicator(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.RibbonColorEditBase)instance;
            that.ShowIndicator = (global::System.Boolean)Value;
        }
        private object get_482_RibbonSplitItemBase_Command(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.RibbonSplitItemBase)instance;
            return that.Command;
        }
        private void set_482_RibbonSplitItemBase_Command(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.RibbonSplitItemBase)instance;
            that.Command = (global::System.Windows.Input.ICommand)Value;
        }
        private object get_483_RibbonSplitItemBase_CommandParameter(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.RibbonSplitItemBase)instance;
            return that.CommandParameter;
        }
        private void set_483_RibbonSplitItemBase_CommandParameter(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.RibbonSplitItemBase)instance;
            that.CommandParameter = (global::System.Object)Value;
        }
        private object get_484_RibbonMenuItemBase_FlyoutCaption(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.Internal.RibbonMenuItemBase)instance;
            return that.FlyoutCaption;
        }
        private void set_484_RibbonMenuItemBase_FlyoutCaption(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.Internal.RibbonMenuItemBase)instance;
            that.FlyoutCaption = (global::System.String)Value;
        }
        private object get_485_RibbonMenuItemBase_IsOpen(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.Internal.RibbonMenuItemBase)instance;
            return that.IsOpen;
        }
        private void set_485_RibbonMenuItemBase_IsOpen(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.Internal.RibbonMenuItemBase)instance;
            that.IsOpen = (global::System.Boolean)Value;
        }
        private object get_486_RibbonMenuItemBase_FlyoutSettings(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.Internal.RibbonMenuItemBase)instance;
            return that.FlyoutSettings;
        }
        private void set_486_RibbonMenuItemBase_FlyoutSettings(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.Internal.RibbonMenuItemBase)instance;
            that.FlyoutSettings = (global::DevExpress.UI.Xaml.FlyoutSettingsBase)Value;
        }
        private object get_487_RibbonFontEditBase_ShrinkPriority(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.RibbonFontEditBase)instance;
            return that.ShrinkPriority;
        }
        private void set_487_RibbonFontEditBase_ShrinkPriority(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.RibbonFontEditBase)instance;
            that.ShrinkPriority = (global::DevExpress.UI.Xaml.Ribbon.CollapsePriority)Value;
        }
        private object get_488_RibbonFontEditBase_CollapsePriority(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.RibbonFontEditBase)instance;
            return that.CollapsePriority;
        }
        private void set_488_RibbonFontEditBase_CollapsePriority(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.RibbonFontEditBase)instance;
            that.CollapsePriority = (global::DevExpress.UI.Xaml.Ribbon.CollapsePriority)Value;
        }
        private object get_489_RibbonFontEditBase_CollapsedGroupName(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.RibbonFontEditBase)instance;
            return that.CollapsedGroupName;
        }
        private void set_489_RibbonFontEditBase_CollapsedGroupName(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.RibbonFontEditBase)instance;
            that.CollapsedGroupName = (global::System.String)Value;
        }
        private object get_490_RibbonFontEditBase_ShowInFlyoutOnly(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.RibbonFontEditBase)instance;
            return that.ShowInFlyoutOnly;
        }
        private void set_490_RibbonFontEditBase_ShowInFlyoutOnly(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.RibbonFontEditBase)instance;
            that.ShowInFlyoutOnly = (global::System.Boolean)Value;
        }
        private object get_491_RibbonFontEditBase_FlyoutFlowBreak(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.RibbonFontEditBase)instance;
            return that.FlyoutFlowBreak;
        }
        private void set_491_RibbonFontEditBase_FlyoutFlowBreak(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.RibbonFontEditBase)instance;
            that.FlyoutFlowBreak = (global::System.Boolean)Value;
        }
        private object get_492_RibbonFontEditBase_FlyoutFlowBreakWithSeparator(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.RibbonFontEditBase)instance;
            return that.FlyoutFlowBreakWithSeparator;
        }
        private void set_492_RibbonFontEditBase_FlyoutFlowBreakWithSeparator(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.RibbonFontEditBase)instance;
            that.FlyoutFlowBreakWithSeparator = (global::System.Boolean)Value;
        }
        private object get_493_RibbonFontEditBase_FlyoutSameRow(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.RibbonFontEditBase)instance;
            return that.FlyoutSameRow;
        }
        private void set_493_RibbonFontEditBase_FlyoutSameRow(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.RibbonFontEditBase)instance;
            that.FlyoutSameRow = (global::System.Boolean)Value;
        }
        private object get_494_FontEdit_ActualSelectedFontSize(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Editors.FontEdit)instance;
            return that.ActualSelectedFontSize;
        }
        private void set_494_FontEdit_ActualSelectedFontSize(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Editors.FontEdit)instance;
            that.ActualSelectedFontSize = (global::System.Object)Value;
        }
        private object get_495_FontEdit_ActualSelectedFontFamily(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Editors.FontEdit)instance;
            return that.ActualSelectedFontFamily;
        }
        private void set_495_FontEdit_ActualSelectedFontFamily(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Editors.FontEdit)instance;
            that.ActualSelectedFontFamily = (global::System.Object)Value;
        }
        private object get_496_FontEdit_SelectedFontSize(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Editors.FontEdit)instance;
            return that.SelectedFontSize;
        }
        private void set_496_FontEdit_SelectedFontSize(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Editors.FontEdit)instance;
            that.SelectedFontSize = (global::System.Double)Value;
        }
        private object get_497_FontEdit_FontSizesSource(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Editors.FontEdit)instance;
            return that.FontSizesSource;
        }
        private void set_497_FontEdit_FontSizesSource(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Editors.FontEdit)instance;
            that.FontSizesSource = (global::System.Object)Value;
        }
        private object get_498_FontEdit_FontFamilyItemTemplate(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Editors.FontEdit)instance;
            return that.FontFamilyItemTemplate;
        }
        private void set_498_FontEdit_FontFamilyItemTemplate(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Editors.FontEdit)instance;
            that.FontFamilyItemTemplate = (global::Windows.UI.Xaml.DataTemplate)Value;
        }
        private object get_499_FontEdit_SelectedFontFamilyName(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Editors.FontEdit)instance;
            return that.SelectedFontFamilyName;
        }
        private void set_499_FontEdit_SelectedFontFamilyName(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Editors.FontEdit)instance;
            that.SelectedFontFamilyName = (global::System.String)Value;
        }
        private object get_500_FontEdit_FontsSource(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Editors.FontEdit)instance;
            return that.FontsSource;
        }
        private void set_500_FontEdit_FontsSource(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Editors.FontEdit)instance;
            that.FontsSource = (global::System.Object)Value;
        }
        private object get_501_FontEdit_SelectedFontFamily(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Editors.FontEdit)instance;
            return that.SelectedFontFamily;
        }
        private void set_501_FontEdit_SelectedFontFamily(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Editors.FontEdit)instance;
            that.SelectedFontFamily = (global::Windows.UI.Xaml.Media.FontFamily)Value;
        }
        private object get_502_FontEdit_IsFontFamilyDropDownOpen(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Editors.FontEdit)instance;
            return that.IsFontFamilyDropDownOpen;
        }
        private void set_502_FontEdit_IsFontFamilyDropDownOpen(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Editors.FontEdit)instance;
            that.IsFontFamilyDropDownOpen = (global::System.Boolean)Value;
        }
        private object get_503_FontEdit_IsFontSizeDropDownOpen(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Editors.FontEdit)instance;
            return that.IsFontSizeDropDownOpen;
        }
        private void set_503_FontEdit_IsFontSizeDropDownOpen(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Editors.FontEdit)instance;
            that.IsFontSizeDropDownOpen = (global::System.Boolean)Value;
        }
        private object get_504_FontEdit_AvailableFonts(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Editors.FontEdit)instance;
            return that.AvailableFonts;
        }
        private object get_505_FontEdit_AvailableFontSizes(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Editors.FontEdit)instance;
            return that.AvailableFontSizes;
        }
        private object get_506_RibbonMenuButton_Items(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.RibbonMenuButton)instance;
            return that.Items;
        }
        private object get_507_RibbonMenuButtonBase_ItemsSource(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.Internal.RibbonMenuButtonBase<global::DevExpress.UI.Xaml.Ribbon.IRibbonItem>)instance;
            return that.ItemsSource;
        }
        private void set_507_RibbonMenuButtonBase_ItemsSource(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.Internal.RibbonMenuButtonBase<global::DevExpress.UI.Xaml.Ribbon.IRibbonItem>)instance;
            that.ItemsSource = (global::System.Collections.Generic.IEnumerable<global::DevExpress.UI.Xaml.Ribbon.IRibbonItem>)Value;
        }
        private object get_508_RibbonMenuButtonBase_ItemTemplate(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.Internal.RibbonMenuButtonBase)instance;
            return that.ItemTemplate;
        }
        private void set_508_RibbonMenuButtonBase_ItemTemplate(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.Internal.RibbonMenuButtonBase)instance;
            that.ItemTemplate = (global::Windows.UI.Xaml.DataTemplate)Value;
        }
        private object get_509_RibbonMenuButtonBase_ItemTemplateSelector(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.Internal.RibbonMenuButtonBase)instance;
            return that.ItemTemplateSelector;
        }
        private void set_509_RibbonMenuButtonBase_ItemTemplateSelector(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.Internal.RibbonMenuButtonBase)instance;
            that.ItemTemplateSelector = (global::Windows.UI.Xaml.Controls.DataTemplateSelector)Value;
        }
        private object get_510_RibbonMenuButtonBase_FlyoutColumnCount(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.Internal.RibbonMenuButtonBase)instance;
            return that.FlyoutColumnCount;
        }
        private void set_510_RibbonMenuButtonBase_FlyoutColumnCount(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.Internal.RibbonMenuButtonBase)instance;
            that.FlyoutColumnCount = (global::System.Int32)Value;
        }
        private object get_511_ToolbarMenuButton_Items(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.ToolbarMenuButton)instance;
            return that.Items;
        }
        private object get_512_RibbonMenuButtonBase_ItemsSource(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.Internal.RibbonMenuButtonBase<global::DevExpress.UI.Xaml.Ribbon.IToolbarItem>)instance;
            return that.ItemsSource;
        }
        private void set_512_RibbonMenuButtonBase_ItemsSource(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.Internal.RibbonMenuButtonBase<global::DevExpress.UI.Xaml.Ribbon.IToolbarItem>)instance;
            that.ItemsSource = (global::System.Collections.Generic.IEnumerable<global::DevExpress.UI.Xaml.Ribbon.IToolbarItem>)Value;
        }
        private object get_513_ContextToolbarMenuButton_Items(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.ContextToolbarMenuButton)instance;
            return that.Items;
        }
        private object get_514_ContextToolbarMenuButton_Orientation(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.ContextToolbarMenuButton)instance;
            return that.Orientation;
        }
        private void set_514_ContextToolbarMenuButton_Orientation(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.ContextToolbarMenuButton)instance;
            that.Orientation = (global::Windows.UI.Xaml.Controls.Orientation)Value;
        }
        private object get_515_RibbonMenuButtonBase_ItemsSource(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.Internal.RibbonMenuButtonBase<global::DevExpress.UI.Xaml.Ribbon.IContextToolbarItem>)instance;
            return that.ItemsSource;
        }
        private void set_515_RibbonMenuButtonBase_ItemsSource(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.Internal.RibbonMenuButtonBase<global::DevExpress.UI.Xaml.Ribbon.IContextToolbarItem>)instance;
            that.ItemsSource = (global::System.Collections.Generic.IEnumerable<global::DevExpress.UI.Xaml.Ribbon.IContextToolbarItem>)Value;
        }
        private object get_516_RibbonToolbarMenuButton_Items(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.RibbonToolbarMenuButton)instance;
            return that.Items;
        }
        private object get_517_RibbonMenuButtonBase_ItemsSource(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.Internal.RibbonMenuButtonBase<global::DevExpress.UI.Xaml.Ribbon.IRibbonToolbarItem>)instance;
            return that.ItemsSource;
        }
        private void set_517_RibbonMenuButtonBase_ItemsSource(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.Internal.RibbonMenuButtonBase<global::DevExpress.UI.Xaml.Ribbon.IRibbonToolbarItem>)instance;
            that.ItemsSource = (global::System.Collections.Generic.IEnumerable<global::DevExpress.UI.Xaml.Ribbon.IRibbonToolbarItem>)Value;
        }
        private object get_518_RibbonToolbarControl_Tabs(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.RibbonToolbarControl)instance;
            return that.Tabs;
        }
        private object get_519_RibbonToolbarTab_Groups(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.RibbonToolbarTab)instance;
            return that.Groups;
        }
        private object get_520_RibbonToolbarGroup_Items(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.RibbonToolbarGroup)instance;
            return that.Items;
        }
        private object get_521_RibbonToolbarControl_HelpPane(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.RibbonToolbarControl)instance;
            return that.HelpPane;
        }
        private void set_521_RibbonToolbarControl_HelpPane(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.RibbonToolbarControl)instance;
            that.HelpPane = (global::DevExpress.UI.Xaml.Ribbon.ToolbarHelpPane)Value;
        }
        private object get_522_RibbonToolbarControl_HotItemsColumnsCount(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.RibbonToolbarControl)instance;
            return that.HotItemsColumnsCount;
        }
        private void set_522_RibbonToolbarControl_HotItemsColumnsCount(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.RibbonToolbarControl)instance;
            that.HotItemsColumnsCount = (global::System.Int32)Value;
        }
        private object get_523_RibbonToolbarControl_SelectedTab(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.RibbonToolbarControl)instance;
            return that.SelectedTab;
        }
        private void set_523_RibbonToolbarControl_SelectedTab(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.RibbonToolbarControl)instance;
            that.SelectedTab = (global::DevExpress.UI.Xaml.Ribbon.RibbonToolbarTab)Value;
        }
        private object get_524_RibbonToolbarControl_HotItems(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.RibbonToolbarControl)instance;
            return that.HotItems;
        }
        private object get_525_ToolbarControl_Groups(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.ToolbarControl)instance;
            return that.Groups;
        }
        private object get_526_ToolbarGroup_Items(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.ToolbarGroup)instance;
            return that.Items;
        }
        private object get_527_ToolbarControl_GroupTemplateSelector(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.ToolbarControl)instance;
            return that.GroupTemplateSelector;
        }
        private void set_527_ToolbarControl_GroupTemplateSelector(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.ToolbarControl)instance;
            that.GroupTemplateSelector = (global::Windows.UI.Xaml.Controls.DataTemplateSelector)Value;
        }
        private object get_528_ToolbarControl_GroupTemplate(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.ToolbarControl)instance;
            return that.GroupTemplate;
        }
        private void set_528_ToolbarControl_GroupTemplate(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.ToolbarControl)instance;
            that.GroupTemplate = (global::Windows.UI.Xaml.DataTemplate)Value;
        }
        private object get_529_ToolbarControl_GroupsSource(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.ToolbarControl)instance;
            return that.GroupsSource;
        }
        private void set_529_ToolbarControl_GroupsSource(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.ToolbarControl)instance;
            that.GroupsSource = (global::System.Object)Value;
        }
        private object get_530_ToolbarControl_Orientation(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.ToolbarControl)instance;
            return that.Orientation;
        }
        private void set_530_ToolbarControl_Orientation(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.ToolbarControl)instance;
            that.Orientation = (global::Windows.UI.Xaml.Controls.Orientation)Value;
        }
        private object get_531_ToolbarControl_Placeholder(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.ToolbarControl)instance;
            return that.Placeholder;
        }
        private object get_532_FlyoutCalculatorBase_VisibleItems(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.Internal.FlyoutCalculatorBase)instance;
            return that.VisibleItems;
        }
        private void set_532_FlyoutCalculatorBase_VisibleItems(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.Internal.FlyoutCalculatorBase)instance;
            that.VisibleItems = (global::System.Collections.Generic.IEnumerable<global::DevExpress.UI.Xaml.Ribbon.IRibbonItemBase>)Value;
        }
        private object get_533_FlyoutCalculatorBase_ColumnCount(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.Internal.FlyoutCalculatorBase)instance;
            return that.ColumnCount;
        }
        private void set_533_FlyoutCalculatorBase_ColumnCount(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.Internal.FlyoutCalculatorBase)instance;
            that.ColumnCount = (global::System.Int32)Value;
        }
        private object get_534_FlyoutCalculatorBase_SeparatorManager(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.Internal.FlyoutCalculatorBase)instance;
            return that.SeparatorManager;
        }
        private void set_534_FlyoutCalculatorBase_SeparatorManager(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.Internal.FlyoutCalculatorBase)instance;
            that.SeparatorManager = (global::DevExpress.UI.Xaml.Ribbon.Internal.ISeparatorManager)Value;
        }
        private object get_535_RibbonTabsControl_ItemsSource(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.Internal.RibbonTabsControl)instance;
            return that.ItemsSource;
        }
        private void set_535_RibbonTabsControl_ItemsSource(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.Internal.RibbonTabsControl)instance;
            that.ItemsSource = (global::System.Object)Value;
        }
        private object get_536_RibbonTabsControl_HeaderItemTemplate(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.Internal.RibbonTabsControl)instance;
            return that.HeaderItemTemplate;
        }
        private void set_536_RibbonTabsControl_HeaderItemTemplate(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.Internal.RibbonTabsControl)instance;
            that.HeaderItemTemplate = (global::Windows.UI.Xaml.DataTemplate)Value;
        }
        private object get_537_RibbonTabsControl_HeaderItemContainerStyle(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.Internal.RibbonTabsControl)instance;
            return that.HeaderItemContainerStyle;
        }
        private void set_537_RibbonTabsControl_HeaderItemContainerStyle(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.Internal.RibbonTabsControl)instance;
            that.HeaderItemContainerStyle = (global::Windows.UI.Xaml.Style)Value;
        }
        private object get_538_RibbonTabsControl_ContextualHeaderItemTemplate(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.Internal.RibbonTabsControl)instance;
            return that.ContextualHeaderItemTemplate;
        }
        private void set_538_RibbonTabsControl_ContextualHeaderItemTemplate(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.Internal.RibbonTabsControl)instance;
            that.ContextualHeaderItemTemplate = (global::Windows.UI.Xaml.DataTemplate)Value;
        }
        private object get_539_RibbonTabsControl_ContextualHeaderItemContainerStyle(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.Internal.RibbonTabsControl)instance;
            return that.ContextualHeaderItemContainerStyle;
        }
        private void set_539_RibbonTabsControl_ContextualHeaderItemContainerStyle(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.Internal.RibbonTabsControl)instance;
            that.ContextualHeaderItemContainerStyle = (global::Windows.UI.Xaml.Style)Value;
        }
        private void set_540_RibbonTabsControl_BackstageView(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.Internal.RibbonTabsControl)instance;
            that.BackstageView = (global::DevExpress.UI.Xaml.Ribbon.BackstageView)Value;
        }
        private object get_541_RibbonTabsControl_SelectedTab(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.Internal.RibbonTabsControl)instance;
            return that.SelectedTab;
        }
        private void set_541_RibbonTabsControl_SelectedTab(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.Internal.RibbonTabsControl)instance;
            that.SelectedTab = (global::DevExpress.UI.Xaml.Ribbon.RibbonTabBase)Value;
        }
        private object get_542_RibbonTabsControl_Tabs(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Ribbon.Internal.RibbonTabsControl)instance;
            return that.Tabs;
        }
        private object get_543_GalleryGroupContainerGenerator_GroupHeaderTemplate(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.GalleryGroupContainerGenerator)instance;
            return that.GroupHeaderTemplate;
        }
        private void set_543_GalleryGroupContainerGenerator_GroupHeaderTemplate(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.GalleryGroupContainerGenerator)instance;
            that.GroupHeaderTemplate = (global::Windows.UI.Xaml.DataTemplate)Value;
        }
        private object get_544_GalleryGroupContainerGenerator_ItemContainerGenerator(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.GalleryGroupContainerGenerator)instance;
            return that.ItemContainerGenerator;
        }
        private void set_544_GalleryGroupContainerGenerator_ItemContainerGenerator(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.GalleryGroupContainerGenerator)instance;
            that.ItemContainerGenerator = (global::DevExpress.UI.Xaml.GalleryItemContainerGeneratorBase)Value;
        }
        private object get_545_GalleryGroupContainerGenerator_GroupItemsPath(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.GalleryGroupContainerGenerator)instance;
            return that.GroupItemsPath;
        }
        private void set_545_GalleryGroupContainerGenerator_GroupItemsPath(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.GalleryGroupContainerGenerator)instance;
            that.GroupItemsPath = (global::System.String)Value;
        }
        private object get_546_GalleryGroupContainerGenerator_MaxColCount(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.GalleryGroupContainerGenerator)instance;
            return that.MaxColCount;
        }
        private void set_546_GalleryGroupContainerGenerator_MaxColCount(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.GalleryGroupContainerGenerator)instance;
            that.MaxColCount = (global::System.Int32)Value;
        }
        private object get_547_GalleryGroupContainerGenerator_ActualGroupItemsPath(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.GalleryGroupContainerGenerator)instance;
            return that.ActualGroupItemsPath;
        }
        private object get_548_GalleryItemGroup_Items(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.GalleryItemGroup)instance;
            return that.Items;
        }
        private object get_549_GalleryItemGroup_Title(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.GalleryItemGroup)instance;
            return that.Title;
        }
        private void set_549_GalleryItemGroup_Title(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.GalleryItemGroup)instance;
            that.Title = (global::System.String)Value;
        }
        private object get_550_DXExpander_Child(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Internal.DXExpander)instance;
            return that.Child;
        }
        private void set_550_DXExpander_Child(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Internal.DXExpander)instance;
            that.Child = (global::Windows.UI.Xaml.UIElement)Value;
        }
        private object get_551_DXExpander_IsExpanded(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Internal.DXExpander)instance;
            return that.IsExpanded;
        }
        private void set_551_DXExpander_IsExpanded(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Internal.DXExpander)instance;
            that.IsExpanded = (global::System.Boolean)Value;
        }
        private object get_552_DXExpander_ExpandStoryboard(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Internal.DXExpander)instance;
            return that.ExpandStoryboard;
        }
        private void set_552_DXExpander_ExpandStoryboard(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Internal.DXExpander)instance;
            that.ExpandStoryboard = (global::Windows.UI.Xaml.Media.Animation.Storyboard)Value;
        }
        private object get_553_DXExpander_CollapseStoryboard(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Internal.DXExpander)instance;
            return that.CollapseStoryboard;
        }
        private void set_553_DXExpander_CollapseStoryboard(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Internal.DXExpander)instance;
            that.CollapseStoryboard = (global::Windows.UI.Xaml.Media.Animation.Storyboard)Value;
        }
        private object get_554_DXExpander_Location(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Internal.DXExpander)instance;
            return that.Location;
        }
        private void set_554_DXExpander_Location(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Internal.DXExpander)instance;
            that.Location = (global::Windows.UI.Xaml.Controls.Primitives.EdgeTransitionLocation)Value;
        }
        private object get_555_DXExpander_AnimationDuration(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Internal.DXExpander)instance;
            return that.AnimationDuration;
        }
        private void set_555_DXExpander_AnimationDuration(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Internal.DXExpander)instance;
            that.AnimationDuration = (global::System.TimeSpan)Value;
        }
        private object get_556_DXExpander_ClipToBounds(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Internal.DXExpander)instance;
            return that.ClipToBounds;
        }
        private void set_556_DXExpander_ClipToBounds(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Internal.DXExpander)instance;
            that.ClipToBounds = (global::System.Boolean)Value;
        }
        private object get_557_DXExpander_DefineLayoutFromLocation(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Internal.DXExpander)instance;
            return that.DefineLayoutFromLocation;
        }
        private void set_557_DXExpander_DefineLayoutFromLocation(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Internal.DXExpander)instance;
            that.DefineLayoutFromLocation = (global::System.Boolean)Value;
        }
        private object get_558_DXExpander_Children(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Internal.DXExpander)instance;
            return that.Children;
        }
        private object get_559_DXExpander_IsLoaded(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Internal.DXExpander)instance;
            return that.IsLoaded;
        }
        private object get_560_NestedMenuFlyoutControl_IsHeaderVisible(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Internal.NestedMenuFlyoutControl)instance;
            return that.IsHeaderVisible;
        }
        private object get_561_NestedMenuFlyoutControl_BackButtonEnabledMode(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Internal.NestedMenuFlyoutControl)instance;
            return that.BackButtonEnabledMode;
        }
        private void set_561_NestedMenuFlyoutControl_BackButtonEnabledMode(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Internal.NestedMenuFlyoutControl)instance;
            that.BackButtonEnabledMode = (global::DevExpress.UI.Xaml.Internal.EnabledMode)Value;
        }
        private object get_562_NestedMenuFlyoutControl_HeaderEnabledMode(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Internal.NestedMenuFlyoutControl)instance;
            return that.HeaderEnabledMode;
        }
        private void set_562_NestedMenuFlyoutControl_HeaderEnabledMode(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Internal.NestedMenuFlyoutControl)instance;
            that.HeaderEnabledMode = (global::DevExpress.UI.Xaml.Internal.EnabledMode)Value;
        }
        private object get_563_NestedMenuFlyoutControl_Orientation(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Internal.NestedMenuFlyoutControl)instance;
            return that.Orientation;
        }
        private void set_563_NestedMenuFlyoutControl_Orientation(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Internal.NestedMenuFlyoutControl)instance;
            that.Orientation = (global::Windows.UI.Xaml.Controls.Orientation)Value;
        }
        private object get_564_NestedMenuFlyoutControl_HeaderContentTemplate(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Internal.NestedMenuFlyoutControl)instance;
            return that.HeaderContentTemplate;
        }
        private void set_564_NestedMenuFlyoutControl_HeaderContentTemplate(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Internal.NestedMenuFlyoutControl)instance;
            that.HeaderContentTemplate = (global::Windows.UI.Xaml.DataTemplate)Value;
        }
        private object get_565_NestedMenuFlyoutControl_HeaderContent(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Internal.NestedMenuFlyoutControl)instance;
            return that.HeaderContent;
        }
        private void set_565_NestedMenuFlyoutControl_HeaderContent(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Internal.NestedMenuFlyoutControl)instance;
            that.HeaderContent = (global::System.Object)Value;
        }
        private object get_566_NestedMenuFlyoutControl_BackCommand(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Internal.NestedMenuFlyoutControl)instance;
            return that.BackCommand;
        }
        private object get_567_NestedMenuFlyoutControl_PreviousFlyout(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Internal.NestedMenuFlyoutControl)instance;
            return that.PreviousFlyout;
        }
        private object get_568_MenuFlyoutControl_CloseOnTargetClick(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Internal.MenuFlyoutControl)instance;
            return that.CloseOnTargetClick;
        }
        private void set_568_MenuFlyoutControl_CloseOnTargetClick(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Internal.MenuFlyoutControl)instance;
            that.CloseOnTargetClick = (global::System.Boolean)Value;
        }
        private object get_569_MenuFlyoutControl_IsLightDismissEnabled(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Internal.MenuFlyoutControl)instance;
            return that.IsLightDismissEnabled;
        }
        private void set_569_MenuFlyoutControl_IsLightDismissEnabled(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Internal.MenuFlyoutControl)instance;
            that.IsLightDismissEnabled = (global::System.Boolean)Value;
        }
        private object get_570_FlyoutBase_ActualSettings(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Native.FlyoutBase)instance;
            return that.ActualSettings;
        }
        private object get_571_FlyoutBase_IndicatorDirection(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Native.FlyoutBase)instance;
            return that.IndicatorDirection;
        }
        private object get_572_FlyoutBase_AnimationDuration(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Native.FlyoutBase)instance;
            return that.AnimationDuration;
        }
        private void set_572_FlyoutBase_AnimationDuration(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Native.FlyoutBase)instance;
            that.AnimationDuration = (global::Windows.UI.Xaml.Duration)Value;
        }
        private object get_573_FlyoutBase_Settings(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Native.FlyoutBase)instance;
            return that.Settings;
        }
        private void set_573_FlyoutBase_Settings(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Native.FlyoutBase)instance;
            that.Settings = (global::DevExpress.UI.Xaml.FlyoutSettingsBase)Value;
        }
        private object get_574_FlyoutBase_ContainerStyle(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Native.FlyoutBase)instance;
            return that.ContainerStyle;
        }
        private void set_574_FlyoutBase_ContainerStyle(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Native.FlyoutBase)instance;
            that.ContainerStyle = (global::Windows.UI.Xaml.Style)Value;
        }
        private object get_575_FlyoutBase_ActualIsOpen(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Native.FlyoutBase)instance;
            return that.ActualIsOpen;
        }
        private void set_575_FlyoutBase_ActualIsOpen(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Native.FlyoutBase)instance;
            that.ActualIsOpen = (global::System.Boolean)Value;
        }
        private object get_576_FlyoutBase_TargetBounds(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Native.FlyoutBase)instance;
            return that.TargetBounds;
        }
        private void set_576_FlyoutBase_TargetBounds(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Native.FlyoutBase)instance;
            that.TargetBounds = (global::Windows.Foundation.Rect)Value;
        }
        private object get_577_FlyoutBase_AllowMoveAnimation(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Native.FlyoutBase)instance;
            return that.AllowMoveAnimation;
        }
        private void set_577_FlyoutBase_AllowMoveAnimation(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Native.FlyoutBase)instance;
            that.AllowMoveAnimation = (global::System.Boolean)Value;
        }
        private object get_578_FlyoutBase_IsInitialized(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Native.FlyoutBase)instance;
            return that.IsInitialized;
        }
        private object get_579_FlyoutBase_CurrentAnimation(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Native.FlyoutBase)instance;
            return that.CurrentAnimation;
        }
        private object get_580_FlyoutBase_AnimationInProgress(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Native.FlyoutBase)instance;
            return that.AnimationInProgress;
        }
        private object get_581_FlyoutBase_AllowRecreateContent(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Native.FlyoutBase)instance;
            return that.AllowRecreateContent;
        }
        private void set_581_FlyoutBase_AllowRecreateContent(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Native.FlyoutBase)instance;
            that.AllowRecreateContent = (global::System.Boolean)Value;
        }
        private object get_582_FlyoutBase_CloseCommand(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Native.FlyoutBase)instance;
            return that.CloseCommand;
        }
        private object get_583_FlyoutBase_OpenCommand(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Native.FlyoutBase)instance;
            return that.OpenCommand;
        }
        private object get_584_FlyoutBase_RenderGrid(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Native.FlyoutBase)instance;
            return that.RenderGrid;
        }
        private object get_585_PopupBase_Child(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Native.PopupBase)instance;
            return that.Child;
        }
        private void set_585_PopupBase_Child(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Native.PopupBase)instance;
            that.Child = (global::Windows.UI.Xaml.FrameworkElement)Value;
        }
        private object get_586_PopupBase_HorizontalOffset(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Native.PopupBase)instance;
            return that.HorizontalOffset;
        }
        private void set_586_PopupBase_HorizontalOffset(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Native.PopupBase)instance;
            that.HorizontalOffset = (global::System.Double)Value;
        }
        private object get_587_PopupBase_VerticalOffset(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Native.PopupBase)instance;
            return that.VerticalOffset;
        }
        private void set_587_PopupBase_VerticalOffset(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Native.PopupBase)instance;
            that.VerticalOffset = (global::System.Double)Value;
        }
        private object get_588_PopupBase_IsOpen(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Native.PopupBase)instance;
            return that.IsOpen;
        }
        private void set_588_PopupBase_IsOpen(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Native.PopupBase)instance;
            that.IsOpen = (global::System.Boolean)Value;
        }
        private object get_589_PopupBase_Placement(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Native.PopupBase)instance;
            return that.Placement;
        }
        private void set_589_PopupBase_Placement(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Native.PopupBase)instance;
            that.Placement = (global::DevExpress.UI.Xaml.Native.PlacementMode)Value;
        }
        private object get_590_PopupBase_PlacementTarget(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Native.PopupBase)instance;
            return that.PlacementTarget;
        }
        private void set_590_PopupBase_PlacementTarget(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Native.PopupBase)instance;
            that.PlacementTarget = (global::Windows.UI.Xaml.UIElement)Value;
        }
        private object get_591_PopupBase_StaysOpen(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Native.PopupBase)instance;
            return that.StaysOpen;
        }
        private void set_591_PopupBase_StaysOpen(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Native.PopupBase)instance;
            that.StaysOpen = (global::System.Boolean)Value;
        }
        private object get_592_PopupBase_AllowOutOfScreen(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Native.PopupBase)instance;
            return that.AllowOutOfScreen;
        }
        private void set_592_PopupBase_AllowOutOfScreen(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Native.PopupBase)instance;
            that.AllowOutOfScreen = (global::System.Boolean)Value;
        }
        private object get_593_PopupBase_ChildContainer(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Native.PopupBase)instance;
            return that.ChildContainer;
        }
        private object get_594_PopupBase_IsLoaded(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Native.PopupBase)instance;
            return that.IsLoaded;
        }
        private object get_595_SelectorControl_ItemsSource(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Internal.SelectorControl)instance;
            return that.ItemsSource;
        }
        private void set_595_SelectorControl_ItemsSource(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Internal.SelectorControl)instance;
            that.ItemsSource = (global::System.Object)Value;
        }
        private object get_596_SelectorControl_SelectedIndex(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Internal.SelectorControl)instance;
            return that.SelectedIndex;
        }
        private void set_596_SelectorControl_SelectedIndex(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Internal.SelectorControl)instance;
            that.SelectedIndex = (global::System.Int32)Value;
        }
        private object get_597_SelectorControl_SelectedItem(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Internal.SelectorControl)instance;
            return that.SelectedItem;
        }
        private void set_597_SelectorControl_SelectedItem(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Internal.SelectorControl)instance;
            that.SelectedItem = (global::System.Object)Value;
        }
        private object get_598_SelectorControl_SelectionEmptyAction(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Internal.SelectorControl)instance;
            return that.SelectionEmptyAction;
        }
        private void set_598_SelectorControl_SelectionEmptyAction(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Internal.SelectorControl)instance;
            that.SelectionEmptyAction = (global::DevExpress.UI.Xaml.Internal.SelectionEmptyAction)Value;
        }
        private object get_599_SelectorControl_CanSelect(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Internal.SelectorControl)instance;
            return that.CanSelect;
        }
        private void set_599_SelectorControl_CanSelect(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Internal.SelectorControl)instance;
            that.CanSelect = (global::System.Boolean)Value;
        }
        private object get_600_SelectorControlBase_Orientation(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Internal.SelectorControlBase)instance;
            return that.Orientation;
        }
        private void set_600_SelectorControlBase_Orientation(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Internal.SelectorControlBase)instance;
            that.Orientation = (global::Windows.UI.Xaml.Controls.Orientation)Value;
        }
        private object get_601_SelectorControlBase_ItemTemplate(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Internal.SelectorControlBase)instance;
            return that.ItemTemplate;
        }
        private void set_601_SelectorControlBase_ItemTemplate(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Internal.SelectorControlBase)instance;
            that.ItemTemplate = (global::Windows.UI.Xaml.DataTemplate)Value;
        }
        private object get_602_SelectorControlBase_ItemTemplateSelector(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Internal.SelectorControlBase)instance;
            return that.ItemTemplateSelector;
        }
        private void set_602_SelectorControlBase_ItemTemplateSelector(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Internal.SelectorControlBase)instance;
            that.ItemTemplateSelector = (global::Windows.UI.Xaml.Controls.DataTemplateSelector)Value;
        }
        private object get_603_SelectorControlBase_ItemContainerStyle(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Internal.SelectorControlBase)instance;
            return that.ItemContainerStyle;
        }
        private void set_603_SelectorControlBase_ItemContainerStyle(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Internal.SelectorControlBase)instance;
            that.ItemContainerStyle = (global::Windows.UI.Xaml.Style)Value;
        }
        private object get_604_SelectorControlBase_IsLockUpdate(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Internal.SelectorControlBase)instance;
            return that.IsLockUpdate;
        }
        private object get_605_SelectorControlBase_Items(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Internal.SelectorControlBase)instance;
            return that.Items;
        }
        private object get_606_SelectorItemBase_IsSelected(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Internal.SelectorItemBase)instance;
            return that.IsSelected;
        }
        private void set_606_SelectorItemBase_IsSelected(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Internal.SelectorItemBase)instance;
            that.IsSelected = (global::System.Boolean)Value;
        }
        private object get_607_TreeNavigator_RootNode(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Internal.TreeNavigator)instance;
            return that.RootNode;
        }
        private void set_607_TreeNavigator_RootNode(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Internal.TreeNavigator)instance;
            that.RootNode = (global::DevExpress.UI.Xaml.Internal.TreeNavigatorNode)Value;
        }
        private object get_608_TreeNavigator_CurrentNode(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Internal.TreeNavigator)instance;
            return that.CurrentNode;
        }
        private object get_609_TreeNavigator_RootHeaderContent(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Internal.TreeNavigator)instance;
            return that.RootHeaderContent;
        }
        private void set_609_TreeNavigator_RootHeaderContent(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Internal.TreeNavigator)instance;
            that.RootHeaderContent = (global::System.Object)Value;
        }
        private object get_610_TreeNavigator_RootHeaderContentTemplate(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Internal.TreeNavigator)instance;
            return that.RootHeaderContentTemplate;
        }
        private void set_610_TreeNavigator_RootHeaderContentTemplate(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Internal.TreeNavigator)instance;
            that.RootHeaderContentTemplate = (global::Windows.UI.Xaml.DataTemplate)Value;
        }
        private object get_611_TreeNavigator_HeaderContent(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Internal.TreeNavigator)instance;
            return that.HeaderContent;
        }
        private void set_611_TreeNavigator_HeaderContent(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Internal.TreeNavigator)instance;
            that.HeaderContent = (global::System.Object)Value;
        }
        private object get_612_TreeNavigator_HeaderContentTemplate(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Internal.TreeNavigator)instance;
            return that.HeaderContentTemplate;
        }
        private void set_612_TreeNavigator_HeaderContentTemplate(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Internal.TreeNavigator)instance;
            that.HeaderContentTemplate = (global::Windows.UI.Xaml.DataTemplate)Value;
        }
        private object get_613_TreeNavigator_HeaderPadding(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Internal.TreeNavigator)instance;
            return that.HeaderPadding;
        }
        private void set_613_TreeNavigator_HeaderPadding(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Internal.TreeNavigator)instance;
            that.HeaderPadding = (global::Windows.UI.Xaml.Thickness)Value;
        }
        private object get_614_TreeNavigator_HeaderFontSize(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Internal.TreeNavigator)instance;
            return that.HeaderFontSize;
        }
        private void set_614_TreeNavigator_HeaderFontSize(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Internal.TreeNavigator)instance;
            that.HeaderFontSize = (global::System.Double)Value;
        }
        private object get_615_TreeNavigator_NavigateToItemCommand(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Internal.TreeNavigator)instance;
            return that.NavigateToItemCommand;
        }
        private object get_616_TreeNavigator_NavigateUpperCommand(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Internal.TreeNavigator)instance;
            return that.NavigateUpperCommand;
        }
        private object get_617_TreeNavigatorItem_Node(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Internal.TreeNavigatorItem)instance;
            return that.Node;
        }
        private void set_617_TreeNavigatorItem_Node(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Internal.TreeNavigatorItem)instance;
            that.Node = (global::DevExpress.UI.Xaml.Internal.TreeNavigatorNode)Value;
        }
        private object get_618_TreeNavigatorItem_IconPadding(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Internal.TreeNavigatorItem)instance;
            return that.IconPadding;
        }
        private void set_618_TreeNavigatorItem_IconPadding(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Internal.TreeNavigatorItem)instance;
            that.IconPadding = (global::Windows.UI.Xaml.Thickness)Value;
        }
        private object get_619_TreeNavigatorItem_ArrowGlyph(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Internal.TreeNavigatorItem)instance;
            return that.ArrowGlyph;
        }
        private void set_619_TreeNavigatorItem_ArrowGlyph(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Internal.TreeNavigatorItem)instance;
            that.ArrowGlyph = (global::Windows.UI.Xaml.Media.Geometry)Value;
        }
        private object get_620_TreeNavigatorItem_ArrowGlyphPressed(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Internal.TreeNavigatorItem)instance;
            return that.ArrowGlyphPressed;
        }
        private void set_620_TreeNavigatorItem_ArrowGlyphPressed(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Internal.TreeNavigatorItem)instance;
            that.ArrowGlyphPressed = (global::Windows.UI.Xaml.Media.Geometry)Value;
        }
        private object get_621_TreeNavigatorItem_IsSelected(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Internal.TreeNavigatorItem)instance;
            return that.IsSelected;
        }
        private void set_621_TreeNavigatorItem_IsSelected(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Internal.TreeNavigatorItem)instance;
            that.IsSelected = (global::System.Boolean)Value;
        }
        private object get_622_TreeNavigatorNode_Parent(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Internal.TreeNavigatorNode)instance;
            return that.Parent;
        }
        private object get_623_TreeNavigatorNode_IsRootNode(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Internal.TreeNavigatorNode)instance;
            return that.IsRootNode;
        }
        private object get_624_TreeNavigatorNode_IsSubNode(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Internal.TreeNavigatorNode)instance;
            return that.IsSubNode;
        }
        private object get_625_TreeNavigatorNode_Node(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Internal.TreeNavigatorNode)instance;
            return that.Node;
        }
        private object get_626_TreeNavigatorNode_Children(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Internal.TreeNavigatorNode)instance;
            return that.Children;
        }
        private object get_627_TreeNavigatorNode_HasChildren(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Internal.TreeNavigatorNode)instance;
            return that.HasChildren;
        }
        private object get_628_ChartAnnotationLabelDefinition_Format(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.ChartAnnotationLabelDefinition)instance;
            return that.Format;
        }
        private void set_628_ChartAnnotationLabelDefinition_Format(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.ChartAnnotationLabelDefinition)instance;
            that.Format = (global::System.String)Value;
        }
        private object get_629_ChartAnnotationLabelDefinition_Template(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.ChartAnnotationLabelDefinition)instance;
            return that.Template;
        }
        private void set_629_ChartAnnotationLabelDefinition_Template(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.ChartAnnotationLabelDefinition)instance;
            that.Template = (global::Windows.UI.Xaml.DataTemplate)Value;
        }
        private object get_630_ChartAnnotationLabelDefinition_DefaultVisualStyle(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.ChartAnnotationLabelDefinition)instance;
            return that.DefaultVisualStyle;
        }
        private void set_630_ChartAnnotationLabelDefinition_DefaultVisualStyle(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.ChartAnnotationLabelDefinition)instance;
            that.DefaultVisualStyle = (global::Windows.UI.Xaml.Style)Value;
        }
        private object get_631_ChartAnnotationLabelDefinition_Location(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.ChartAnnotationLabelDefinition)instance;
            return that.Location;
        }
        private void set_631_ChartAnnotationLabelDefinition_Location(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.ChartAnnotationLabelDefinition)instance;
            that.Location = (global::Telerik.UI.Xaml.Controls.Chart.ChartAnnotationLabelLocation)Value;
        }
        private object get_632_ChartAnnotationLabelDefinition_HorizontalAlignment(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.ChartAnnotationLabelDefinition)instance;
            return that.HorizontalAlignment;
        }
        private void set_632_ChartAnnotationLabelDefinition_HorizontalAlignment(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.ChartAnnotationLabelDefinition)instance;
            that.HorizontalAlignment = (global::Windows.UI.Xaml.HorizontalAlignment)Value;
        }
        private object get_633_ChartAnnotationLabelDefinition_VerticalAlignment(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.ChartAnnotationLabelDefinition)instance;
            return that.VerticalAlignment;
        }
        private void set_633_ChartAnnotationLabelDefinition_VerticalAlignment(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.ChartAnnotationLabelDefinition)instance;
            that.VerticalAlignment = (global::Windows.UI.Xaml.VerticalAlignment)Value;
        }
        private object get_634_ChartAnnotationLabelDefinition_HorizontalOffset(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.ChartAnnotationLabelDefinition)instance;
            return that.HorizontalOffset;
        }
        private void set_634_ChartAnnotationLabelDefinition_HorizontalOffset(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.ChartAnnotationLabelDefinition)instance;
            that.HorizontalOffset = (global::System.Double)Value;
        }
        private object get_635_ChartAnnotationLabelDefinition_VerticalOffset(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.ChartAnnotationLabelDefinition)instance;
            return that.VerticalOffset;
        }
        private void set_635_ChartAnnotationLabelDefinition_VerticalOffset(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.ChartAnnotationLabelDefinition)instance;
            that.VerticalOffset = (global::System.Double)Value;
        }
        private object get_636_ChartPalette_Name(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.ChartPalette)instance;
            return that.Name;
        }
        private void set_636_ChartPalette_Name(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.ChartPalette)instance;
            that.Name = (global::System.String)Value;
        }
        private object get_637_ChartPalette_FillEntries(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.ChartPalette)instance;
            return that.FillEntries;
        }
        private void set_637_ChartPalette_FillEntries(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.ChartPalette)instance;
            that.FillEntries = (global::Telerik.UI.Xaml.Controls.Chart.PaletteEntryCollection)Value;
        }
        private object get_638_PaletteEntryCollection_Brushes(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.PaletteEntryCollection)instance;
            return that.Brushes;
        }
        private object get_639_ChartPalette_SpecialFillEntries(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.ChartPalette)instance;
            return that.SpecialFillEntries;
        }
        private void set_639_ChartPalette_SpecialFillEntries(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.ChartPalette)instance;
            that.SpecialFillEntries = (global::Telerik.UI.Xaml.Controls.Chart.PaletteEntryCollection)Value;
        }
        private object get_640_ChartPalette_StrokeEntries(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.ChartPalette)instance;
            return that.StrokeEntries;
        }
        private void set_640_ChartPalette_StrokeEntries(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.ChartPalette)instance;
            that.StrokeEntries = (global::Telerik.UI.Xaml.Controls.Chart.PaletteEntryCollection)Value;
        }
        private object get_641_ChartPalette_SpecialStrokeEntries(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.ChartPalette)instance;
            return that.SpecialStrokeEntries;
        }
        private void set_641_ChartPalette_SpecialStrokeEntries(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.ChartPalette)instance;
            that.SpecialStrokeEntries = (global::Telerik.UI.Xaml.Controls.Chart.PaletteEntryCollection)Value;
        }
        private object get_642_HexLayoutDefinitionBase_Orientation(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Data.HexView.HexLayoutDefinitionBase)instance;
            return that.Orientation;
        }
        private void set_642_HexLayoutDefinitionBase_Orientation(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Data.HexView.HexLayoutDefinitionBase)instance;
            that.Orientation = (global::Windows.UI.Xaml.Controls.Orientation)Value;
        }
        private object get_643_HexLayoutDefinitionBase_ItemLength(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Data.HexView.HexLayoutDefinitionBase)instance;
            return that.ItemLength;
        }
        private void set_643_HexLayoutDefinitionBase_ItemLength(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Data.HexView.HexLayoutDefinitionBase)instance;
            that.ItemLength = (global::System.Double)Value;
        }
        private object get_644_HexLayoutDefinitionBase_ItemsSpacing(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Data.HexView.HexLayoutDefinitionBase)instance;
            return that.ItemsSpacing;
        }
        private void set_644_HexLayoutDefinitionBase_ItemsSpacing(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Data.HexView.HexLayoutDefinitionBase)instance;
            that.ItemsSpacing = (global::System.Double)Value;
        }
        private object get_645_HexLayoutDefinitionBase_ViewPortExtension(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Data.HexView.HexLayoutDefinitionBase)instance;
            return that.ViewPortExtension;
        }
        private void set_645_HexLayoutDefinitionBase_ViewPortExtension(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Data.HexView.HexLayoutDefinitionBase)instance;
            that.ViewPortExtension = (global::System.Double)Value;
        }
        private object get_646_HighlightStyle_FontFamily(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Input.HighlightStyle)instance;
            return that.FontFamily;
        }
        private void set_646_HighlightStyle_FontFamily(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Input.HighlightStyle)instance;
            that.FontFamily = (global::Windows.UI.Xaml.Media.FontFamily)Value;
        }
        private object get_647_HighlightStyle_FontWeight(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Input.HighlightStyle)instance;
            return that.FontWeight;
        }
        private void set_647_HighlightStyle_FontWeight(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Input.HighlightStyle)instance;
            that.FontWeight = (global::Telerik.UI.Xaml.Controls.Input.FontWeightName)Value;
        }
        private object get_648_HighlightStyle_FontStyle(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Input.HighlightStyle)instance;
            return that.FontStyle;
        }
        private void set_648_HighlightStyle_FontStyle(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Input.HighlightStyle)instance;
            that.FontStyle = (global::Windows.UI.Text.FontStyle)Value;
        }
        private object get_649_HighlightStyle_Foreground(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Input.HighlightStyle)instance;
            return that.Foreground;
        }
        private void set_649_HighlightStyle_Foreground(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Input.HighlightStyle)instance;
            that.Foreground = (global::Windows.UI.Xaml.Media.Brush)Value;
        }
        private object get_650_HighlightStyle_FontSize(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Input.HighlightStyle)instance;
            return that.FontSize;
        }
        private void set_650_HighlightStyle_FontSize(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Input.HighlightStyle)instance;
            that.FontSize = (global::System.Double)Value;
        }
        private object get_651_CalendarCellStyle_ContentStyle(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Input.CalendarCellStyle)instance;
            return that.ContentStyle;
        }
        private void set_651_CalendarCellStyle_ContentStyle(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Input.CalendarCellStyle)instance;
            that.ContentStyle = (global::Windows.UI.Xaml.Style)Value;
        }
        private object get_652_CalendarCellStyle_DecorationStyle(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Input.CalendarCellStyle)instance;
            return that.DecorationStyle;
        }
        private void set_652_CalendarCellStyle_DecorationStyle(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Input.CalendarCellStyle)instance;
            that.DecorationStyle = (global::Windows.UI.Xaml.Style)Value;
        }
        private object get_653_RadRadialMenu_Items(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu)instance;
            return that.Items;
        }
        private object get_654_RadialMenuItem_ChildItems(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem)instance;
            return that.ChildItems;
        }
        private object get_655_RadialMenuItem_ToolTipContent(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem)instance;
            return that.ToolTipContent;
        }
        private void set_655_RadialMenuItem_ToolTipContent(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem)instance;
            that.ToolTipContent = (global::System.Object)Value;
        }
        private object get_656_RadialMenuItem_CommandParameter(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem)instance;
            return that.CommandParameter;
        }
        private void set_656_RadialMenuItem_CommandParameter(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem)instance;
            that.CommandParameter = (global::System.Object)Value;
        }
        private object get_657_RadialMenuItem_IsEnabled(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem)instance;
            return that.IsEnabled;
        }
        private void set_657_RadialMenuItem_IsEnabled(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem)instance;
            that.IsEnabled = (global::System.Boolean)Value;
        }
        private object get_658_RadialMenuItem_Command(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem)instance;
            return that.Command;
        }
        private void set_658_RadialMenuItem_Command(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem)instance;
            that.Command = (global::System.Windows.Input.ICommand)Value;
        }
        private object get_659_RadialMenuItem_ParentItem(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem)instance;
            return that.ParentItem;
        }
        private object get_660_RadialMenuItem_IsSelected(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem)instance;
            return that.IsSelected;
        }
        private void set_660_RadialMenuItem_IsSelected(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem)instance;
            that.IsSelected = (global::System.Boolean)Value;
        }
        private object get_661_RadialMenuItem_GroupName(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem)instance;
            return that.GroupName;
        }
        private void set_661_RadialMenuItem_GroupName(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem)instance;
            that.GroupName = (global::System.String)Value;
        }
        private object get_662_RadialMenuItem_Selectable(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem)instance;
            return that.Selectable;
        }
        private void set_662_RadialMenuItem_Selectable(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem)instance;
            that.Selectable = (global::System.Boolean)Value;
        }
        private object get_663_RadialMenuItem_Deselectable(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem)instance;
            return that.Deselectable;
        }
        private void set_663_RadialMenuItem_Deselectable(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem)instance;
            that.Deselectable = (global::System.Boolean)Value;
        }
        private object get_664_RadialMenuItem_Header(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem)instance;
            return that.Header;
        }
        private void set_664_RadialMenuItem_Header(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem)instance;
            that.Header = (global::System.Object)Value;
        }
        private object get_665_RadialMenuItem_IconContent(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem)instance;
            return that.IconContent;
        }
        private void set_665_RadialMenuItem_IconContent(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem)instance;
            that.IconContent = (global::System.Object)Value;
        }
        private object get_666_RadialMenuItem_ContentSectorBackground(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem)instance;
            return that.ContentSectorBackground;
        }
        private void set_666_RadialMenuItem_ContentSectorBackground(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem)instance;
            that.ContentSectorBackground = (global::Windows.UI.Xaml.Media.Brush)Value;
        }
        private object get_667_RadRadialMenu_ShowToolTip(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu)instance;
            return that.ShowToolTip;
        }
        private void set_667_RadRadialMenu_ShowToolTip(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu)instance;
            that.ShowToolTip = (global::System.Boolean)Value;
        }
        private object get_668_RadRadialMenu_IsOpen(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu)instance;
            return that.IsOpen;
        }
        private void set_668_RadRadialMenu_IsOpen(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu)instance;
            that.IsOpen = (global::System.Boolean)Value;
        }
        private object get_669_RadRadialMenu_StartAngle(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu)instance;
            return that.StartAngle;
        }
        private void set_669_RadRadialMenu_StartAngle(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu)instance;
            that.StartAngle = (global::System.Double)Value;
        }
        private object get_670_RadRadialMenu_InnerNavigationRadiusFactor(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu)instance;
            return that.InnerNavigationRadiusFactor;
        }
        private void set_670_RadRadialMenu_InnerNavigationRadiusFactor(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu)instance;
            that.InnerNavigationRadiusFactor = (global::System.Double)Value;
        }
        private object get_671_RadRadialMenu_InnerRadiusFactor(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu)instance;
            return that.InnerRadiusFactor;
        }
        private void set_671_RadRadialMenu_InnerRadiusFactor(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu)instance;
            that.InnerRadiusFactor = (global::System.Double)Value;
        }
        private object get_672_RadRadialMenu_OuterRadiusFactor(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu)instance;
            return that.OuterRadiusFactor;
        }
        private void set_672_RadRadialMenu_OuterRadiusFactor(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu)instance;
            that.OuterRadiusFactor = (global::System.Double)Value;
        }
        private object get_673_RadRadialMenu_ContentMenuBackgroundStyle(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu)instance;
            return that.ContentMenuBackgroundStyle;
        }
        private void set_673_RadRadialMenu_ContentMenuBackgroundStyle(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu)instance;
            that.ContentMenuBackgroundStyle = (global::Windows.UI.Xaml.Style)Value;
        }
        private object get_674_RadRadialMenu_NavigationMenuBackgroundStyle(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu)instance;
            return that.NavigationMenuBackgroundStyle;
        }
        private void set_674_RadRadialMenu_NavigationMenuBackgroundStyle(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu)instance;
            that.NavigationMenuBackgroundStyle = (global::Windows.UI.Xaml.Style)Value;
        }
        private object get_675_RadRadialMenu_CommandService(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu)instance;
            return that.CommandService;
        }
        private object get_676_RadRadialMenu_Commands(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu)instance;
            return that.Commands;
        }
        private object get_677_AttachableObject_Owner(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Primitives.AttachableObject<global::Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu>)instance;
            return that.Owner;
        }
        private object get_678_RadRadialMenu_TargetElement(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu)instance;
            return that.TargetElement;
        }
        private object get_679_RadialMenuTriggerBehavior_AttachTriggers(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Primitives.RadialMenuTriggerBehavior)instance;
            return that.AttachTriggers;
        }
        private void set_679_RadialMenuTriggerBehavior_AttachTriggers(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Primitives.RadialMenuTriggerBehavior)instance;
            that.AttachTriggers = (global::Telerik.UI.Xaml.Controls.Primitives.RadialMenuAttachTriggers)Value;
        }
        private object get_680_AttachableObject_Owner(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Primitives.AttachableObject<global::Windows.UI.Xaml.FrameworkElement>)instance;
            return that.Owner;
        }
        private object get_681_BusyIndicatorAnimationAdapter_Animation(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Primitives.BusyIndicator.BusyIndicatorAnimationAdapter)instance;
            return that.Animation;
        }
        private void set_681_BusyIndicatorAnimationAdapter_Animation(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Primitives.BusyIndicator.BusyIndicatorAnimationAdapter)instance;
            that.Animation = (global::Windows.UI.Xaml.Media.Animation.Storyboard)Value;
        }

        private global::Windows.UI.Xaml.Markup.IXamlMember CreateXamlMember(string longMemberName)
        {
            global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember xamlMember = null;
            global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType userType;

            switch (longMemberName)
            {
            case "Telerik.UI.Xaml.Controls.Grid.RadDataGrid.ItemsSource":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Grid.RadDataGrid");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ItemsSource", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_0_RadDataGrid_ItemsSource;
                xamlMember.Setter = set_0_RadDataGrid_ItemsSource;
                break;
            case "Telerik.UI.Xaml.Controls.Grid.RadDataGrid.Columns":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Grid.RadDataGrid");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "Columns", "Telerik.UI.Xaml.Controls.Grid.DataGridColumnCollection");
                xamlMember.Getter = get_1_RadDataGrid_Columns;
                xamlMember.SetIsReadOnly();
                break;
            case "Telerik.UI.Xaml.Controls.Grid.DataGridColumn.IsCellFlyoutEnabled":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Grid.DataGridColumn");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "IsCellFlyoutEnabled", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_2_DataGridColumn_IsCellFlyoutEnabled;
                xamlMember.Setter = set_2_DataGridColumn_IsCellFlyoutEnabled;
                break;
            case "Telerik.UI.Xaml.Controls.Grid.DataGridColumn.CellDecorationStyle":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Grid.DataGridColumn");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "CellDecorationStyle", "Windows.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_3_DataGridColumn_CellDecorationStyle;
                xamlMember.Setter = set_3_DataGridColumn_CellDecorationStyle;
                break;
            case "Telerik.UI.Xaml.Controls.Grid.DataGridColumn.CellDecorationStyleSelector":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Grid.DataGridColumn");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "CellDecorationStyleSelector", "Windows.UI.Xaml.Controls.StyleSelector");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_4_DataGridColumn_CellDecorationStyleSelector;
                xamlMember.Setter = set_4_DataGridColumn_CellDecorationStyleSelector;
                break;
            case "Telerik.UI.Xaml.Controls.Grid.DataGridColumn.Name":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Grid.DataGridColumn");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "Name", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_5_DataGridColumn_Name;
                xamlMember.Setter = set_5_DataGridColumn_Name;
                break;
            case "Telerik.UI.Xaml.Controls.Grid.DataGridColumn.CanUserEdit":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Grid.DataGridColumn");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "CanUserEdit", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_6_DataGridColumn_CanUserEdit;
                xamlMember.Setter = set_6_DataGridColumn_CanUserEdit;
                break;
            case "Telerik.UI.Xaml.Controls.Grid.DataGridColumn.CanUserResize":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Grid.DataGridColumn");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "CanUserResize", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_7_DataGridColumn_CanUserResize;
                xamlMember.Setter = set_7_DataGridColumn_CanUserResize;
                break;
            case "Telerik.UI.Xaml.Controls.Grid.DataGridColumn.CanUserFilter":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Grid.DataGridColumn");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "CanUserFilter", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_8_DataGridColumn_CanUserFilter;
                xamlMember.Setter = set_8_DataGridColumn_CanUserFilter;
                break;
            case "Telerik.UI.Xaml.Controls.Grid.DataGridColumn.CanUserReorder":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Grid.DataGridColumn");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "CanUserReorder", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_9_DataGridColumn_CanUserReorder;
                xamlMember.Setter = set_9_DataGridColumn_CanUserReorder;
                break;
            case "Telerik.UI.Xaml.Controls.Grid.DataGridColumn.CanUserGroup":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Grid.DataGridColumn");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "CanUserGroup", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_10_DataGridColumn_CanUserGroup;
                xamlMember.Setter = set_10_DataGridColumn_CanUserGroup;
                break;
            case "Telerik.UI.Xaml.Controls.Grid.DataGridColumn.CanUserSort":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Grid.DataGridColumn");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "CanUserSort", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_11_DataGridColumn_CanUserSort;
                xamlMember.Setter = set_11_DataGridColumn_CanUserSort;
                break;
            case "Telerik.UI.Xaml.Controls.Grid.DataGridColumn.IsVisible":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Grid.DataGridColumn");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "IsVisible", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_12_DataGridColumn_IsVisible;
                xamlMember.Setter = set_12_DataGridColumn_IsVisible;
                break;
            case "Telerik.UI.Xaml.Controls.Grid.DataGridColumn.HeaderStyle":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Grid.DataGridColumn");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "HeaderStyle", "Windows.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_13_DataGridColumn_HeaderStyle;
                xamlMember.Setter = set_13_DataGridColumn_HeaderStyle;
                break;
            case "Telerik.UI.Xaml.Controls.Grid.DataGridColumn.SizeMode":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Grid.DataGridColumn");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "SizeMode", "Telerik.UI.Xaml.Controls.Grid.DataGridColumnSizeMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_14_DataGridColumn_SizeMode;
                xamlMember.Setter = set_14_DataGridColumn_SizeMode;
                break;
            case "Telerik.UI.Xaml.Controls.Grid.DataGridColumn.Width":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Grid.DataGridColumn");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "Width", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_15_DataGridColumn_Width;
                xamlMember.Setter = set_15_DataGridColumn_Width;
                break;
            case "Telerik.UI.Xaml.Controls.Grid.DataGridColumn.ActualWidth":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Grid.DataGridColumn");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ActualWidth", "Double");
                xamlMember.Getter = get_16_DataGridColumn_ActualWidth;
                xamlMember.SetIsReadOnly();
                break;
            case "Telerik.UI.Xaml.Controls.Grid.DataGridColumn.IsAutoGenerated":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Grid.DataGridColumn");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "IsAutoGenerated", "Boolean");
                xamlMember.Getter = get_17_DataGridColumn_IsAutoGenerated;
                xamlMember.SetIsReadOnly();
                break;
            case "Telerik.UI.Xaml.Controls.Grid.DataGridColumn.Header":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Grid.DataGridColumn");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "Header", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_18_DataGridColumn_Header;
                xamlMember.Setter = set_18_DataGridColumn_Header;
                break;
            case "Telerik.UI.Xaml.Controls.Grid.DataGridColumn.SortDirection":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Grid.DataGridColumn");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "SortDirection", "Telerik.UI.Xaml.Controls.Grid.SortDirection");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_19_DataGridColumn_SortDirection;
                xamlMember.Setter = set_19_DataGridColumn_SortDirection;
                break;
            case "Telerik.UI.Xaml.Controls.Grid.DataGridColumn.DataOperationsFlyoutTemplate":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Grid.DataGridColumn");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "DataOperationsFlyoutTemplate", "Windows.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_20_DataGridColumn_DataOperationsFlyoutTemplate;
                xamlMember.Setter = set_20_DataGridColumn_DataOperationsFlyoutTemplate;
                break;
            case "Telerik.UI.Xaml.Controls.Grid.RadDataGrid.AutoGenerateColumns":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Grid.RadDataGrid");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "AutoGenerateColumns", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_21_RadDataGrid_AutoGenerateColumns;
                xamlMember.Setter = set_21_RadDataGrid_AutoGenerateColumns;
                break;
            case "Telerik.UI.Xaml.Controls.Grid.RadDataGrid.FrozenColumnCount":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Grid.RadDataGrid");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "FrozenColumnCount", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_22_RadDataGrid_FrozenColumnCount;
                xamlMember.Setter = set_22_RadDataGrid_FrozenColumnCount;
                break;
            case "Telerik.UI.Xaml.Controls.Grid.RadDataGrid.ColumnDataOperationsMode":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Grid.RadDataGrid");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ColumnDataOperationsMode", "Telerik.UI.Xaml.Controls.Grid.Primitives.ColumnDataOperationsMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_23_RadDataGrid_ColumnDataOperationsMode;
                xamlMember.Setter = set_23_RadDataGrid_ColumnDataOperationsMode;
                break;
            case "Telerik.UI.Xaml.Controls.Grid.RadDataGrid.CanUserChooseColumns":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Grid.RadDataGrid");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "CanUserChooseColumns", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_24_RadDataGrid_CanUserChooseColumns;
                xamlMember.Setter = set_24_RadDataGrid_CanUserChooseColumns;
                break;
            case "Telerik.UI.Xaml.Controls.Grid.RadDataGrid.RealizedItemsVerticalBufferScale":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Grid.RadDataGrid");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "RealizedItemsVerticalBufferScale", "Double");
                xamlMember.Getter = get_25_RadDataGrid_RealizedItemsVerticalBufferScale;
                xamlMember.Setter = set_25_RadDataGrid_RealizedItemsVerticalBufferScale;
                break;
            case "Telerik.UI.Xaml.Controls.Grid.RadDataGrid.IsBusyIndicatorEnabled":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Grid.RadDataGrid");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "IsBusyIndicatorEnabled", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_26_RadDataGrid_IsBusyIndicatorEnabled;
                xamlMember.Setter = set_26_RadDataGrid_IsBusyIndicatorEnabled;
                break;
            case "Telerik.UI.Xaml.Controls.Grid.RadDataGrid.UserFilterMode":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Grid.RadDataGrid");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "UserFilterMode", "Telerik.UI.Xaml.Controls.Grid.DataGridUserFilterMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_27_RadDataGrid_UserFilterMode;
                xamlMember.Setter = set_27_RadDataGrid_UserFilterMode;
                break;
            case "Telerik.UI.Xaml.Controls.Grid.RadDataGrid.UserColumnReorderMode":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Grid.RadDataGrid");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "UserColumnReorderMode", "Telerik.UI.Xaml.Controls.Grid.DataGridUserColumnReorderMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_28_RadDataGrid_UserColumnReorderMode;
                xamlMember.Setter = set_28_RadDataGrid_UserColumnReorderMode;
                break;
            case "Telerik.UI.Xaml.Controls.Grid.RadDataGrid.ColumnResizeHandleDisplayMode":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Grid.RadDataGrid");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ColumnResizeHandleDisplayMode", "Telerik.UI.Xaml.Controls.Grid.DataGridColumnResizeHandleDisplayMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_29_RadDataGrid_ColumnResizeHandleDisplayMode;
                xamlMember.Setter = set_29_RadDataGrid_ColumnResizeHandleDisplayMode;
                break;
            case "Telerik.UI.Xaml.Controls.Grid.RadDataGrid.UserSortMode":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Grid.RadDataGrid");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "UserSortMode", "Telerik.UI.Xaml.Controls.Grid.DataGridUserSortMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_30_RadDataGrid_UserSortMode;
                xamlMember.Setter = set_30_RadDataGrid_UserSortMode;
                break;
            case "Telerik.UI.Xaml.Controls.Grid.RadDataGrid.UserGroupMode":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Grid.RadDataGrid");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "UserGroupMode", "Telerik.UI.Xaml.Controls.Grid.DataGridUserGroupMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_31_RadDataGrid_UserGroupMode;
                xamlMember.Setter = set_31_RadDataGrid_UserGroupMode;
                break;
            case "Telerik.UI.Xaml.Controls.Grid.RadDataGrid.IndentWidth":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Grid.RadDataGrid");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "IndentWidth", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_32_RadDataGrid_IndentWidth;
                xamlMember.Setter = set_32_RadDataGrid_IndentWidth;
                break;
            case "Telerik.UI.Xaml.Controls.Grid.RadDataGrid.GroupHeaderDisplayMode":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Grid.RadDataGrid");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "GroupHeaderDisplayMode", "Telerik.UI.Xaml.Controls.Grid.DataGridGroupHeaderDisplayMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_33_RadDataGrid_GroupHeaderDisplayMode;
                xamlMember.Setter = set_33_RadDataGrid_GroupHeaderDisplayMode;
                break;
            case "Telerik.UI.Xaml.Controls.Grid.RadDataGrid.GroupHeaderTemplate":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Grid.RadDataGrid");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "GroupHeaderTemplate", "Windows.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_34_RadDataGrid_GroupHeaderTemplate;
                xamlMember.Setter = set_34_RadDataGrid_GroupHeaderTemplate;
                break;
            case "Telerik.UI.Xaml.Controls.Grid.RadDataGrid.GroupHeaderTemplateSelector":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Grid.RadDataGrid");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "GroupHeaderTemplateSelector", "Windows.UI.Xaml.Controls.DataTemplateSelector");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_35_RadDataGrid_GroupHeaderTemplateSelector;
                xamlMember.Setter = set_35_RadDataGrid_GroupHeaderTemplateSelector;
                break;
            case "Telerik.UI.Xaml.Controls.Grid.RadDataGrid.GroupHeaderStyle":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Grid.RadDataGrid");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "GroupHeaderStyle", "Windows.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_36_RadDataGrid_GroupHeaderStyle;
                xamlMember.Setter = set_36_RadDataGrid_GroupHeaderStyle;
                break;
            case "Telerik.UI.Xaml.Controls.Grid.RadDataGrid.GroupHeaderStyleSelector":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Grid.RadDataGrid");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "GroupHeaderStyleSelector", "Windows.UI.Xaml.Controls.StyleSelector");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_37_RadDataGrid_GroupHeaderStyleSelector;
                xamlMember.Setter = set_37_RadDataGrid_GroupHeaderStyleSelector;
                break;
            case "Telerik.UI.Xaml.Controls.Grid.RadDataGrid.Commands":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Grid.RadDataGrid");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "Commands", "Telerik.UI.Xaml.Controls.Primitives.CommandCollection`1<Telerik.UI.Xaml.Controls.Grid.RadDataGrid>");
                xamlMember.Getter = get_38_RadDataGrid_Commands;
                xamlMember.SetIsReadOnly();
                break;
            case "Telerik.UI.Xaml.Controls.Primitives.AttachableObject`1<Telerik.UI.Xaml.Controls.Grid.RadDataGrid>.Owner":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Primitives.AttachableObject`1<Telerik.UI.Xaml.Controls.Grid.RadDataGrid>");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "Owner", "Telerik.UI.Xaml.Controls.Grid.RadDataGrid");
                xamlMember.Getter = get_39_AttachableObject_Owner;
                xamlMember.SetIsReadOnly();
                break;
            case "Telerik.UI.Xaml.Controls.Grid.RadDataGrid.RowHeight":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Grid.RadDataGrid");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "RowHeight", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_40_RadDataGrid_RowHeight;
                xamlMember.Setter = set_40_RadDataGrid_RowHeight;
                break;
            case "Telerik.UI.Xaml.Controls.Grid.RadDataGrid.CommandService":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Grid.RadDataGrid");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "CommandService", "Telerik.UI.Xaml.Controls.Grid.Commands.CommandService");
                xamlMember.Getter = get_41_RadDataGrid_CommandService;
                xamlMember.SetIsReadOnly();
                break;
            case "Telerik.UI.Xaml.Controls.Grid.RadDataGrid.DragBehavior":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Grid.RadDataGrid");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "DragBehavior", "Telerik.UI.Xaml.Controls.Grid.DataGridDragBehavior");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_42_RadDataGrid_DragBehavior;
                xamlMember.Setter = set_42_RadDataGrid_DragBehavior;
                break;
            case "Telerik.UI.Xaml.Controls.Grid.RadDataGrid.GroupPanelPosition":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Grid.RadDataGrid");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "GroupPanelPosition", "Telerik.UI.Xaml.Controls.Grid.GroupPanelPosition");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_43_RadDataGrid_GroupPanelPosition;
                xamlMember.Setter = set_43_RadDataGrid_GroupPanelPosition;
                break;
            case "Telerik.UI.Xaml.Controls.Grid.RadDataGrid.CurrentItem":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Grid.RadDataGrid");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "CurrentItem", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_44_RadDataGrid_CurrentItem;
                xamlMember.SetIsReadOnly();
                break;
            case "Telerik.UI.Xaml.Controls.Grid.RadDataGrid.EnsureCurrentItemIntoView":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Grid.RadDataGrid");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "EnsureCurrentItemIntoView", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_45_RadDataGrid_EnsureCurrentItemIntoView;
                xamlMember.Setter = set_45_RadDataGrid_EnsureCurrentItemIntoView;
                break;
            case "Telerik.UI.Xaml.Controls.Grid.RadDataGrid.IsSynchronizedWithCurrentItem":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Grid.RadDataGrid");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "IsSynchronizedWithCurrentItem", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_46_RadDataGrid_IsSynchronizedWithCurrentItem;
                xamlMember.Setter = set_46_RadDataGrid_IsSynchronizedWithCurrentItem;
                break;
            case "Telerik.UI.Xaml.Controls.Grid.RadDataGrid.IncrementalLoadingMode":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Grid.RadDataGrid");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "IncrementalLoadingMode", "Telerik.Core.Data.BatchLoadingMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_47_RadDataGrid_IncrementalLoadingMode;
                xamlMember.Setter = set_47_RadDataGrid_IncrementalLoadingMode;
                break;
            case "Telerik.UI.Xaml.Controls.Grid.RadDataGrid.SortDescriptors":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Grid.RadDataGrid");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "SortDescriptors", "Telerik.Data.Core.SortDescriptorCollection");
                xamlMember.Getter = get_48_RadDataGrid_SortDescriptors;
                xamlMember.SetIsReadOnly();
                break;
            case "Telerik.Data.Core.SortDescriptorBase.Comparer":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.Data.Core.SortDescriptorBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "Comparer", "System.Collections.IComparer");
                xamlMember.Getter = get_49_SortDescriptorBase_Comparer;
                xamlMember.Setter = set_49_SortDescriptorBase_Comparer;
                break;
            case "Telerik.Data.Core.OrderedDescriptor.SortOrder":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.Data.Core.OrderedDescriptor");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "SortOrder", "Telerik.Data.Core.SortOrder");
                xamlMember.Getter = get_50_OrderedDescriptor_SortOrder;
                xamlMember.Setter = set_50_OrderedDescriptor_SortOrder;
                break;
            case "Telerik.UI.Xaml.Controls.Grid.RadDataGrid.GroupDescriptors":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Grid.RadDataGrid");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "GroupDescriptors", "Telerik.Data.Core.GroupDescriptorCollection");
                xamlMember.Getter = get_51_RadDataGrid_GroupDescriptors;
                xamlMember.SetIsReadOnly();
                break;
            case "Telerik.Data.Core.GroupDescriptorBase.DisplayContent":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.Data.Core.GroupDescriptorBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "DisplayContent", "Object");
                xamlMember.Getter = get_52_GroupDescriptorBase_DisplayContent;
                xamlMember.Setter = set_52_GroupDescriptorBase_DisplayContent;
                break;
            case "Telerik.UI.Xaml.Controls.Grid.RadDataGrid.FilterDescriptors":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Grid.RadDataGrid");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "FilterDescriptors", "Telerik.Data.Core.FilterDescriptorCollection");
                xamlMember.Getter = get_53_RadDataGrid_FilterDescriptors;
                xamlMember.SetIsReadOnly();
                break;
            case "Telerik.UI.Xaml.Controls.Grid.RadDataGrid.AggregateDescriptors":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Grid.RadDataGrid");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "AggregateDescriptors", "Telerik.Data.Core.AggregateDescriptorCollection");
                xamlMember.Getter = get_54_RadDataGrid_AggregateDescriptors;
                xamlMember.SetIsReadOnly();
                break;
            case "Telerik.UI.Xaml.Controls.Grid.RadDataGrid.RowBackground":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Grid.RadDataGrid");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "RowBackground", "Windows.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_55_RadDataGrid_RowBackground;
                xamlMember.Setter = set_55_RadDataGrid_RowBackground;
                break;
            case "Telerik.UI.Xaml.Controls.Grid.RadDataGrid.RowBackgroundSelector":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Grid.RadDataGrid");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "RowBackgroundSelector", "Telerik.UI.Xaml.Controls.Primitives.ObjectSelector`1<Windows.UI.Xaml.Media.Brush>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_56_RadDataGrid_RowBackgroundSelector;
                xamlMember.Setter = set_56_RadDataGrid_RowBackgroundSelector;
                break;
            case "Telerik.UI.Xaml.Controls.Grid.RadDataGrid.AlternateRowBackground":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Grid.RadDataGrid");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "AlternateRowBackground", "Windows.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_57_RadDataGrid_AlternateRowBackground;
                xamlMember.Setter = set_57_RadDataGrid_AlternateRowBackground;
                break;
            case "Telerik.UI.Xaml.Controls.Grid.RadDataGrid.AlternationStep":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Grid.RadDataGrid");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "AlternationStep", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_58_RadDataGrid_AlternationStep;
                xamlMember.Setter = set_58_RadDataGrid_AlternationStep;
                break;
            case "Telerik.UI.Xaml.Controls.Grid.RadDataGrid.AlternationStartIndex":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Grid.RadDataGrid");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "AlternationStartIndex", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_59_RadDataGrid_AlternationStartIndex;
                xamlMember.Setter = set_59_RadDataGrid_AlternationStartIndex;
                break;
            case "Telerik.UI.Xaml.Controls.Grid.RadDataGrid.GridLinesBrush":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Grid.RadDataGrid");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "GridLinesBrush", "Windows.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_60_RadDataGrid_GridLinesBrush;
                xamlMember.Setter = set_60_RadDataGrid_GridLinesBrush;
                break;
            case "Telerik.UI.Xaml.Controls.Grid.RadDataGrid.GridLinesVisibility":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Grid.RadDataGrid");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "GridLinesVisibility", "Telerik.UI.Xaml.Controls.Primitives.GridLinesVisibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_61_RadDataGrid_GridLinesVisibility;
                xamlMember.Setter = set_61_RadDataGrid_GridLinesVisibility;
                break;
            case "Telerik.UI.Xaml.Controls.Grid.RadDataGrid.GridLinesThickness":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Grid.RadDataGrid");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "GridLinesThickness", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_62_RadDataGrid_GridLinesThickness;
                xamlMember.Setter = set_62_RadDataGrid_GridLinesThickness;
                break;
            case "Telerik.UI.Xaml.Controls.Grid.RadDataGrid.UserEditMode":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Grid.RadDataGrid");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "UserEditMode", "Telerik.UI.Xaml.Controls.Grid.DataGridUserEditMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_63_RadDataGrid_UserEditMode;
                xamlMember.Setter = set_63_RadDataGrid_UserEditMode;
                break;
            case "Telerik.UI.Xaml.Controls.Grid.RadDataGrid.ExternalEditor":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Grid.RadDataGrid");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ExternalEditor", "Telerik.UI.Xaml.Controls.Grid.IGridExternalEditor");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_64_RadDataGrid_ExternalEditor;
                xamlMember.Setter = set_64_RadDataGrid_ExternalEditor;
                break;
            case "Telerik.UI.Xaml.Controls.Grid.RadDataGrid.HitTestService":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Grid.RadDataGrid");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "HitTestService", "Telerik.UI.Xaml.Controls.Grid.HitTestService");
                xamlMember.Getter = get_65_RadDataGrid_HitTestService;
                xamlMember.SetIsReadOnly();
                break;
            case "Telerik.UI.Xaml.Controls.Grid.RadDataGrid.RowDetailsDisplayMode":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Grid.RadDataGrid");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "RowDetailsDisplayMode", "Telerik.UI.Xaml.Controls.Grid.DataGridRowDetailsMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_66_RadDataGrid_RowDetailsDisplayMode;
                xamlMember.Setter = set_66_RadDataGrid_RowDetailsDisplayMode;
                break;
            case "Telerik.UI.Xaml.Controls.Grid.RadDataGrid.RowDetailsTemplate":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Grid.RadDataGrid");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "RowDetailsTemplate", "Windows.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_67_RadDataGrid_RowDetailsTemplate;
                xamlMember.Setter = set_67_RadDataGrid_RowDetailsTemplate;
                break;
            case "Telerik.UI.Xaml.Controls.Grid.RadDataGrid.SelectionUnit":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Grid.RadDataGrid");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "SelectionUnit", "Telerik.UI.Xaml.Controls.Grid.DataGridSelectionUnit");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_68_RadDataGrid_SelectionUnit;
                xamlMember.Setter = set_68_RadDataGrid_SelectionUnit;
                break;
            case "Telerik.UI.Xaml.Controls.Grid.RadDataGrid.SelectedItem":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Grid.RadDataGrid");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "SelectedItem", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_69_RadDataGrid_SelectedItem;
                xamlMember.Setter = set_69_RadDataGrid_SelectedItem;
                break;
            case "Telerik.UI.Xaml.Controls.Grid.RadDataGrid.SelectionMode":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Grid.RadDataGrid");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "SelectionMode", "Telerik.UI.Xaml.Controls.Grid.DataGridSelectionMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_70_RadDataGrid_SelectionMode;
                xamlMember.Setter = set_70_RadDataGrid_SelectionMode;
                break;
            case "Telerik.UI.Xaml.Controls.Grid.RadDataGrid.SelectedItems":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Grid.RadDataGrid");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "SelectedItems", "System.Collections.ObjectModel.ObservableCollection`1<Object>");
                xamlMember.Getter = get_71_RadDataGrid_SelectedItems;
                xamlMember.SetIsReadOnly();
                break;
            case "Telerik.UI.Xaml.Controls.Grid.RadDataGrid.HideFlyoutOnBackButtonPressed":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Grid.RadDataGrid");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "HideFlyoutOnBackButtonPressed", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_72_RadDataGrid_HideFlyoutOnBackButtonPressed;
                xamlMember.Setter = set_72_RadDataGrid_HideFlyoutOnBackButtonPressed;
                break;
            case "Telerik.UI.Xaml.Controls.RadControl.CurrentVisualState":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.RadControl");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "CurrentVisualState", "String");
                xamlMember.Getter = get_73_RadControl_CurrentVisualState;
                xamlMember.SetIsReadOnly();
                break;
            case "Telerik.UI.Xaml.Controls.Grid.DataGridTypedColumn.PropertyName":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Grid.DataGridTypedColumn");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "PropertyName", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_74_DataGridTypedColumn_PropertyName;
                xamlMember.Setter = set_74_DataGridTypedColumn_PropertyName;
                break;
            case "Telerik.UI.Xaml.Controls.Grid.DataGridTextColumn.CellContentFormat":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Grid.DataGridTextColumn");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "CellContentFormat", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_75_DataGridTextColumn_CellContentFormat;
                xamlMember.Setter = set_75_DataGridTextColumn_CellContentFormat;
                break;
            case "Telerik.UI.Xaml.Controls.Grid.DataGridTypedColumn.CellContentStyle":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Grid.DataGridTypedColumn");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "CellContentStyle", "Windows.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_76_DataGridTypedColumn_CellContentStyle;
                xamlMember.Setter = set_76_DataGridTypedColumn_CellContentStyle;
                break;
            case "Telerik.UI.Xaml.Controls.Grid.DataGridTypedColumn.CellContentStyleSelector":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Grid.DataGridTypedColumn");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "CellContentStyleSelector", "Windows.UI.Xaml.Controls.StyleSelector");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_77_DataGridTypedColumn_CellContentStyleSelector;
                xamlMember.Setter = set_77_DataGridTypedColumn_CellContentStyleSelector;
                break;
            case "Telerik.UI.Xaml.Controls.Grid.DataGridTypedColumn.CellEditorStyle":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Grid.DataGridTypedColumn");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "CellEditorStyle", "Windows.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_78_DataGridTypedColumn_CellEditorStyle;
                xamlMember.Setter = set_78_DataGridTypedColumn_CellEditorStyle;
                break;
            case "Telerik.UI.Xaml.Controls.Input.RadDatePicker.DayStepBehavior":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Input.RadDatePicker");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "DayStepBehavior", "Telerik.UI.Xaml.Controls.Input.StepBehavior");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_79_RadDatePicker_DayStepBehavior;
                xamlMember.Setter = set_79_RadDatePicker_DayStepBehavior;
                break;
            case "Telerik.UI.Xaml.Controls.Input.RadDatePicker.MonthStepBehavior":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Input.RadDatePicker");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "MonthStepBehavior", "Telerik.UI.Xaml.Controls.Input.StepBehavior");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_80_RadDatePicker_MonthStepBehavior;
                xamlMember.Setter = set_80_RadDatePicker_MonthStepBehavior;
                break;
            case "Telerik.UI.Xaml.Controls.Input.RadDatePicker.YearStepBehavior":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Input.RadDatePicker");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "YearStepBehavior", "Telerik.UI.Xaml.Controls.Input.StepBehavior");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_81_RadDatePicker_YearStepBehavior;
                xamlMember.Setter = set_81_RadDatePicker_YearStepBehavior;
                break;
            case "Telerik.UI.Xaml.Controls.Input.DateTimePicker.DisplayMode":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Input.DateTimePicker");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "DisplayMode", "Telerik.UI.Xaml.Controls.Input.DateTimePickerDisplayMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_82_DateTimePicker_DisplayMode;
                xamlMember.Setter = set_82_DateTimePicker_DisplayMode;
                break;
            case "Telerik.UI.Xaml.Controls.Input.DateTimePicker.CalendarNumeralSystem":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Input.DateTimePicker");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "CalendarNumeralSystem", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_83_DateTimePicker_CalendarNumeralSystem;
                xamlMember.Setter = set_83_DateTimePicker_CalendarNumeralSystem;
                break;
            case "Telerik.UI.Xaml.Controls.Input.DateTimePicker.CalendarIdentifier":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Input.DateTimePicker");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "CalendarIdentifier", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_84_DateTimePicker_CalendarIdentifier;
                xamlMember.Setter = set_84_DateTimePicker_CalendarIdentifier;
                break;
            case "Telerik.UI.Xaml.Controls.Input.DateTimePicker.CalendarLanguage":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Input.DateTimePicker");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "CalendarLanguage", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_85_DateTimePicker_CalendarLanguage;
                xamlMember.Setter = set_85_DateTimePicker_CalendarLanguage;
                break;
            case "Telerik.UI.Xaml.Controls.Input.DateTimePicker.Step":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Input.DateTimePicker");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "Step", "System.DateTimeOffset");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_86_DateTimePicker_Step;
                xamlMember.Setter = set_86_DateTimePicker_Step;
                break;
            case "Telerik.UI.Xaml.Controls.Input.DateTimePicker.AutoSizeWidth":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Input.DateTimePicker");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "AutoSizeWidth", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_87_DateTimePicker_AutoSizeWidth;
                xamlMember.Setter = set_87_DateTimePicker_AutoSizeWidth;
                break;
            case "Telerik.UI.Xaml.Controls.Input.DateTimePicker.IsReadOnly":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Input.DateTimePicker");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "IsReadOnly", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_88_DateTimePicker_IsReadOnly;
                xamlMember.Setter = set_88_DateTimePicker_IsReadOnly;
                break;
            case "Telerik.UI.Xaml.Controls.Input.DateTimePicker.EmptyContent":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Input.DateTimePicker");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "EmptyContent", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_89_DateTimePicker_EmptyContent;
                xamlMember.Setter = set_89_DateTimePicker_EmptyContent;
                break;
            case "Telerik.UI.Xaml.Controls.Input.DateTimePicker.EmptyContentTemplate":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Input.DateTimePicker");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "EmptyContentTemplate", "Windows.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_90_DateTimePicker_EmptyContentTemplate;
                xamlMember.Setter = set_90_DateTimePicker_EmptyContentTemplate;
                break;
            case "Telerik.UI.Xaml.Controls.Input.DateTimePicker.ValueString":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Input.DateTimePicker");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ValueString", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_91_DateTimePicker_ValueString;
                xamlMember.SetIsReadOnly();
                break;
            case "Telerik.UI.Xaml.Controls.Input.DateTimePicker.MaxValue":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Input.DateTimePicker");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "MaxValue", "System.DateTime");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_92_DateTimePicker_MaxValue;
                xamlMember.Setter = set_92_DateTimePicker_MaxValue;
                break;
            case "Telerik.UI.Xaml.Controls.Input.DateTimePicker.MinValue":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Input.DateTimePicker");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "MinValue", "System.DateTime");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_93_DateTimePicker_MinValue;
                xamlMember.Setter = set_93_DateTimePicker_MinValue;
                break;
            case "Telerik.UI.Xaml.Controls.Input.DateTimePicker.Value":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Input.DateTimePicker");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "Value", "System.Nullable`1<System.DateTime>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_94_DateTimePicker_Value;
                xamlMember.Setter = set_94_DateTimePicker_Value;
                break;
            case "Telerik.UI.Xaml.Controls.Input.DateTimePicker.DisplayValueFormat":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Input.DateTimePicker");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "DisplayValueFormat", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_95_DateTimePicker_DisplayValueFormat;
                xamlMember.Setter = set_95_DateTimePicker_DisplayValueFormat;
                break;
            case "Telerik.UI.Xaml.Controls.Input.DateTimePicker.SelectorBackgroundStyle":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Input.DateTimePicker");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "SelectorBackgroundStyle", "Windows.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_96_DateTimePicker_SelectorBackgroundStyle;
                xamlMember.Setter = set_96_DateTimePicker_SelectorBackgroundStyle;
                break;
            case "Telerik.UI.Xaml.Controls.Input.DateTimePicker.ItemLength":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Input.DateTimePicker");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ItemLength", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_97_DateTimePicker_ItemLength;
                xamlMember.Setter = set_97_DateTimePicker_ItemLength;
                break;
            case "Telerik.UI.Xaml.Controls.Input.DateTimePicker.ItemSpacing":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Input.DateTimePicker");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ItemSpacing", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_98_DateTimePicker_ItemSpacing;
                xamlMember.Setter = set_98_DateTimePicker_ItemSpacing;
                break;
            case "Telerik.UI.Xaml.Controls.Input.DateTimePicker.SelectorOrder":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Input.DateTimePicker");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "SelectorOrder", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_99_DateTimePicker_SelectorOrder;
                xamlMember.Setter = set_99_DateTimePicker_SelectorOrder;
                break;
            case "Telerik.UI.Xaml.Controls.Input.DateTimePicker.IsOpen":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Input.DateTimePicker");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "IsOpen", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_100_DateTimePicker_IsOpen;
                xamlMember.Setter = set_100_DateTimePicker_IsOpen;
                break;
            case "Telerik.UI.Xaml.Controls.Input.DateTimePicker.SelectorDefaultValue":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Input.DateTimePicker");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "SelectorDefaultValue", "System.Nullable`1<System.DateTime>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_101_DateTimePicker_SelectorDefaultValue;
                xamlMember.Setter = set_101_DateTimePicker_SelectorDefaultValue;
                break;
            case "Telerik.UI.Xaml.Controls.Input.DateTimePicker.SelectorHeader":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Input.DateTimePicker");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "SelectorHeader", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_102_DateTimePicker_SelectorHeader;
                xamlMember.Setter = set_102_DateTimePicker_SelectorHeader;
                break;
            case "Telerik.UI.Xaml.Controls.Input.DateTimePicker.SelectorHeaderTemplate":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Input.DateTimePicker");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "SelectorHeaderTemplate", "Windows.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_103_DateTimePicker_SelectorHeaderTemplate;
                xamlMember.Setter = set_103_DateTimePicker_SelectorHeaderTemplate;
                break;
            case "Telerik.UI.Xaml.Controls.Input.DateTimePicker.ItemCount":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Input.DateTimePicker");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ItemCount", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_104_DateTimePicker_ItemCount;
                xamlMember.Setter = set_104_DateTimePicker_ItemCount;
                break;
            case "Telerik.UI.Xaml.Controls.RadHeaderedControl.Header":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.RadHeaderedControl");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "Header", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_105_RadHeaderedControl_Header;
                xamlMember.Setter = set_105_RadHeaderedControl_Header;
                break;
            case "Telerik.UI.Xaml.Controls.RadHeaderedControl.HeaderTemplate":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.RadHeaderedControl");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "HeaderTemplate", "Windows.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_106_RadHeaderedControl_HeaderTemplate;
                xamlMember.Setter = set_106_RadHeaderedControl_HeaderTemplate;
                break;
            case "Telerik.UI.Xaml.Controls.RadHeaderedControl.HeaderStyle":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.RadHeaderedControl");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "HeaderStyle", "Windows.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_107_RadHeaderedControl_HeaderStyle;
                xamlMember.Setter = set_107_RadHeaderedControl_HeaderStyle;
                break;
            case "DevExpress.UI.Xaml.TitleSettings.ButtonInactiveForeground":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.TitleSettings");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ButtonInactiveForeground", "Windows.UI.Xaml.Media.SolidColorBrush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_108_TitleSettings_ButtonInactiveForeground;
                xamlMember.Setter = set_108_TitleSettings_ButtonInactiveForeground;
                break;
            case "DevExpress.UI.Xaml.TitleSettings.ButtonInactiveBackground":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.TitleSettings");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ButtonInactiveBackground", "Windows.UI.Xaml.Media.SolidColorBrush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_109_TitleSettings_ButtonInactiveBackground;
                xamlMember.Setter = set_109_TitleSettings_ButtonInactiveBackground;
                break;
            case "DevExpress.UI.Xaml.TitleSettings.ButtonPressedForeground":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.TitleSettings");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ButtonPressedForeground", "Windows.UI.Xaml.Media.SolidColorBrush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_110_TitleSettings_ButtonPressedForeground;
                xamlMember.Setter = set_110_TitleSettings_ButtonPressedForeground;
                break;
            case "DevExpress.UI.Xaml.TitleSettings.ButtonPressedBackground":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.TitleSettings");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ButtonPressedBackground", "Windows.UI.Xaml.Media.SolidColorBrush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_111_TitleSettings_ButtonPressedBackground;
                xamlMember.Setter = set_111_TitleSettings_ButtonPressedBackground;
                break;
            case "DevExpress.UI.Xaml.TitleSettings.ButtonHoverForeground":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.TitleSettings");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ButtonHoverForeground", "Windows.UI.Xaml.Media.SolidColorBrush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_112_TitleSettings_ButtonHoverForeground;
                xamlMember.Setter = set_112_TitleSettings_ButtonHoverForeground;
                break;
            case "DevExpress.UI.Xaml.TitleSettings.ButtonHoverBackground":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.TitleSettings");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ButtonHoverBackground", "Windows.UI.Xaml.Media.SolidColorBrush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_113_TitleSettings_ButtonHoverBackground;
                xamlMember.Setter = set_113_TitleSettings_ButtonHoverBackground;
                break;
            case "DevExpress.UI.Xaml.TitleSettings.ButtonBackground":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.TitleSettings");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ButtonBackground", "Windows.UI.Xaml.Media.SolidColorBrush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_114_TitleSettings_ButtonBackground;
                xamlMember.Setter = set_114_TitleSettings_ButtonBackground;
                break;
            case "DevExpress.UI.Xaml.TitleSettings.ButtonForeground":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.TitleSettings");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ButtonForeground", "Windows.UI.Xaml.Media.SolidColorBrush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_115_TitleSettings_ButtonForeground;
                xamlMember.Setter = set_115_TitleSettings_ButtonForeground;
                break;
            case "DevExpress.UI.Xaml.TitleSettings.InactiveForeground":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.TitleSettings");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "InactiveForeground", "Windows.UI.Xaml.Media.SolidColorBrush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_116_TitleSettings_InactiveForeground;
                xamlMember.Setter = set_116_TitleSettings_InactiveForeground;
                break;
            case "DevExpress.UI.Xaml.TitleSettings.InactiveBackground":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.TitleSettings");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "InactiveBackground", "Windows.UI.Xaml.Media.SolidColorBrush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_117_TitleSettings_InactiveBackground;
                xamlMember.Setter = set_117_TitleSettings_InactiveBackground;
                break;
            case "DevExpress.UI.Xaml.TitleSettings.Foreground":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.TitleSettings");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "Foreground", "Windows.UI.Xaml.Media.SolidColorBrush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_118_TitleSettings_Foreground;
                xamlMember.Setter = set_118_TitleSettings_Foreground;
                break;
            case "DevExpress.UI.Xaml.TitleSettings.Background":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.TitleSettings");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "Background", "Windows.UI.Xaml.Media.SolidColorBrush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_119_TitleSettings_Background;
                xamlMember.Setter = set_119_TitleSettings_Background;
                break;
            case "DevExpress.UI.Xaml.Controls.PdfOverlayBarLocation.Location":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Controls.PdfOverlayBarLocation");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "Location", "Windows.UI.Xaml.Controls.Primitives.EdgeTransitionLocation");
                xamlMember.Getter = get_120_PdfOverlayBarLocation_Location;
                xamlMember.Setter = set_120_PdfOverlayBarLocation_Location;
                break;
            case "DevExpress.UI.Xaml.Controls.PdfOverlayBarLocation.Width":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Controls.PdfOverlayBarLocation");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "Width", "Double");
                xamlMember.Getter = get_121_PdfOverlayBarLocation_Width;
                xamlMember.Setter = set_121_PdfOverlayBarLocation_Width;
                break;
            case "DevExpress.UI.Xaml.Controls.PdfOverlayBarLocation.Height":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Controls.PdfOverlayBarLocation");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "Height", "Double");
                xamlMember.Getter = get_122_PdfOverlayBarLocation_Height;
                xamlMember.Setter = set_122_PdfOverlayBarLocation_Height;
                break;
            case "DevExpress.UI.Xaml.Controls.SimpleSettingsBarOverlaySettings.ShowRightSideDefaultItems":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Controls.SimpleSettingsBarOverlaySettings");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ShowRightSideDefaultItems", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_123_SimpleSettingsBarOverlaySettings_ShowRightSideDefaultItems;
                xamlMember.Setter = set_123_SimpleSettingsBarOverlaySettings_ShowRightSideDefaultItems;
                break;
            case "DevExpress.UI.Xaml.Controls.SimpleSettingsBarOverlaySettings.ShowLeftSideDefaultItems":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Controls.SimpleSettingsBarOverlaySettings");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ShowLeftSideDefaultItems", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_124_SimpleSettingsBarOverlaySettings_ShowLeftSideDefaultItems;
                xamlMember.Setter = set_124_SimpleSettingsBarOverlaySettings_ShowLeftSideDefaultItems;
                break;
            case "DevExpress.UI.Xaml.Controls.SimpleSettingsBarOverlaySettings.FlyoutItemTemplateSelector":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Controls.SimpleSettingsBarOverlaySettings");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "FlyoutItemTemplateSelector", "Windows.UI.Xaml.Controls.DataTemplateSelector");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_125_SimpleSettingsBarOverlaySettings_FlyoutItemTemplateSelector;
                xamlMember.Setter = set_125_SimpleSettingsBarOverlaySettings_FlyoutItemTemplateSelector;
                break;
            case "DevExpress.UI.Xaml.Controls.SimpleSettingsBarOverlaySettings.LeftSideItemsSource":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Controls.SimpleSettingsBarOverlaySettings");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "LeftSideItemsSource", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_126_SimpleSettingsBarOverlaySettings_LeftSideItemsSource;
                xamlMember.Setter = set_126_SimpleSettingsBarOverlaySettings_LeftSideItemsSource;
                break;
            case "DevExpress.UI.Xaml.Controls.SimpleSettingsBarOverlaySettings.RightSideItemsSource":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Controls.SimpleSettingsBarOverlaySettings");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "RightSideItemsSource", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_127_SimpleSettingsBarOverlaySettings_RightSideItemsSource;
                xamlMember.Setter = set_127_SimpleSettingsBarOverlaySettings_RightSideItemsSource;
                break;
            case "DevExpress.UI.Xaml.Controls.SimpleSettingsBarOverlaySettings.ActualFlyoutItemTemplateSelector":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Controls.SimpleSettingsBarOverlaySettings");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ActualFlyoutItemTemplateSelector", "Windows.UI.Xaml.Controls.DataTemplateSelector");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_128_SimpleSettingsBarOverlaySettings_ActualFlyoutItemTemplateSelector;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Controls.SimpleSettingsBarOverlaySettings.LeftSideItems":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Controls.SimpleSettingsBarOverlaySettings");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "LeftSideItems", "DevExpress.UI.Xaml.Controls.SettingsBarItemCollection");
                xamlMember.Getter = get_129_SimpleSettingsBarOverlaySettings_LeftSideItems;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Controls.SimpleSettingsBarOverlaySettings.RightSideItems":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Controls.SimpleSettingsBarOverlaySettings");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "RightSideItems", "DevExpress.UI.Xaml.Controls.SettingsBarItemCollection");
                xamlMember.Getter = get_130_SimpleSettingsBarOverlaySettings_RightSideItems;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Controls.PdfOverlaySettingsBase.AttachmentsPanelLocation":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Controls.PdfOverlaySettingsBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "AttachmentsPanelLocation", "DevExpress.UI.Xaml.Controls.IPdfOverlayBarLocation");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_131_PdfOverlaySettingsBase_AttachmentsPanelLocation;
                xamlMember.Setter = set_131_PdfOverlaySettingsBase_AttachmentsPanelLocation;
                break;
            case "DevExpress.UI.Xaml.Controls.PdfOverlaySettingsBase.BookmarksPanelLocation":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Controls.PdfOverlaySettingsBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "BookmarksPanelLocation", "DevExpress.UI.Xaml.Controls.IPdfOverlayBarLocation");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_132_PdfOverlaySettingsBase_BookmarksPanelLocation;
                xamlMember.Setter = set_132_PdfOverlaySettingsBase_BookmarksPanelLocation;
                break;
            case "DevExpress.UI.Xaml.Controls.PdfOverlaySettingsBase.FindPanelLocation":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Controls.PdfOverlaySettingsBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "FindPanelLocation", "DevExpress.UI.Xaml.Controls.IPdfOverlayBarLocation");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_133_PdfOverlaySettingsBase_FindPanelLocation;
                xamlMember.Setter = set_133_PdfOverlaySettingsBase_FindPanelLocation;
                break;
            case "DevExpress.UI.Xaml.Controls.PdfOverlaySettingsBase.SettingsBarLocation":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Controls.PdfOverlaySettingsBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "SettingsBarLocation", "DevExpress.UI.Xaml.Controls.IPdfOverlayBarLocation");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_134_PdfOverlaySettingsBase_SettingsBarLocation;
                xamlMember.Setter = set_134_PdfOverlaySettingsBase_SettingsBarLocation;
                break;
            case "DevExpress.UI.Xaml.Controls.PdfOverlaySettingsBase.IsSettingsBarVisible":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Controls.PdfOverlaySettingsBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "IsSettingsBarVisible", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_135_PdfOverlaySettingsBase_IsSettingsBarVisible;
                xamlMember.Setter = set_135_PdfOverlaySettingsBase_IsSettingsBarVisible;
                break;
            case "DevExpress.UI.Xaml.Controls.PdfOverlaySettingsBase.IsZoomBarVisible":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Controls.PdfOverlaySettingsBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "IsZoomBarVisible", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_136_PdfOverlaySettingsBase_IsZoomBarVisible;
                xamlMember.Setter = set_136_PdfOverlaySettingsBase_IsZoomBarVisible;
                break;
            case "DevExpress.UI.Xaml.Controls.PdfOverlaySettingsBase.IsPageBarVisible":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Controls.PdfOverlaySettingsBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "IsPageBarVisible", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_137_PdfOverlaySettingsBase_IsPageBarVisible;
                xamlMember.Setter = set_137_PdfOverlaySettingsBase_IsPageBarVisible;
                break;
            case "DevExpress.UI.Xaml.Controls.PdfOverlaySettingsBase.IsBookmarksPanelVisible":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Controls.PdfOverlaySettingsBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "IsBookmarksPanelVisible", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_138_PdfOverlaySettingsBase_IsBookmarksPanelVisible;
                xamlMember.Setter = set_138_PdfOverlaySettingsBase_IsBookmarksPanelVisible;
                break;
            case "DevExpress.UI.Xaml.Controls.PdfOverlaySettingsBase.IsAttachmentsPanelVisible":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Controls.PdfOverlaySettingsBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "IsAttachmentsPanelVisible", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_139_PdfOverlaySettingsBase_IsAttachmentsPanelVisible;
                xamlMember.Setter = set_139_PdfOverlaySettingsBase_IsAttachmentsPanelVisible;
                break;
            case "DevExpress.UI.Xaml.Controls.PdfOverlaySettingsBase.IsFindPanelVisible":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Controls.PdfOverlaySettingsBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "IsFindPanelVisible", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_140_PdfOverlaySettingsBase_IsFindPanelVisible;
                xamlMember.Setter = set_140_PdfOverlaySettingsBase_IsFindPanelVisible;
                break;
            case "DevExpress.UI.Xaml.Controls.PdfOverlaySettingsBase.HideZoomBarDelay":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Controls.PdfOverlaySettingsBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "HideZoomBarDelay", "TimeSpan");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_141_PdfOverlaySettingsBase_HideZoomBarDelay;
                xamlMember.Setter = set_141_PdfOverlaySettingsBase_HideZoomBarDelay;
                break;
            case "DevExpress.UI.Xaml.Controls.PdfOverlaySettingsBase.HidePageBarDelay":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Controls.PdfOverlaySettingsBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "HidePageBarDelay", "TimeSpan");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_142_PdfOverlaySettingsBase_HidePageBarDelay;
                xamlMember.Setter = set_142_PdfOverlaySettingsBase_HidePageBarDelay;
                break;
            case "DevExpress.UI.Xaml.Controls.PdfOverlaySettingsBase.ShowPrintDocumentButton":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Controls.PdfOverlaySettingsBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ShowPrintDocumentButton", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_143_PdfOverlaySettingsBase_ShowPrintDocumentButton;
                xamlMember.Setter = set_143_PdfOverlaySettingsBase_ShowPrintDocumentButton;
                break;
            case "DevExpress.UI.Xaml.Controls.PdfOverlaySettingsBase.ShowOpenDocumentButton":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Controls.PdfOverlaySettingsBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ShowOpenDocumentButton", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_144_PdfOverlaySettingsBase_ShowOpenDocumentButton;
                xamlMember.Setter = set_144_PdfOverlaySettingsBase_ShowOpenDocumentButton;
                break;
            case "DevExpress.UI.Xaml.Controls.PdfOverlaySettingsBase.ShowSaveDocumentButton":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Controls.PdfOverlaySettingsBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ShowSaveDocumentButton", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_145_PdfOverlaySettingsBase_ShowSaveDocumentButton;
                xamlMember.Setter = set_145_PdfOverlaySettingsBase_ShowSaveDocumentButton;
                break;
            case "DevExpress.UI.Xaml.Controls.PdfOverlaySettingsBase.ShowBookmarksButton":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Controls.PdfOverlaySettingsBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ShowBookmarksButton", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_146_PdfOverlaySettingsBase_ShowBookmarksButton;
                xamlMember.Setter = set_146_PdfOverlaySettingsBase_ShowBookmarksButton;
                break;
            case "DevExpress.UI.Xaml.Controls.PdfOverlaySettingsBase.ShowAttachmentsButton":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Controls.PdfOverlaySettingsBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ShowAttachmentsButton", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_147_PdfOverlaySettingsBase_ShowAttachmentsButton;
                xamlMember.Setter = set_147_PdfOverlaySettingsBase_ShowAttachmentsButton;
                break;
            case "DevExpress.UI.Xaml.Controls.PdfViewerControl.ActualIsSettingsBarVisible":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Controls.PdfViewerControl");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ActualIsSettingsBarVisible", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_148_PdfViewerControl_ActualIsSettingsBarVisible;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Controls.PdfViewerControl.ActualIsPageBarVisible":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Controls.PdfViewerControl");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ActualIsPageBarVisible", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_149_PdfViewerControl_ActualIsPageBarVisible;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Controls.PdfViewerControl.ActualIsZoomBarVisible":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Controls.PdfViewerControl");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ActualIsZoomBarVisible", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_150_PdfViewerControl_ActualIsZoomBarVisible;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Controls.PdfViewerControl.ActualIsFindTextPanelVisible":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Controls.PdfViewerControl");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ActualIsFindTextPanelVisible", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_151_PdfViewerControl_ActualIsFindTextPanelVisible;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Controls.PdfViewerControl.ShowPrintDocumentButton":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Controls.PdfViewerControl");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ShowPrintDocumentButton", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_152_PdfViewerControl_ShowPrintDocumentButton;
                xamlMember.Setter = set_152_PdfViewerControl_ShowPrintDocumentButton;
                break;
            case "DevExpress.UI.Xaml.Controls.PdfViewerControl.ShowOpenDocumentButton":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Controls.PdfViewerControl");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ShowOpenDocumentButton", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_153_PdfViewerControl_ShowOpenDocumentButton;
                xamlMember.Setter = set_153_PdfViewerControl_ShowOpenDocumentButton;
                break;
            case "DevExpress.UI.Xaml.Controls.PdfViewerControl.ShowSaveDocumentButton":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Controls.PdfViewerControl");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ShowSaveDocumentButton", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_154_PdfViewerControl_ShowSaveDocumentButton;
                xamlMember.Setter = set_154_PdfViewerControl_ShowSaveDocumentButton;
                break;
            case "DevExpress.UI.Xaml.Controls.PdfViewerControl.ShowBookmarksButton":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Controls.PdfViewerControl");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ShowBookmarksButton", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_155_PdfViewerControl_ShowBookmarksButton;
                xamlMember.Setter = set_155_PdfViewerControl_ShowBookmarksButton;
                break;
            case "DevExpress.UI.Xaml.Controls.PdfViewerControl.IsSettingsBarVisible":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Controls.PdfViewerControl");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "IsSettingsBarVisible", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_156_PdfViewerControl_IsSettingsBarVisible;
                xamlMember.Setter = set_156_PdfViewerControl_IsSettingsBarVisible;
                break;
            case "DevExpress.UI.Xaml.Controls.PdfViewerControl.IsZoomBarVisible":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Controls.PdfViewerControl");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "IsZoomBarVisible", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_157_PdfViewerControl_IsZoomBarVisible;
                xamlMember.Setter = set_157_PdfViewerControl_IsZoomBarVisible;
                break;
            case "DevExpress.UI.Xaml.Controls.PdfViewerControl.IsPageBarVisible":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Controls.PdfViewerControl");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "IsPageBarVisible", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_158_PdfViewerControl_IsPageBarVisible;
                xamlMember.Setter = set_158_PdfViewerControl_IsPageBarVisible;
                break;
            case "DevExpress.UI.Xaml.Controls.PdfViewerControl.IsFindTextPanelVisible":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Controls.PdfViewerControl");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "IsFindTextPanelVisible", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_159_PdfViewerControl_IsFindTextPanelVisible;
                xamlMember.Setter = set_159_PdfViewerControl_IsFindTextPanelVisible;
                break;
            case "DevExpress.UI.Xaml.Controls.PdfViewerControl.ShowRightSideDefaultSettingsBarItems":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Controls.PdfViewerControl");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ShowRightSideDefaultSettingsBarItems", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_160_PdfViewerControl_ShowRightSideDefaultSettingsBarItems;
                xamlMember.Setter = set_160_PdfViewerControl_ShowRightSideDefaultSettingsBarItems;
                break;
            case "DevExpress.UI.Xaml.Controls.PdfViewerControl.ShowLeftSideDefaultSettingsBarItems":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Controls.PdfViewerControl");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ShowLeftSideDefaultSettingsBarItems", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_161_PdfViewerControl_ShowLeftSideDefaultSettingsBarItems;
                xamlMember.Setter = set_161_PdfViewerControl_ShowLeftSideDefaultSettingsBarItems;
                break;
            case "DevExpress.UI.Xaml.Controls.PdfViewerControl.SettingsBarFlyoutItemTemplateSelector":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Controls.PdfViewerControl");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "SettingsBarFlyoutItemTemplateSelector", "Windows.UI.Xaml.Controls.DataTemplateSelector");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_162_PdfViewerControl_SettingsBarFlyoutItemTemplateSelector;
                xamlMember.Setter = set_162_PdfViewerControl_SettingsBarFlyoutItemTemplateSelector;
                break;
            case "DevExpress.UI.Xaml.Controls.PdfViewerControl.LeftSideSettingsBarItemsSource":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Controls.PdfViewerControl");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "LeftSideSettingsBarItemsSource", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_163_PdfViewerControl_LeftSideSettingsBarItemsSource;
                xamlMember.Setter = set_163_PdfViewerControl_LeftSideSettingsBarItemsSource;
                break;
            case "DevExpress.UI.Xaml.Controls.PdfViewerControl.RightSideSettingsBarItemsSource":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Controls.PdfViewerControl");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "RightSideSettingsBarItemsSource", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_164_PdfViewerControl_RightSideSettingsBarItemsSource;
                xamlMember.Setter = set_164_PdfViewerControl_RightSideSettingsBarItemsSource;
                break;
            case "DevExpress.UI.Xaml.Controls.PdfViewerControl.DocumentSource":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Controls.PdfViewerControl");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "DocumentSource", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_165_PdfViewerControl_DocumentSource;
                xamlMember.Setter = set_165_PdfViewerControl_DocumentSource;
                break;
            case "DevExpress.UI.Xaml.Controls.PdfViewerControl.DocumentUri":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Controls.PdfViewerControl");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "DocumentUri", "System.Uri");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_166_PdfViewerControl_DocumentUri;
                xamlMember.Setter = set_166_PdfViewerControl_DocumentUri;
                break;
            case "DevExpress.UI.Xaml.Controls.PdfViewerControl.PdfViewMode":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Controls.PdfViewerControl");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "PdfViewMode", "DevExpress.UI.Xaml.Controls.PdfViewMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_167_PdfViewerControl_PdfViewMode;
                xamlMember.Setter = set_167_PdfViewerControl_PdfViewMode;
                break;
            case "DevExpress.UI.Xaml.Controls.PdfViewerControl.PrintDocumentSource":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Controls.PdfViewerControl");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "PrintDocumentSource", "Windows.Graphics.Printing.IPrintDocumentSource");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_168_PdfViewerControl_PrintDocumentSource;
                xamlMember.Setter = set_168_PdfViewerControl_PrintDocumentSource;
                break;
            case "DevExpress.UI.Xaml.Controls.PdfViewerControl.PageSpacing":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Controls.PdfViewerControl");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "PageSpacing", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_169_PdfViewerControl_PageSpacing;
                xamlMember.Setter = set_169_PdfViewerControl_PageSpacing;
                break;
            case "DevExpress.UI.Xaml.Controls.PdfViewerControl.PageMargin":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Controls.PdfViewerControl");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "PageMargin", "Windows.UI.Xaml.Thickness");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_170_PdfViewerControl_PageMargin;
                xamlMember.Setter = set_170_PdfViewerControl_PageMargin;
                break;
            case "DevExpress.UI.Xaml.Controls.PdfViewerControl.ContentMargin":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Controls.PdfViewerControl");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ContentMargin", "Windows.UI.Xaml.Thickness");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_171_PdfViewerControl_ContentMargin;
                xamlMember.Setter = set_171_PdfViewerControl_ContentMargin;
                break;
            case "DevExpress.UI.Xaml.Controls.PdfViewerControl.ZoomMode":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Controls.PdfViewerControl");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ZoomMode", "DevExpress.UI.Xaml.Controls.PdfZoomMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_172_PdfViewerControl_ZoomMode;
                xamlMember.Setter = set_172_PdfViewerControl_ZoomMode;
                break;
            case "DevExpress.UI.Xaml.Controls.PdfViewerControl.CurrentPageIndex":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Controls.PdfViewerControl");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "CurrentPageIndex", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_173_PdfViewerControl_CurrentPageIndex;
                xamlMember.Setter = set_173_PdfViewerControl_CurrentPageIndex;
                break;
            case "DevExpress.UI.Xaml.Controls.PdfViewerControl.CurrentZoomFactor":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Controls.PdfViewerControl");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "CurrentZoomFactor", "Single");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_174_PdfViewerControl_CurrentZoomFactor;
                xamlMember.Setter = set_174_PdfViewerControl_CurrentZoomFactor;
                break;
            case "DevExpress.UI.Xaml.Controls.PdfViewerControl.DefaultZoomFactor":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Controls.PdfViewerControl");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "DefaultZoomFactor", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_175_PdfViewerControl_DefaultZoomFactor;
                xamlMember.Setter = set_175_PdfViewerControl_DefaultZoomFactor;
                break;
            case "DevExpress.UI.Xaml.Controls.PdfViewerControl.MaxZoomFactor":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Controls.PdfViewerControl");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "MaxZoomFactor", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_176_PdfViewerControl_MaxZoomFactor;
                xamlMember.Setter = set_176_PdfViewerControl_MaxZoomFactor;
                break;
            case "DevExpress.UI.Xaml.Controls.PdfViewerControl.CurrentPageNumber":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Controls.PdfViewerControl");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "CurrentPageNumber", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_177_PdfViewerControl_CurrentPageNumber;
                xamlMember.Setter = set_177_PdfViewerControl_CurrentPageNumber;
                break;
            case "DevExpress.UI.Xaml.Controls.PdfViewerControl.ActualIsLoading":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Controls.PdfViewerControl");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ActualIsLoading", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_178_PdfViewerControl_ActualIsLoading;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Controls.PdfViewerControl.IsDataLoading":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Controls.PdfViewerControl");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "IsDataLoading", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_179_PdfViewerControl_IsDataLoading;
                xamlMember.Setter = set_179_PdfViewerControl_IsDataLoading;
                break;
            case "DevExpress.UI.Xaml.Controls.PdfViewerControl.PageCount":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Controls.PdfViewerControl");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "PageCount", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_180_PdfViewerControl_PageCount;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Controls.PdfViewerControl.Document":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Controls.PdfViewerControl");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "Document", "DevExpress.UI.Xaml.Controls.PdfDocumentContainer");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_181_PdfViewerControl_Document;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Controls.PdfViewerControl.CornerRadius":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Controls.PdfViewerControl");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "CornerRadius", "Windows.UI.Xaml.CornerRadius");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_182_PdfViewerControl_CornerRadius;
                xamlMember.Setter = set_182_PdfViewerControl_CornerRadius;
                break;
            case "DevExpress.UI.Xaml.Controls.PdfViewerControl.PrintDocumentCommand":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Controls.PdfViewerControl");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "PrintDocumentCommand", "System.Windows.Input.ICommand");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_183_PdfViewerControl_PrintDocumentCommand;
                xamlMember.Setter = set_183_PdfViewerControl_PrintDocumentCommand;
                break;
            case "DevExpress.UI.Xaml.Controls.PdfViewerControl.ViewerError":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Controls.PdfViewerControl");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ViewerError", "DevExpress.UI.Xaml.Controls.PdfViewerErrorWrapper");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_184_PdfViewerControl_ViewerError;
                xamlMember.Setter = set_184_PdfViewerControl_ViewerError;
                break;
            case "DevExpress.UI.Xaml.Controls.PdfViewerControl.DocumentPrintingQuality":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Controls.PdfViewerControl");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "DocumentPrintingQuality", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_185_PdfViewerControl_DocumentPrintingQuality;
                xamlMember.Setter = set_185_PdfViewerControl_DocumentPrintingQuality;
                break;
            case "DevExpress.UI.Xaml.Controls.PdfViewerControl.ThumbnailHeight":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Controls.PdfViewerControl");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ThumbnailHeight", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_186_PdfViewerControl_ThumbnailHeight;
                xamlMember.Setter = set_186_PdfViewerControl_ThumbnailHeight;
                break;
            case "DevExpress.UI.Xaml.Controls.PdfViewerControl.PdfDocumentLoadingPolicy":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Controls.PdfViewerControl");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "PdfDocumentLoadingPolicy", "DevExpress.UI.Xaml.Controls.PdfDocumentLoadingPolicy");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_187_PdfViewerControl_PdfDocumentLoadingPolicy;
                xamlMember.Setter = set_187_PdfViewerControl_PdfDocumentLoadingPolicy;
                break;
            case "DevExpress.UI.Xaml.Controls.PdfViewerControl.OverlaySettings":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Controls.PdfViewerControl");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "OverlaySettings", "DevExpress.UI.Xaml.Controls.PdfOverlaySettingsBase");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_188_PdfViewerControl_OverlaySettings;
                xamlMember.Setter = set_188_PdfViewerControl_OverlaySettings;
                break;
            case "DevExpress.UI.Xaml.Controls.PdfViewerControl.OverlaySettingsTemplate":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Controls.PdfViewerControl");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "OverlaySettingsTemplate", "Windows.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_189_PdfViewerControl_OverlaySettingsTemplate;
                xamlMember.Setter = set_189_PdfViewerControl_OverlaySettingsTemplate;
                break;
            case "DevExpress.UI.Xaml.Controls.PdfViewerControl.ActualOverlaySettings":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Controls.PdfViewerControl");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ActualOverlaySettings", "DevExpress.UI.Xaml.Controls.PdfOverlaySettingsBase");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_190_PdfViewerControl_ActualOverlaySettings;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Controls.PdfViewerControl.ContainerActualWidth":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Controls.PdfViewerControl");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ContainerActualWidth", "Double");
                xamlMember.Getter = get_191_PdfViewerControl_ContainerActualWidth;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Controls.PdfViewerControl.ContainerActualHeight":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Controls.PdfViewerControl");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ContainerActualHeight", "Double");
                xamlMember.Getter = get_192_PdfViewerControl_ContainerActualHeight;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Controls.PdfViewerControl.ThumbnailSpacing":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Controls.PdfViewerControl");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ThumbnailSpacing", "Double");
                xamlMember.Getter = get_193_PdfViewerControl_ThumbnailSpacing;
                xamlMember.Setter = set_193_PdfViewerControl_ThumbnailSpacing;
                break;
            case "DevExpress.UI.Xaml.Controls.PdfViewerControl.IsInitialized":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Controls.PdfViewerControl");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "IsInitialized", "Boolean");
                xamlMember.Getter = get_194_PdfViewerControl_IsInitialized;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Controls.PdfViewerControl.IsZoomedOutView":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Controls.PdfViewerControl");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "IsZoomedOutView", "Boolean");
                xamlMember.Getter = get_195_PdfViewerControl_IsZoomedOutView;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Controls.PdfViewerControl.ZoomCommand":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Controls.PdfViewerControl");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ZoomCommand", "System.Windows.Input.ICommand");
                xamlMember.Getter = get_196_PdfViewerControl_ZoomCommand;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Controls.PdfViewerControl.SetViewModeCommand":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Controls.PdfViewerControl");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "SetViewModeCommand", "System.Windows.Input.ICommand");
                xamlMember.Getter = get_197_PdfViewerControl_SetViewModeCommand;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Controls.PdfViewerControl.FitSizeCommand":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Controls.PdfViewerControl");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "FitSizeCommand", "System.Windows.Input.ICommand");
                xamlMember.Getter = get_198_PdfViewerControl_FitSizeCommand;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Controls.PdfViewerControl.SetZoomModeCommand":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Controls.PdfViewerControl");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "SetZoomModeCommand", "System.Windows.Input.ICommand");
                xamlMember.Getter = get_199_PdfViewerControl_SetZoomModeCommand;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Controls.PdfViewerControl.OpenFileCommand":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Controls.PdfViewerControl");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "OpenFileCommand", "System.Windows.Input.ICommand");
                xamlMember.Getter = get_200_PdfViewerControl_OpenFileCommand;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Controls.PdfViewerControl.SaveAsCommand":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Controls.PdfViewerControl");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "SaveAsCommand", "System.Windows.Input.ICommand");
                xamlMember.Getter = get_201_PdfViewerControl_SaveAsCommand;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Controls.PdfViewerControl.LoadDocumentCommand":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Controls.PdfViewerControl");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "LoadDocumentCommand", "System.Windows.Input.ICommand");
                xamlMember.Getter = get_202_PdfViewerControl_LoadDocumentCommand;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Controls.PdfViewerControl.CloseDocumentCommand":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Controls.PdfViewerControl");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "CloseDocumentCommand", "System.Windows.Input.ICommand");
                xamlMember.Getter = get_203_PdfViewerControl_CloseDocumentCommand;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Controls.PdfViewerControl.NextPageCommand":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Controls.PdfViewerControl");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "NextPageCommand", "System.Windows.Input.ICommand");
                xamlMember.Getter = get_204_PdfViewerControl_NextPageCommand;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Controls.PdfViewerControl.PreviousPageCommand":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Controls.PdfViewerControl");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "PreviousPageCommand", "System.Windows.Input.ICommand");
                xamlMember.Getter = get_205_PdfViewerControl_PreviousPageCommand;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Controls.PdfViewerControl.SetPageNumberCommand":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Controls.PdfViewerControl");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "SetPageNumberCommand", "System.Windows.Input.ICommand");
                xamlMember.Getter = get_206_PdfViewerControl_SetPageNumberCommand;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Controls.PdfViewerControl.SetZoomFactorCommand":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Controls.PdfViewerControl");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "SetZoomFactorCommand", "System.Windows.Input.ICommand");
                xamlMember.Getter = get_207_PdfViewerControl_SetZoomFactorCommand;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Controls.PdfViewerControl.FindTextCommand":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Controls.PdfViewerControl");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "FindTextCommand", "System.Windows.Input.ICommand");
                xamlMember.Getter = get_208_PdfViewerControl_FindTextCommand;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Controls.PdfViewerControl.FindNextTextCommand":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Controls.PdfViewerControl");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "FindNextTextCommand", "System.Windows.Input.ICommand");
                xamlMember.Getter = get_209_PdfViewerControl_FindNextTextCommand;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Controls.PdfViewerControl.FindPreviousTextCommand":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Controls.PdfViewerControl");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "FindPreviousTextCommand", "System.Windows.Input.ICommand");
                xamlMember.Getter = get_210_PdfViewerControl_FindPreviousTextCommand;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Controls.PdfViewerControl.ClearFindResultsCommand":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Controls.PdfViewerControl");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ClearFindResultsCommand", "System.Windows.Input.ICommand");
                xamlMember.Getter = get_211_PdfViewerControl_ClearFindResultsCommand;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Controls.PdfViewerControl.ShowFindPanelCommand":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Controls.PdfViewerControl");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ShowFindPanelCommand", "System.Windows.Input.ICommand");
                xamlMember.Getter = get_212_PdfViewerControl_ShowFindPanelCommand;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Controls.PdfViewerControl.CloseFindPanelAndClearFindResultsCommand":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Controls.PdfViewerControl");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "CloseFindPanelAndClearFindResultsCommand", "System.Windows.Input.ICommand");
                xamlMember.Getter = get_213_PdfViewerControl_CloseFindPanelAndClearFindResultsCommand;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Controls.PdfViewerControl.ToggleOverlayCommand":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Controls.PdfViewerControl");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ToggleOverlayCommand", "System.Windows.Input.ICommand");
                xamlMember.Getter = get_214_PdfViewerControl_ToggleOverlayCommand;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Controls.PdfViewerControl.OpenAttachmentCommand":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Controls.PdfViewerControl");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "OpenAttachmentCommand", "System.Windows.Input.ICommand");
                xamlMember.Getter = get_215_PdfViewerControl_OpenAttachmentCommand;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Controls.PdfViewerControl.SaveAttachmentCommand":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Controls.PdfViewerControl");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "SaveAttachmentCommand", "System.Windows.Input.ICommand");
                xamlMember.Getter = get_216_PdfViewerControl_SaveAttachmentCommand;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Controls.PdfViewerControl.NavigateToOutlineCommand":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Controls.PdfViewerControl");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "NavigateToOutlineCommand", "System.Windows.Input.ICommand");
                xamlMember.Getter = get_217_PdfViewerControl_NavigateToOutlineCommand;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Internal.ControlEx.ActualSize":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Internal.ControlEx");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ActualSize", "Windows.Foundation.Size");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_218_ControlEx_ActualSize;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Internal.ControlEx.IsLoaded":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Internal.ControlEx");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "IsLoaded", "Boolean");
                xamlMember.Getter = get_219_ControlEx_IsLoaded;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Controls.RadialContextMenuCommandBase.Content":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Controls.RadialContextMenuCommandBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "Content", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_220_RadialContextMenuCommandBase_Content;
                xamlMember.Setter = set_220_RadialContextMenuCommandBase_Content;
                break;
            case "DevExpress.UI.Xaml.Controls.RadialContextMenuCommandBase.ActualIndex":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Controls.RadialContextMenuCommandBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ActualIndex", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_221_RadialContextMenuCommandBase_ActualIndex;
                xamlMember.Setter = set_221_RadialContextMenuCommandBase_ActualIndex;
                break;
            case "DevExpress.UI.Xaml.Controls.RadialContextMenuCommandBase.Index":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Controls.RadialContextMenuCommandBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "Index", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_222_RadialContextMenuCommandBase_Index;
                xamlMember.Setter = set_222_RadialContextMenuCommandBase_Index;
                break;
            case "DevExpress.UI.Xaml.Controls.RadialContextMenuCommandBase.Location":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Controls.RadialContextMenuCommandBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "Location", "Windows.Foundation.Point");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_223_RadialContextMenuCommandBase_Location;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Controls.RadialContextMenuCommandBase.ContentTemplate":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Controls.RadialContextMenuCommandBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ContentTemplate", "Windows.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_224_RadialContextMenuCommandBase_ContentTemplate;
                xamlMember.Setter = set_224_RadialContextMenuCommandBase_ContentTemplate;
                break;
            case "DevExpress.UI.Xaml.Controls.RadialContextMenuCommandBase.ActualContentTemplate":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Controls.RadialContextMenuCommandBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ActualContentTemplate", "Windows.UI.Xaml.DataTemplate");
                xamlMember.Getter = get_225_RadialContextMenuCommandBase_ActualContentTemplate;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Controls.RadialContextMenuCommandBase.ViewInfo":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Controls.RadialContextMenuCommandBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ViewInfo", "DevExpress.UI.Xaml.Controls.Internal.ViewInfo");
                xamlMember.Getter = get_226_RadialContextMenuCommandBase_ViewInfo;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Controls.RadialContextMenuCommandBase.Uri":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Controls.RadialContextMenuCommandBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "Uri", "System.Uri");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_227_RadialContextMenuCommandBase_Uri;
                xamlMember.Setter = set_227_RadialContextMenuCommandBase_Uri;
                break;
            case "DevExpress.UI.Xaml.Controls.RadialContextMenuCommandBase.Label":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Controls.RadialContextMenuCommandBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "Label", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_228_RadialContextMenuCommandBase_Label;
                xamlMember.Setter = set_228_RadialContextMenuCommandBase_Label;
                break;
            case "DevExpress.Core.Native.DXControl.IsFocused":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.Core.Native.DXControl");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "IsFocused", "Boolean");
                xamlMember.Getter = get_229_DXControl_IsFocused;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.Core.Native.DXControl.IsKeyboardFocusWithin":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.Core.Native.DXControl");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "IsKeyboardFocusWithin", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_230_DXControl_IsKeyboardFocusWithin;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.Core.Native.DXControl.IsLoaded":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.Core.Native.DXControl");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "IsLoaded", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_231_DXControl_IsLoaded;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.Core.Native.DXControl.IsMouseOver":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.Core.Native.DXControl");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "IsMouseOver", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_232_DXControl_IsMouseOver;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Controls.RadialMenuControlBase.DefaultActionCommand":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Controls.RadialMenuControlBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "DefaultActionCommand", "System.Windows.Input.ICommand");
                xamlMember.Getter = get_233_RadialMenuControlBase_DefaultActionCommand;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Controls.RadialMenuControlBase.NavigateCommand":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Controls.RadialMenuControlBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "NavigateCommand", "System.Windows.Input.ICommand");
                xamlMember.Getter = get_234_RadialMenuControlBase_NavigateCommand;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.Pdf.Native.PdfDocumentStateBase.Document":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.Pdf.Native.PdfDocumentStateBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "Document", "DevExpress.Pdf.PdfDocument");
                xamlMember.Getter = get_235_PdfDocumentStateBase_Document;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.Pdf.Native.PdfDocumentStateBase.FontStorage":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.Pdf.Native.PdfDocumentStateBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "FontStorage", "DevExpress.Pdf.Native.IFontStorage");
                xamlMember.Getter = get_236_PdfDocumentStateBase_FontStorage;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.Pdf.Native.PdfDocumentStateBase.ImageDataStorage":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.Pdf.Native.PdfDocumentStateBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ImageDataStorage", "DevExpress.Pdf.Native.PdfImageDataStorage");
                xamlMember.Getter = get_237_PdfDocumentStateBase_ImageDataStorage;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.Pdf.Native.PdfDocumentStateBase.SelectionState":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.Pdf.Native.PdfDocumentStateBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "SelectionState", "DevExpress.Pdf.Native.PdfSelectionState");
                xamlMember.Getter = get_238_PdfDocumentStateBase_SelectionState;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.Pdf.Native.PdfDocumentStateBase.Outlines":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.Pdf.Native.PdfDocumentStateBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "Outlines", "DevExpress.Pdf.Native.PdfOutlineTreeListItemCollection");
                xamlMember.Getter = get_239_PdfDocumentStateBase_Outlines;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.Pdf.Native.PdfOutlineTreeListItem.Id":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.Pdf.Native.PdfOutlineTreeListItem");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "Id", "Int32");
                xamlMember.Getter = get_240_PdfOutlineTreeListItem_Id;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.Pdf.Native.PdfOutlineTreeListItem.ParentId":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.Pdf.Native.PdfOutlineTreeListItem");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ParentId", "Int32");
                xamlMember.Getter = get_241_PdfOutlineTreeListItem_ParentId;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.Pdf.Native.PdfOutlineTreeListItem.Title":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.Pdf.Native.PdfOutlineTreeListItem");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "Title", "String");
                xamlMember.Getter = get_242_PdfOutlineTreeListItem_Title;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.Pdf.Native.PdfOutlineTreeListItem.Italic":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.Pdf.Native.PdfOutlineTreeListItem");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "Italic", "Boolean");
                xamlMember.Getter = get_243_PdfOutlineTreeListItem_Italic;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.Pdf.Native.PdfOutlineTreeListItem.Bold":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.Pdf.Native.PdfOutlineTreeListItem");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "Bold", "Boolean");
                xamlMember.Getter = get_244_PdfOutlineTreeListItem_Bold;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.Pdf.Native.PdfOutlineTreeListItem.ForeColor":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.Pdf.Native.PdfOutlineTreeListItem");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ForeColor", "DevExpress.Pdf.PdfColor");
                xamlMember.Getter = get_245_PdfOutlineTreeListItem_ForeColor;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.Pdf.Native.PdfOutlineTreeListItem.HasChildNodes":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.Pdf.Native.PdfOutlineTreeListItem");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "HasChildNodes", "Boolean");
                xamlMember.Getter = get_246_PdfOutlineTreeListItem_HasChildNodes;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.Pdf.Native.PdfOutlineTreeListItem.UseForeColor":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.Pdf.Native.PdfOutlineTreeListItem");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "UseForeColor", "Boolean");
                xamlMember.Getter = get_247_PdfOutlineTreeListItem_UseForeColor;
                xamlMember.Setter = set_247_PdfOutlineTreeListItem_UseForeColor;
                break;
            case "DevExpress.Pdf.Native.PdfOutlineTreeListItem.Expanded":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.Pdf.Native.PdfOutlineTreeListItem");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "Expanded", "Boolean");
                xamlMember.Getter = get_248_PdfOutlineTreeListItem_Expanded;
                xamlMember.Setter = set_248_PdfOutlineTreeListItem_Expanded;
                break;
            case "DevExpress.Pdf.Native.PdfDocumentStateBase.FileAttachments":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.Pdf.Native.PdfDocumentStateBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "FileAttachments", "System.Collections.Generic.IList`1<DevExpress.Pdf.Native.PdfFileAttachmentListItem>");
                xamlMember.Getter = get_249_PdfDocumentStateBase_FileAttachments;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.Pdf.Native.PdfFileAttachmentListItem.FileAttachment":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.Pdf.Native.PdfFileAttachmentListItem");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "FileAttachment", "DevExpress.Pdf.PdfFileAttachment");
                xamlMember.Getter = get_250_PdfFileAttachmentListItem_FileAttachment;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.Pdf.Native.PdfFileAttachmentListItem.Icon":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.Pdf.Native.PdfFileAttachmentListItem");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "Icon", "Byte[]");
                xamlMember.Getter = get_251_PdfFileAttachmentListItem_Icon;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.Pdf.Native.PdfFileAttachmentListItem.Size":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.Pdf.Native.PdfFileAttachmentListItem");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "Size", "String");
                xamlMember.Getter = get_252_PdfFileAttachmentListItem_Size;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.Pdf.Native.PdfFileAttachmentListItem.Hint":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.Pdf.Native.PdfFileAttachmentListItem");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "Hint", "String");
                xamlMember.Getter = get_253_PdfFileAttachmentListItem_Hint;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.Pdf.Native.PdfFileAttachmentListItem.FileName":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.Pdf.Native.PdfFileAttachmentListItem");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "FileName", "String");
                xamlMember.Getter = get_254_PdfFileAttachmentListItem_FileName;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.Pdf.Native.PdfFileAttachmentListItem.ModificationDate":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.Pdf.Native.PdfFileAttachmentListItem");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ModificationDate", "System.Nullable`1<System.DateTimeOffset>");
                xamlMember.Getter = get_255_PdfFileAttachmentListItem_ModificationDate;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.Pdf.Native.PdfFileAttachmentListItem.Description":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.Pdf.Native.PdfFileAttachmentListItem");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "Description", "String");
                xamlMember.Getter = get_256_PdfFileAttachmentListItem_Description;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.Pdf.Native.PdfDocumentStateBase.RotationAngle":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.Pdf.Native.PdfDocumentStateBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "RotationAngle", "Int32");
                xamlMember.Getter = get_257_PdfDocumentStateBase_RotationAngle;
                xamlMember.Setter = set_257_PdfDocumentStateBase_RotationAngle;
                break;
            case "DevExpress.Pdf.Native.PdfDocumentStateBase.HighlightFormFields":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.Pdf.Native.PdfDocumentStateBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "HighlightFormFields", "Boolean");
                xamlMember.Getter = get_258_PdfDocumentStateBase_HighlightFormFields;
                xamlMember.Setter = set_258_PdfDocumentStateBase_HighlightFormFields;
                break;
            case "DevExpress.Pdf.Native.PdfDocumentStateBase.HighlightedFormFieldColor":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.Pdf.Native.PdfDocumentStateBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "HighlightedFormFieldColor", "DevExpress.Pdf.PdfColor");
                xamlMember.Getter = get_259_PdfDocumentStateBase_HighlightedFormFieldColor;
                xamlMember.Setter = set_259_PdfDocumentStateBase_HighlightedFormFieldColor;
                break;
            case "DevExpress.Pdf.Native.PdfDocumentStateBase.FormData":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.Pdf.Native.PdfDocumentStateBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "FormData", "DevExpress.Pdf.PdfFormData");
                xamlMember.Getter = get_260_PdfDocumentStateBase_FormData;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Controls.Internal.Pdf.PdfTextHighlightViewModel.Items":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Controls.Internal.Pdf.PdfTextHighlightViewModel");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "Items", "System.Collections.Generic.List`1<DevExpress.UI.Xaml.Controls.IPdfTextSearchResult>");
                xamlMember.Getter = get_261_PdfTextHighlightViewModel_Items;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Controls.IPdfTextSearchResult.PageIndex":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Controls.IPdfTextSearchResult");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "PageIndex", "Int32");
                xamlMember.Getter = get_262_IPdfTextSearchResult_PageIndex;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Controls.IPdfTextSearchResult.Rectangles":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Controls.IPdfTextSearchResult");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "Rectangles", "System.Collections.Generic.IList`1<DevExpress.Pdf.PdfOrientedRectangle>");
                xamlMember.Getter = get_263_IPdfTextSearchResult_Rectangles;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.Pdf.PdfOrientedRectangle.Left":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.Pdf.PdfOrientedRectangle");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "Left", "Double");
                xamlMember.Getter = get_264_PdfOrientedRectangle_Left;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.Pdf.PdfOrientedRectangle.Top":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.Pdf.PdfOrientedRectangle");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "Top", "Double");
                xamlMember.Getter = get_265_PdfOrientedRectangle_Top;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.Pdf.PdfOrientedRectangle.Width":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.Pdf.PdfOrientedRectangle");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "Width", "Double");
                xamlMember.Getter = get_266_PdfOrientedRectangle_Width;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.Pdf.PdfOrientedRectangle.Height":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.Pdf.PdfOrientedRectangle");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "Height", "Double");
                xamlMember.Getter = get_267_PdfOrientedRectangle_Height;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.Pdf.PdfOrientedRectangle.Angle":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.Pdf.PdfOrientedRectangle");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "Angle", "Double");
                xamlMember.Getter = get_268_PdfOrientedRectangle_Angle;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Controls.IPdfTextSearchResult.Words":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Controls.IPdfTextSearchResult");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "Words", "System.Collections.Generic.IList`1<DevExpress.Pdf.PdfWord>");
                xamlMember.Getter = get_269_IPdfTextSearchResult_Words;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.Pdf.PdfWord.Text":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.Pdf.PdfWord");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "Text", "String");
                xamlMember.Getter = get_270_PdfWord_Text;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.Pdf.PdfWord.Rectangles":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.Pdf.PdfWord");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "Rectangles", "System.Collections.Generic.IList`1<DevExpress.Pdf.PdfOrientedRectangle>");
                xamlMember.Getter = get_271_PdfWord_Rectangles;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.Pdf.PdfWord.Characters":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.Pdf.PdfWord");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "Characters", "System.Collections.Generic.IList`1<DevExpress.Pdf.PdfCharacter>");
                xamlMember.Getter = get_272_PdfWord_Characters;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.Pdf.PdfCharacter.UnicodeData":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.Pdf.PdfCharacter");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "UnicodeData", "String");
                xamlMember.Getter = get_273_PdfCharacter_UnicodeData;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.Pdf.PdfCharacter.Font":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.Pdf.PdfCharacter");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "Font", "DevExpress.Pdf.PdfFont");
                xamlMember.Getter = get_274_PdfCharacter_Font;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.Pdf.PdfCharacter.FontSize":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.Pdf.PdfCharacter");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "FontSize", "Double");
                xamlMember.Getter = get_275_PdfCharacter_FontSize;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.Pdf.PdfCharacter.Rectangle":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.Pdf.PdfCharacter");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "Rectangle", "DevExpress.Pdf.PdfOrientedRectangle");
                xamlMember.Getter = get_276_PdfCharacter_Rectangle;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Controls.IPdfTextSearchResult.SearchText":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Controls.IPdfTextSearchResult");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "SearchText", "String");
                xamlMember.Getter = get_277_IPdfTextSearchResult_SearchText;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Controls.IPdfTextSearchResult.IsSelected":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Controls.IPdfTextSearchResult");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "IsSelected", "Boolean");
                xamlMember.Getter = get_278_IPdfTextSearchResult_IsSelected;
                xamlMember.Setter = set_278_IPdfTextSearchResult_IsSelected;
                break;
            case "DevExpress.UI.Xaml.Controls.Internal.Pdf.PdfTextHighlightViewModel.HighlightGeometry":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Controls.Internal.Pdf.PdfTextHighlightViewModel");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "HighlightGeometry", "Windows.UI.Xaml.Media.Geometry");
                xamlMember.Getter = get_279_PdfTextHighlightViewModel_HighlightGeometry;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Controls.Internal.Pdf.PdfTextHighlightViewModel.SelectionGeometry":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Controls.Internal.Pdf.PdfTextHighlightViewModel");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "SelectionGeometry", "Windows.UI.Xaml.Media.Geometry");
                xamlMember.Getter = get_280_PdfTextHighlightViewModel_SelectionGeometry;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Controls.Internal.Pdf.PdfTextHighlightViewModel.IsLockUpdate":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Controls.Internal.Pdf.PdfTextHighlightViewModel");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "IsLockUpdate", "Boolean");
                xamlMember.Getter = get_281_PdfTextHighlightViewModel_IsLockUpdate;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Controls.Internal.Pdf.PdfTextHighlightViewModel.HasSelection":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Controls.Internal.Pdf.PdfTextHighlightViewModel");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "HasSelection", "Boolean");
                xamlMember.Getter = get_282_PdfTextHighlightViewModel_HasSelection;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Editors.ColorGroup.BaseColors":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Editors.ColorGroup");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "BaseColors", "DevExpress.UI.Xaml.Editors.ColorList");
                xamlMember.Getter = get_283_ColorGroup_BaseColors;
                xamlMember.SetIsReadOnly();
                break;
            case "Windows.UI.Color.A":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Windows.UI.Color");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "A", "Byte");
                xamlMember.Getter = get_284_Color_A;
                xamlMember.Setter = set_284_Color_A;
                break;
            case "Windows.UI.Color.B":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Windows.UI.Color");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "B", "Byte");
                xamlMember.Getter = get_285_Color_B;
                xamlMember.Setter = set_285_Color_B;
                break;
            case "Windows.UI.Color.G":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Windows.UI.Color");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "G", "Byte");
                xamlMember.Getter = get_286_Color_G;
                xamlMember.Setter = set_286_Color_G;
                break;
            case "Windows.UI.Color.R":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Windows.UI.Color");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "R", "Byte");
                xamlMember.Getter = get_287_Color_R;
                xamlMember.Setter = set_287_Color_R;
                break;
            case "DevExpress.UI.Xaml.Editors.ColorGroup.ColorVariationsCount":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Editors.ColorGroup");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ColorVariationsCount", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_288_ColorGroup_ColorVariationsCount;
                xamlMember.Setter = set_288_ColorGroup_ColorVariationsCount;
                break;
            case "DevExpress.UI.Xaml.Editors.ColorGroup.Title":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Editors.ColorGroup");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "Title", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_289_ColorGroup_Title;
                xamlMember.Setter = set_289_ColorGroup_Title;
                break;
            case "DevExpress.UI.Xaml.Editors.ColorGroup.ActualColors":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Editors.ColorGroup");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ActualColors", "DevExpress.UI.Xaml.Editors.BrushList");
                xamlMember.Getter = get_290_ColorGroup_ActualColors;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Editors.ColorGroup.dummyColorsCount":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Editors.ColorGroup");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "dummyColorsCount", "Int32");
                xamlMember.Getter = get_291_ColorGroup_dummyColorsCount;
                xamlMember.Setter = set_291_ColorGroup_dummyColorsCount;
                break;
            case "DevExpress.UI.Xaml.Editors.ColorEdit.ColorGroups":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Editors.ColorEdit");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ColorGroups", "DevExpress.UI.Xaml.Editors.ColorGroupsList");
                xamlMember.Getter = get_292_ColorEdit_ColorGroups;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Editors.ColorEdit.ActualPickerSelectedColor":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Editors.ColorEdit");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ActualPickerSelectedColor", "Windows.UI.Color");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_293_ColorEdit_ActualPickerSelectedColor;
                xamlMember.Setter = set_293_ColorEdit_ActualPickerSelectedColor;
                break;
            case "DevExpress.UI.Xaml.Editors.ColorEdit.Color":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Editors.ColorEdit");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "Color", "Windows.UI.Color");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_294_ColorEdit_Color;
                xamlMember.Setter = set_294_ColorEdit_Color;
                break;
            case "DevExpress.UI.Xaml.Editors.ColorEdit.DefaultColor":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Editors.ColorEdit");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "DefaultColor", "Windows.UI.Color");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_295_ColorEdit_DefaultColor;
                xamlMember.Setter = set_295_ColorEdit_DefaultColor;
                break;
            case "DevExpress.UI.Xaml.Editors.ColorEdit.GallerySelectedColor":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Editors.ColorEdit");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "GallerySelectedColor", "Windows.UI.Color");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_296_ColorEdit_GallerySelectedColor;
                xamlMember.Setter = set_296_ColorEdit_GallerySelectedColor;
                break;
            case "DevExpress.UI.Xaml.Editors.ColorEdit.IsInAdvancedMode":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Editors.ColorEdit");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "IsInAdvancedMode", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_297_ColorEdit_IsInAdvancedMode;
                xamlMember.Setter = set_297_ColorEdit_IsInAdvancedMode;
                break;
            case "DevExpress.UI.Xaml.Editors.ColorEdit.MaxColCount":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Editors.ColorEdit");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "MaxColCount", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_298_ColorEdit_MaxColCount;
                xamlMember.Setter = set_298_ColorEdit_MaxColCount;
                break;
            case "DevExpress.UI.Xaml.Editors.ColorEdit.MaxGroupSize":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Editors.ColorEdit");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "MaxGroupSize", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_299_ColorEdit_MaxGroupSize;
                xamlMember.Setter = set_299_ColorEdit_MaxGroupSize;
                break;
            case "DevExpress.UI.Xaml.Editors.ColorEdit.PickerSelectedColor":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Editors.ColorEdit");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "PickerSelectedColor", "Windows.UI.Color");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_300_ColorEdit_PickerSelectedColor;
                xamlMember.Setter = set_300_ColorEdit_PickerSelectedColor;
                break;
            case "DevExpress.UI.Xaml.Editors.ColorEdit.ColorGroupsSource":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Editors.ColorEdit");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ColorGroupsSource", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_301_ColorEdit_ColorGroupsSource;
                xamlMember.Setter = set_301_ColorEdit_ColorGroupsSource;
                break;
            case "DevExpress.UI.Xaml.Editors.ColorEdit.ActualColorGroups":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Editors.ColorEdit");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ActualColorGroups", "DevExpress.UI.Xaml.Editors.ColorGroupsList");
                xamlMember.Getter = get_302_ColorEdit_ActualColorGroups;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Editors.ColorEdit.ApplyCustomColorCommand":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Editors.ColorEdit");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ApplyCustomColorCommand", "System.Windows.Input.ICommand");
                xamlMember.Getter = get_303_ColorEdit_ApplyCustomColorCommand;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Editors.ColorEdit.ApplyDefaultColorCommand":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Editors.ColorEdit");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ApplyDefaultColorCommand", "System.Windows.Input.ICommand");
                xamlMember.Getter = get_304_ColorEdit_ApplyDefaultColorCommand;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Editors.ColorEdit.CancelCommand":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Editors.ColorEdit");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "CancelCommand", "System.Windows.Input.ICommand");
                xamlMember.Getter = get_305_ColorEdit_CancelCommand;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Editors.ColorEdit.ApplyColorCommand":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Editors.ColorEdit");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ApplyColorCommand", "DevExpress.Mvvm.DelegateCommand");
                xamlMember.Getter = get_306_ColorEdit_ApplyColorCommand;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Editors.ColorPicker.AThumbOffset":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Editors.ColorPicker");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "AThumbOffset", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_307_ColorPicker_AThumbOffset;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Editors.ColorPicker.HThumbOffset":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Editors.ColorPicker");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "HThumbOffset", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_308_ColorPicker_HThumbOffset;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Editors.ColorPicker.SThumbOffset":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Editors.ColorPicker");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "SThumbOffset", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_309_ColorPicker_SThumbOffset;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Editors.ColorPicker.BThumbOffset":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Editors.ColorPicker");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "BThumbOffset", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_310_ColorPicker_BThumbOffset;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Editors.ColorPicker.PureColor":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Editors.ColorPicker");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "PureColor", "Windows.UI.Color");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_311_ColorPicker_PureColor;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Editors.ColorPicker.PureTransparentColor":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Editors.ColorPicker");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "PureTransparentColor", "Windows.UI.Color");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_312_ColorPicker_PureTransparentColor;
                xamlMember.Setter = set_312_ColorPicker_PureTransparentColor;
                break;
            case "DevExpress.UI.Xaml.Editors.ColorPicker.SelectedColor":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Editors.ColorPicker");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "SelectedColor", "Windows.UI.Color");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_313_ColorPicker_SelectedColor;
                xamlMember.Setter = set_313_ColorPicker_SelectedColor;
                break;
            case "DevExpress.UI.Xaml.Editors.ColorPicker.ColorModels":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Editors.ColorPicker");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ColorModels", "DevExpress.UI.Xaml.Editors.ColorModelCollection");
                xamlMember.Getter = get_314_ColorPicker_ColorModels;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Editors.ColorModelBase.ALow":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Editors.ColorModelBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ALow", "Windows.UI.Color");
                xamlMember.Getter = get_315_ColorModelBase_ALow;
                xamlMember.Setter = set_315_ColorModelBase_ALow;
                break;
            case "DevExpress.UI.Xaml.Editors.ColorModelBase.AHigh":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Editors.ColorModelBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "AHigh", "Windows.UI.Color");
                xamlMember.Getter = get_316_ColorModelBase_AHigh;
                xamlMember.Setter = set_316_ColorModelBase_AHigh;
                break;
            case "DevExpress.UI.Xaml.Editors.ColorModelBase.A":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Editors.ColorModelBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "A", "Int32");
                xamlMember.Getter = get_317_ColorModelBase_A;
                xamlMember.Setter = set_317_ColorModelBase_A;
                break;
            case "DevExpress.UI.Xaml.Editors.ColorModelBase.Color":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Editors.ColorModelBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "Color", "Windows.UI.Color");
                xamlMember.Getter = get_318_ColorModelBase_Color;
                xamlMember.Setter = set_318_ColorModelBase_Color;
                break;
            case "DevExpress.UI.Xaml.Editors.ColorModelBase.Hex":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Editors.ColorModelBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "Hex", "String");
                xamlMember.Getter = get_319_ColorModelBase_Hex;
                xamlMember.Setter = set_319_ColorModelBase_Hex;
                break;
            case "DevExpress.UI.Xaml.Editors.ColorModelBase.ColorMode":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Editors.ColorModelBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ColorMode", "DevExpress.UI.Xaml.Editors.ColorPickerColorMode");
                xamlMember.Getter = get_320_ColorModelBase_ColorMode;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Editors.ColorPicker.HSBColor":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Editors.ColorPicker");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "HSBColor", "DevExpress.UI.Xaml.Editors.HSBColorModel");
                xamlMember.Getter = get_321_ColorPicker_HSBColor;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Editors.ColorPicker.RGBColor":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Editors.ColorPicker");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "RGBColor", "DevExpress.UI.Xaml.Editors.RGBColorModel");
                xamlMember.Getter = get_322_ColorPicker_RGBColor;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Editors.PopupSettings.PopupContent":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Editors.PopupSettings");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "PopupContent", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_323_PopupSettings_PopupContent;
                xamlMember.Setter = set_323_PopupSettings_PopupContent;
                break;
            case "DevExpress.UI.Xaml.Editors.PopupSettings.ClosePopupCommand":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Editors.PopupSettings");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ClosePopupCommand", "System.Windows.Input.ICommand");
                xamlMember.Getter = get_324_PopupSettings_ClosePopupCommand;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Editors.PopupSettings.ShowPopupButtons":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Editors.PopupSettings");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ShowPopupButtons", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_325_PopupSettings_ShowPopupButtons;
                xamlMember.Setter = set_325_PopupSettings_ShowPopupButtons;
                break;
            case "DevExpress.UI.Xaml.Editors.PopupSettings.IsPopupOpen":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Editors.PopupSettings");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "IsPopupOpen", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_326_PopupSettings_IsPopupOpen;
                xamlMember.Setter = set_326_PopupSettings_IsPopupOpen;
                break;
            case "DevExpress.UI.Xaml.Editors.PopupSettings.PopupContentTemplate":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Editors.PopupSettings");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "PopupContentTemplate", "Windows.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_327_PopupSettings_PopupContentTemplate;
                xamlMember.Setter = set_327_PopupSettings_PopupContentTemplate;
                break;
            case "DevExpress.UI.Xaml.Editors.PopupSettings.PopupTemplate":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Editors.PopupSettings");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "PopupTemplate", "Windows.UI.Xaml.Controls.ControlTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_328_PopupSettings_PopupTemplate;
                xamlMember.Setter = set_328_PopupSettings_PopupTemplate;
                break;
            case "DevExpress.UI.Xaml.Editors.PopupSettings.PopupContentTemplateSelector":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Editors.PopupSettings");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "PopupContentTemplateSelector", "Windows.UI.Xaml.Controls.DataTemplateSelector");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_329_PopupSettings_PopupContentTemplateSelector;
                xamlMember.Setter = set_329_PopupSettings_PopupContentTemplateSelector;
                break;
            case "DevExpress.UI.Xaml.Editors.PopupSettings.PopupContentContainerTemplate":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Editors.PopupSettings");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "PopupContentContainerTemplate", "Windows.UI.Xaml.Controls.ControlTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_330_PopupSettings_PopupContentContainerTemplate;
                xamlMember.Setter = set_330_PopupSettings_PopupContentContainerTemplate;
                break;
            case "DevExpress.UI.Xaml.Editors.PopupSettings.PopupAutoWidth":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Editors.PopupSettings");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "PopupAutoWidth", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_331_PopupSettings_PopupAutoWidth;
                xamlMember.Setter = set_331_PopupSettings_PopupAutoWidth;
                break;
            case "DevExpress.UI.Xaml.Editors.PopupSettings.PopupWidth":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Editors.PopupSettings");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "PopupWidth", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_332_PopupSettings_PopupWidth;
                xamlMember.Setter = set_332_PopupSettings_PopupWidth;
                break;
            case "DevExpress.UI.Xaml.Editors.PopupSettings.PopupHeight":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Editors.PopupSettings");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "PopupHeight", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_333_PopupSettings_PopupHeight;
                xamlMember.Setter = set_333_PopupSettings_PopupHeight;
                break;
            case "DevExpress.UI.Xaml.Editors.PopupSettings.ActualPopupWidth":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Editors.PopupSettings");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ActualPopupWidth", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_334_PopupSettings_ActualPopupWidth;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Editors.PopupSettings.ActualPopupHeight":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Editors.PopupSettings");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ActualPopupHeight", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_335_PopupSettings_ActualPopupHeight;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Editors.PopupSettings.PopupMaxWidth":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Editors.PopupSettings");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "PopupMaxWidth", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_336_PopupSettings_PopupMaxWidth;
                xamlMember.Setter = set_336_PopupSettings_PopupMaxWidth;
                break;
            case "DevExpress.UI.Xaml.Editors.PopupSettings.PopupMinWidth":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Editors.PopupSettings");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "PopupMinWidth", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_337_PopupSettings_PopupMinWidth;
                xamlMember.Setter = set_337_PopupSettings_PopupMinWidth;
                break;
            case "DevExpress.UI.Xaml.Editors.PopupSettings.ActualPopupMinWidth":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Editors.PopupSettings");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ActualPopupMinWidth", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_338_PopupSettings_ActualPopupMinWidth;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Editors.PopupSettings.PopupMaxHeight":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Editors.PopupSettings");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "PopupMaxHeight", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_339_PopupSettings_PopupMaxHeight;
                xamlMember.Setter = set_339_PopupSettings_PopupMaxHeight;
                break;
            case "DevExpress.UI.Xaml.Editors.PopupSettings.PopupMinHeight":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Editors.PopupSettings");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "PopupMinHeight", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_340_PopupSettings_PopupMinHeight;
                xamlMember.Setter = set_340_PopupSettings_PopupMinHeight;
                break;
            case "DevExpress.UI.Xaml.Editors.PopupSettings.PostEditValue":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Editors.PopupSettings");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "PostEditValue", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_341_PopupSettings_PostEditValue;
                xamlMember.Setter = set_341_PopupSettings_PostEditValue;
                break;
            case "DevExpress.UI.Xaml.Editors.PopupSettings.PopupEditValue":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Editors.PopupSettings");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "PopupEditValue", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_342_PopupSettings_PopupEditValue;
                xamlMember.Setter = set_342_PopupSettings_PopupEditValue;
                break;
            case "DevExpress.UI.Xaml.GalleryItemContainerGeneratorBase.ContentTemplate":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.GalleryItemContainerGeneratorBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ContentTemplate", "Windows.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_343_GalleryItemContainerGeneratorBase_ContentTemplate;
                xamlMember.Setter = set_343_GalleryItemContainerGeneratorBase_ContentTemplate;
                break;
            case "DevExpress.UI.Xaml.GalleryItemContainerGeneratorBase.ContentTemplateSelector":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.GalleryItemContainerGeneratorBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ContentTemplateSelector", "Windows.UI.Xaml.Controls.DataTemplateSelector");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_344_GalleryItemContainerGeneratorBase_ContentTemplateSelector;
                xamlMember.Setter = set_344_GalleryItemContainerGeneratorBase_ContentTemplateSelector;
                break;
            case "DevExpress.UI.Xaml.GalleryItemContainerGeneratorBase.ContainerStyle":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.GalleryItemContainerGeneratorBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ContainerStyle", "Windows.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_345_GalleryItemContainerGeneratorBase_ContainerStyle;
                xamlMember.Setter = set_345_GalleryItemContainerGeneratorBase_ContainerStyle;
                break;
            case "DevExpress.UI.Xaml.GalleryItemContainerGeneratorBase.ActualColumnWidth":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.GalleryItemContainerGeneratorBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ActualColumnWidth", "Double");
                xamlMember.Getter = get_346_GalleryItemContainerGeneratorBase_ActualColumnWidth;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.GalleryItemContainerGeneratorBase.AverageContainerHeight":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.GalleryItemContainerGeneratorBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "AverageContainerHeight", "Double");
                xamlMember.Getter = get_347_GalleryItemContainerGeneratorBase_AverageContainerHeight;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.GalleryItemContainerGeneratorBase.GroupedItems":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.GalleryItemContainerGeneratorBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "GroupedItems", "Boolean");
                xamlMember.Getter = get_348_GalleryItemContainerGeneratorBase_GroupedItems;
                xamlMember.Setter = set_348_GalleryItemContainerGeneratorBase_GroupedItems;
                break;
            case "DevExpress.UI.Xaml.GalleryItemContainerGeneratorBase.MaxContainerHeight":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.GalleryItemContainerGeneratorBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "MaxContainerHeight", "Double");
                xamlMember.Getter = get_349_GalleryItemContainerGeneratorBase_MaxContainerHeight;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.GalleryItemContainerGeneratorBase.DummyItem":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.GalleryItemContainerGeneratorBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "DummyItem", "Windows.UI.Xaml.FrameworkElement");
                xamlMember.Getter = get_350_GalleryItemContainerGeneratorBase_DummyItem;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Layout.Internal.MenuFrameBase`1<DevExpress.UI.Xaml.Layout.HamburgerMenu>.Menu":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Layout.Internal.MenuFrameBase`1<DevExpress.UI.Xaml.Layout.HamburgerMenu>");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "Menu", "DevExpress.UI.Xaml.Layout.HamburgerMenu");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_351_MenuFrameBase_Menu;
                xamlMember.Setter = set_351_MenuFrameBase_Menu;
                break;
            case "DevExpress.UI.Xaml.Layout.HamburgerMenu.Items":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Layout.HamburgerMenu");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "Items", "System.Collections.ObjectModel.ObservableCollection`1<DevExpress.UI.Xaml.Layout.Internal.IHamburgerMenuItem>");
                xamlMember.Getter = get_352_HamburgerMenu_Items;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Layout.Internal.IHamburgerMenuItem.Placement":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Layout.Internal.IHamburgerMenuItem");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "Placement", "DevExpress.UI.Xaml.Layout.HamburgerMenuNavigationButtonPlacement");
                xamlMember.Getter = get_353_IHamburgerMenuItem_Placement;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Layout.Internal.MenuFrameBase`1<DevExpress.UI.Xaml.Layout.HamburgerMenu>.MenuPageType":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Layout.Internal.MenuFrameBase`1<DevExpress.UI.Xaml.Layout.HamburgerMenu>");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "MenuPageType", "System.Type");
                xamlMember.Getter = get_354_MenuFrameBase_MenuPageType;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Layout.DXFrame.ViewModel":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Layout.DXFrame");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ViewModel", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_355_DXFrame_ViewModel;
                xamlMember.Setter = set_355_DXFrame_ViewModel;
                break;
            case "DevExpress.UI.Xaml.Layout.DXFrame.NavigationTypeProvider":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Layout.DXFrame");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "NavigationTypeProvider", "DevExpress.UI.Xaml.Layout.TypeProviderBase");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_356_DXFrame_NavigationTypeProvider;
                xamlMember.Setter = set_356_DXFrame_NavigationTypeProvider;
                break;
            case "DevExpress.UI.Xaml.Layout.DXFrame.AllowCustomizingWindowTitle":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Layout.DXFrame");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "AllowCustomizingWindowTitle", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_357_DXFrame_AllowCustomizingWindowTitle;
                xamlMember.Setter = set_357_DXFrame_AllowCustomizingWindowTitle;
                break;
            case "DevExpress.UI.Xaml.Layout.DXFrame.WindowTitle":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Layout.DXFrame");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "WindowTitle", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_358_DXFrame_WindowTitle;
                xamlMember.Setter = set_358_DXFrame_WindowTitle;
                break;
            case "DevExpress.UI.Xaml.Layout.DXFrame.WindowTitleSettings":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Layout.DXFrame");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "WindowTitleSettings", "DevExpress.UI.Xaml.TitleSettings");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_359_DXFrame_WindowTitleSettings;
                xamlMember.Setter = set_359_DXFrame_WindowTitleSettings;
                break;
            case "DevExpress.UI.Xaml.Layout.DXFrame.IsMobileStatusBarVisible":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Layout.DXFrame");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "IsMobileStatusBarVisible", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_360_DXFrame_IsMobileStatusBarVisible;
                xamlMember.Setter = set_360_DXFrame_IsMobileStatusBarVisible;
                break;
            case "DevExpress.UI.Xaml.Layout.DXFrame.MobileStatusBarBackground":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Layout.DXFrame");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "MobileStatusBarBackground", "Windows.UI.Xaml.Media.SolidColorBrush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_361_DXFrame_MobileStatusBarBackground;
                xamlMember.Setter = set_361_DXFrame_MobileStatusBarBackground;
                break;
            case "DevExpress.UI.Xaml.Layout.DXFrame.MobileStatusBarForeground":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Layout.DXFrame");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "MobileStatusBarForeground", "Windows.UI.Xaml.Media.SolidColorBrush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_362_DXFrame_MobileStatusBarForeground;
                xamlMember.Setter = set_362_DXFrame_MobileStatusBarForeground;
                break;
            case "DevExpress.UI.Xaml.Layout.DXFrame.SyncRequestedThemeWithThemeManager":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Layout.DXFrame");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "SyncRequestedThemeWithThemeManager", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_363_DXFrame_SyncRequestedThemeWithThemeManager;
                xamlMember.Setter = set_363_DXFrame_SyncRequestedThemeWithThemeManager;
                break;
            case "DevExpress.UI.Xaml.Layout.DXFrame.HideBackButton":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Layout.DXFrame");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "HideBackButton", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_364_DXFrame_HideBackButton;
                xamlMember.Setter = set_364_DXFrame_HideBackButton;
                break;
            case "DevExpress.UI.Xaml.Layout.Internal.MenuFrameBase`1<DevExpress.UI.Xaml.Layout.TileBar>.Menu":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Layout.Internal.MenuFrameBase`1<DevExpress.UI.Xaml.Layout.TileBar>");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "Menu", "DevExpress.UI.Xaml.Layout.TileBar");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_365_MenuFrameBase_Menu;
                xamlMember.Setter = set_365_MenuFrameBase_Menu;
                break;
            case "DevExpress.UI.Xaml.Layout.TileBarFrame.MenuPlacement":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Layout.TileBarFrame");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "MenuPlacement", "DevExpress.Core.Dock");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_366_TileBarFrame_MenuPlacement;
                xamlMember.Setter = set_366_TileBarFrame_MenuPlacement;
                break;
            case "DevExpress.UI.Xaml.Layout.Internal.MenuFrameBase`1<DevExpress.UI.Xaml.Layout.TileBar>.MenuPageType":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Layout.Internal.MenuFrameBase`1<DevExpress.UI.Xaml.Layout.TileBar>");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "MenuPageType", "System.Type");
                xamlMember.Getter = get_367_MenuFrameBase_MenuPageType;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Ribbon.BackstageTabItem.ControlPane":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.BackstageTabItem");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ControlPane", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_368_BackstageTabItem_ControlPane;
                xamlMember.Setter = set_368_BackstageTabItem_ControlPane;
                break;
            case "DevExpress.UI.Xaml.Ribbon.BackstageTabItem.ControlPaneShowMode":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.BackstageTabItem");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ControlPaneShowMode", "DevExpress.UI.Xaml.Ribbon.ControlPaneShowMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_369_BackstageTabItem_ControlPaneShowMode;
                xamlMember.Setter = set_369_BackstageTabItem_ControlPaneShowMode;
                break;
            case "DevExpress.UI.Xaml.Ribbon.BackstageTabItem.FlyoutCaption":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.BackstageTabItem");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "FlyoutCaption", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_370_BackstageTabItem_FlyoutCaption;
                xamlMember.Setter = set_370_BackstageTabItem_FlyoutCaption;
                break;
            case "DevExpress.UI.Xaml.Ribbon.BackstageTabItem.IsSelectable":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.BackstageTabItem");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "IsSelectable", "Boolean");
                xamlMember.Getter = get_371_BackstageTabItem_IsSelectable;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Ribbon.Internal.RibbonSelectorItemBase.IsSelected":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.Internal.RibbonSelectorItemBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "IsSelected", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_372_RibbonSelectorItemBase_IsSelected;
                xamlMember.Setter = set_372_RibbonSelectorItemBase_IsSelected;
                break;
            case "DevExpress.UI.Xaml.Ribbon.Internal.RibbonItemBase.FlyoutFlowBreak":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.Internal.RibbonItemBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "FlyoutFlowBreak", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_373_RibbonItemBase_FlyoutFlowBreak;
                xamlMember.Setter = set_373_RibbonItemBase_FlyoutFlowBreak;
                break;
            case "DevExpress.UI.Xaml.Ribbon.Internal.RibbonItemBase.FlyoutSameRow":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.Internal.RibbonItemBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "FlyoutSameRow", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_374_RibbonItemBase_FlyoutSameRow;
                xamlMember.Setter = set_374_RibbonItemBase_FlyoutSameRow;
                break;
            case "DevExpress.UI.Xaml.Ribbon.Internal.RibbonItemBase.FlyoutFlowBreakWithSeparator":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.Internal.RibbonItemBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "FlyoutFlowBreakWithSeparator", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_375_RibbonItemBase_FlyoutFlowBreakWithSeparator;
                xamlMember.Setter = set_375_RibbonItemBase_FlyoutFlowBreakWithSeparator;
                break;
            case "DevExpress.UI.Xaml.Ribbon.Internal.RibbonItemBase.ItemStyle":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.Internal.RibbonItemBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ItemStyle", "DevExpress.UI.Xaml.Ribbon.RibbonItemStyle");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_376_RibbonItemBase_ItemStyle;
                xamlMember.Setter = set_376_RibbonItemBase_ItemStyle;
                break;
            case "DevExpress.UI.Xaml.Ribbon.Internal.RibbonItemBase.ShowInFlyoutOnly":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.Internal.RibbonItemBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ShowInFlyoutOnly", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_377_RibbonItemBase_ShowInFlyoutOnly;
                xamlMember.Setter = set_377_RibbonItemBase_ShowInFlyoutOnly;
                break;
            case "DevExpress.UI.Xaml.Ribbon.Internal.RibbonItemBase.ShrinkPriority":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.Internal.RibbonItemBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ShrinkPriority", "DevExpress.UI.Xaml.Ribbon.CollapsePriority");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_378_RibbonItemBase_ShrinkPriority;
                xamlMember.Setter = set_378_RibbonItemBase_ShrinkPriority;
                break;
            case "DevExpress.UI.Xaml.Ribbon.Internal.RibbonItemBase.CollapsePriority":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.Internal.RibbonItemBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "CollapsePriority", "DevExpress.UI.Xaml.Ribbon.CollapsePriority");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_379_RibbonItemBase_CollapsePriority;
                xamlMember.Setter = set_379_RibbonItemBase_CollapsePriority;
                break;
            case "DevExpress.UI.Xaml.Ribbon.Internal.RibbonItemBase.CollapsedGroupName":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.Internal.RibbonItemBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "CollapsedGroupName", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_380_RibbonItemBase_CollapsedGroupName;
                xamlMember.Setter = set_380_RibbonItemBase_CollapsedGroupName;
                break;
            case "DevExpress.UI.Xaml.Internal.GlyphItemBase.Icon":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Internal.GlyphItemBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "Icon", "Windows.UI.Xaml.Controls.IconElement");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_381_GlyphItemBase_Icon;
                xamlMember.Setter = set_381_GlyphItemBase_Icon;
                break;
            case "DevExpress.UI.Xaml.Internal.GlyphItemBase.IconSource":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Internal.GlyphItemBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "IconSource", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_382_GlyphItemBase_IconSource;
                xamlMember.Setter = set_382_GlyphItemBase_IconSource;
                break;
            case "DevExpress.UI.Xaml.Internal.GlyphItemBase.IconTemplate":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Internal.GlyphItemBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "IconTemplate", "Windows.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_383_GlyphItemBase_IconTemplate;
                xamlMember.Setter = set_383_GlyphItemBase_IconTemplate;
                break;
            case "DevExpress.UI.Xaml.Internal.GlyphItemBase.IconFill":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Internal.GlyphItemBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "IconFill", "Windows.UI.Xaml.Media.SolidColorBrush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_384_GlyphItemBase_IconFill;
                xamlMember.Setter = set_384_GlyphItemBase_IconFill;
                break;
            case "DevExpress.UI.Xaml.Internal.GlyphItemBase.IconWidth":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Internal.GlyphItemBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "IconWidth", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_385_GlyphItemBase_IconWidth;
                xamlMember.Setter = set_385_GlyphItemBase_IconWidth;
                break;
            case "DevExpress.UI.Xaml.Internal.GlyphItemBase.IconHeight":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Internal.GlyphItemBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "IconHeight", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_386_GlyphItemBase_IconHeight;
                xamlMember.Setter = set_386_GlyphItemBase_IconHeight;
                break;
            case "DevExpress.UI.Xaml.Internal.GlyphItemBase.IconStretch":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Internal.GlyphItemBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "IconStretch", "Windows.UI.Xaml.Media.Stretch");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_387_GlyphItemBase_IconStretch;
                xamlMember.Setter = set_387_GlyphItemBase_IconStretch;
                break;
            case "DevExpress.UI.Xaml.Internal.GlyphItemBase.IconSizeUnit":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Internal.GlyphItemBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "IconSizeUnit", "DevExpress.UI.Xaml.IconSizeUnit");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_388_GlyphItemBase_IconSizeUnit;
                xamlMember.Setter = set_388_GlyphItemBase_IconSizeUnit;
                break;
            case "DevExpress.UI.Xaml.Internal.GlyphItemBase.TemplateSelector":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Internal.GlyphItemBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "TemplateSelector", "DevExpress.UI.Xaml.ControlTemplateSelector");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_389_GlyphItemBase_TemplateSelector;
                xamlMember.Setter = set_389_GlyphItemBase_TemplateSelector;
                break;
            case "DevExpress.UI.Xaml.Internal.GlyphItemBase.ClosePopupOnClick":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Internal.GlyphItemBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ClosePopupOnClick", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_390_GlyphItemBase_ClosePopupOnClick;
                xamlMember.Setter = set_390_GlyphItemBase_ClosePopupOnClick;
                break;
            case "DevExpress.UI.Xaml.Internal.PointerItemBase.ClickMode":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Internal.PointerItemBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ClickMode", "Windows.UI.Xaml.Controls.ClickMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_391_PointerItemBase_ClickMode;
                xamlMember.Setter = set_391_PointerItemBase_ClickMode;
                break;
            case "DevExpress.UI.Xaml.Internal.PointerItemBase.IsPointerOver":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Internal.PointerItemBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "IsPointerOver", "Boolean");
                xamlMember.Getter = get_392_PointerItemBase_IsPointerOver;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Internal.PointerItemBase.IsPressed":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Internal.PointerItemBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "IsPressed", "Boolean");
                xamlMember.Getter = get_393_PointerItemBase_IsPressed;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Internal.ContentControlEx.ActualSize":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Internal.ContentControlEx");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ActualSize", "Windows.Foundation.Size");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_394_ContentControlEx_ActualSize;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Internal.ContentControlEx.IsLoaded":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Internal.ContentControlEx");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "IsLoaded", "Boolean");
                xamlMember.Getter = get_395_ContentControlEx_IsLoaded;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Ribbon.BackstageView.Items":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.BackstageView");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "Items", "DevExpress.UI.Xaml.Ribbon.BackstageItemCollection");
                xamlMember.Getter = get_396_BackstageView_Items;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Ribbon.IBackstageItem.ClosePopupOnClick":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.IBackstageItem");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ClosePopupOnClick", "Boolean");
                xamlMember.Getter = get_397_IBackstageItem_ClosePopupOnClick;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Ribbon.BackstageView.ItemsSource":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.BackstageView");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ItemsSource", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_398_BackstageView_ItemsSource;
                xamlMember.Setter = set_398_BackstageView_ItemsSource;
                break;
            case "DevExpress.UI.Xaml.Ribbon.BackstageView.ItemTemplate":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.BackstageView");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ItemTemplate", "Windows.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_399_BackstageView_ItemTemplate;
                xamlMember.Setter = set_399_BackstageView_ItemTemplate;
                break;
            case "DevExpress.UI.Xaml.Ribbon.BackstageView.ItemTemplateSelector":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.BackstageView");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ItemTemplateSelector", "Windows.UI.Xaml.Controls.DataTemplateSelector");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_400_BackstageView_ItemTemplateSelector;
                xamlMember.Setter = set_400_BackstageView_ItemTemplateSelector;
                break;
            case "DevExpress.UI.Xaml.Ribbon.BackstageView.SelectedTab":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.BackstageView");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "SelectedTab", "DevExpress.UI.Xaml.Ribbon.IBackstageTabItem");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_401_BackstageView_SelectedTab;
                xamlMember.Setter = set_401_BackstageView_SelectedTab;
                break;
            case "DevExpress.UI.Xaml.Ribbon.BackstageView.IsOpen":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.BackstageView");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "IsOpen", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_402_BackstageView_IsOpen;
                xamlMember.Setter = set_402_BackstageView_IsOpen;
                break;
            case "DevExpress.UI.Xaml.Ribbon.BackstageView.SelectedTabOnShow":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.BackstageView");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "SelectedTabOnShow", "DevExpress.UI.Xaml.Ribbon.IBackstageTabItem");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_403_BackstageView_SelectedTabOnShow;
                xamlMember.Setter = set_403_BackstageView_SelectedTabOnShow;
                break;
            case "DevExpress.UI.Xaml.Ribbon.BackstageView.SelectedTabCaptionOnShow":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.BackstageView");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "SelectedTabCaptionOnShow", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_404_BackstageView_SelectedTabCaptionOnShow;
                xamlMember.Setter = set_404_BackstageView_SelectedTabCaptionOnShow;
                break;
            case "DevExpress.UI.Xaml.Ribbon.BackstageView.SelectedTabIndexOnShow":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.BackstageView");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "SelectedTabIndexOnShow", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_405_BackstageView_SelectedTabIndexOnShow;
                xamlMember.Setter = set_405_BackstageView_SelectedTabIndexOnShow;
                break;
            case "DevExpress.UI.Xaml.Ribbon.BackstageView.TitleSettings":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.BackstageView");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "TitleSettings", "DevExpress.UI.Xaml.TitleSettings");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_406_BackstageView_TitleSettings;
                xamlMember.Setter = set_406_BackstageView_TitleSettings;
                break;
            case "DevExpress.UI.Xaml.Ribbon.BackstageView.PlacementTarget":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.BackstageView");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "PlacementTarget", "Windows.UI.Xaml.UIElement");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_407_BackstageView_PlacementTarget;
                xamlMember.Setter = set_407_BackstageView_PlacementTarget;
                break;
            case "DevExpress.UI.Xaml.Ribbon.BackstageView.ActualPlacementTarget":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.BackstageView");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ActualPlacementTarget", "Windows.UI.Xaml.UIElement");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_408_BackstageView_ActualPlacementTarget;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Ribbon.BackstageView.StaysOpen":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.BackstageView");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "StaysOpen", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_409_BackstageView_StaysOpen;
                xamlMember.Setter = set_409_BackstageView_StaysOpen;
                break;
            case "DevExpress.UI.Xaml.Ribbon.BackstageView.CloseCommand":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.BackstageView");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "CloseCommand", "System.Windows.Input.ICommand");
                xamlMember.Getter = get_410_BackstageView_CloseCommand;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Ribbon.Internal.RibbonHeaderedContainerBase.Caption":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.Internal.RibbonHeaderedContainerBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "Caption", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_411_RibbonHeaderedContainerBase_Caption;
                xamlMember.Setter = set_411_RibbonHeaderedContainerBase_Caption;
                break;
            case "DevExpress.UI.Xaml.Ribbon.Internal.RibbonButtonItemBase.Command":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.Internal.RibbonButtonItemBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "Command", "System.Windows.Input.ICommand");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_412_RibbonButtonItemBase_Command;
                xamlMember.Setter = set_412_RibbonButtonItemBase_Command;
                break;
            case "DevExpress.UI.Xaml.Ribbon.Internal.RibbonButtonItemBase.CommandParameter":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.Internal.RibbonButtonItemBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "CommandParameter", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_413_RibbonButtonItemBase_CommandParameter;
                xamlMember.Setter = set_413_RibbonButtonItemBase_CommandParameter;
                break;
            case "DevExpress.UI.Xaml.Ribbon.HelpPane.Items":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.HelpPane");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "Items", "DevExpress.UI.Xaml.Ribbon.RibbonHelpPaneItemCollection");
                xamlMember.Getter = get_414_HelpPane_Items;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Ribbon.IRibbonHelpPaneItem.PlatformVisibility":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.IRibbonHelpPaneItem");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "PlatformVisibility", "DevExpress.Mvvm.Native.DeviceFamily");
                xamlMember.Getter = get_415_IRibbonHelpPaneItem_PlatformVisibility;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Ribbon.IRibbonHelpPaneItem.Placement":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.IRibbonHelpPaneItem");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "Placement", "DevExpress.UI.Xaml.Ribbon.HelpPaneItemPlacement");
                xamlMember.Getter = get_416_IRibbonHelpPaneItem_Placement;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Ribbon.HelpPane.ActualHeaderItems":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.HelpPane");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ActualHeaderItems", "DevExpress.UI.Xaml.Ribbon.RibbonHelpPaneItemCollection");
                xamlMember.Getter = get_417_HelpPane_ActualHeaderItems;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Ribbon.HelpPane.ActualFooterItems":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.HelpPane");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ActualFooterItems", "DevExpress.UI.Xaml.Ribbon.RibbonHelpPaneItemCollection");
                xamlMember.Getter = get_418_HelpPane_ActualFooterItems;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Ribbon.HelpPane.ItemsCore":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.HelpPane");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ItemsCore", "System.Collections.Generic.IEnumerable`1<DevExpress.UI.Xaml.Ribbon.IHelpPaneItem>");
                xamlMember.Getter = get_419_HelpPane_ItemsCore;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Ribbon.HelpPaneBase.ItemsSource":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.HelpPaneBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ItemsSource", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_420_HelpPaneBase_ItemsSource;
                xamlMember.Setter = set_420_HelpPaneBase_ItemsSource;
                break;
            case "DevExpress.UI.Xaml.Ribbon.HelpPaneBase.ItemTemplate":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.HelpPaneBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ItemTemplate", "Windows.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_421_HelpPaneBase_ItemTemplate;
                xamlMember.Setter = set_421_HelpPaneBase_ItemTemplate;
                break;
            case "DevExpress.UI.Xaml.Ribbon.HelpPaneBase.ItemTemplateSelector":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.HelpPaneBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ItemTemplateSelector", "Windows.UI.Xaml.Controls.DataTemplateSelector");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_422_HelpPaneBase_ItemTemplateSelector;
                xamlMember.Setter = set_422_HelpPaneBase_ItemTemplateSelector;
                break;
            case "DevExpress.UI.Xaml.Ribbon.ToolbarHelpPane.Items":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.ToolbarHelpPane");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "Items", "DevExpress.UI.Xaml.Ribbon.ToolbarHelpPaneItemCollection");
                xamlMember.Getter = get_423_ToolbarHelpPane_Items;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Ribbon.ToolbarHelpPane.ItemsCore":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.ToolbarHelpPane");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ItemsCore", "System.Collections.Generic.IEnumerable`1<DevExpress.UI.Xaml.Ribbon.IHelpPaneItem>");
                xamlMember.Getter = get_424_ToolbarHelpPane_ItemsCore;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Ribbon.RibbonControl.Tabs":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.RibbonControl");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "Tabs", "DevExpress.UI.Xaml.Ribbon.RibbonTabCollection");
                xamlMember.Getter = get_425_RibbonControl_Tabs;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Ribbon.RibbonTab.Groups":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.RibbonTab");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "Groups", "DevExpress.UI.Xaml.Ribbon.RibbonGroupCollection");
                xamlMember.Getter = get_426_RibbonTab_Groups;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Ribbon.RibbonGroup.Items":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.RibbonGroup");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "Items", "DevExpress.UI.Xaml.Ribbon.RibbonItemCollection");
                xamlMember.Getter = get_427_RibbonGroup_Items;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Ribbon.Internal.RibbonGroupPanelBase.ItemsSource":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.Internal.RibbonGroupPanelBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ItemsSource", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_428_RibbonGroupPanelBase_ItemsSource;
                xamlMember.Setter = set_428_RibbonGroupPanelBase_ItemsSource;
                break;
            case "DevExpress.UI.Xaml.Ribbon.Internal.RibbonGroupPanelBase.ItemTemplate":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.Internal.RibbonGroupPanelBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ItemTemplate", "Windows.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_429_RibbonGroupPanelBase_ItemTemplate;
                xamlMember.Setter = set_429_RibbonGroupPanelBase_ItemTemplate;
                break;
            case "DevExpress.UI.Xaml.Ribbon.Internal.RibbonGroupPanelBase.ItemTemplateSelector":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.Internal.RibbonGroupPanelBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ItemTemplateSelector", "Windows.UI.Xaml.Controls.DataTemplateSelector");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_430_RibbonGroupPanelBase_ItemTemplateSelector;
                xamlMember.Setter = set_430_RibbonGroupPanelBase_ItemTemplateSelector;
                break;
            case "DevExpress.UI.Xaml.Ribbon.Internal.RibbonGroupPanelBase.Icon":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.Internal.RibbonGroupPanelBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "Icon", "Windows.UI.Xaml.Controls.IconElement");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_431_RibbonGroupPanelBase_Icon;
                xamlMember.Setter = set_431_RibbonGroupPanelBase_Icon;
                break;
            case "DevExpress.UI.Xaml.Ribbon.Internal.RibbonGroupPanelBase.IconSource":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.Internal.RibbonGroupPanelBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "IconSource", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_432_RibbonGroupPanelBase_IconSource;
                xamlMember.Setter = set_432_RibbonGroupPanelBase_IconSource;
                break;
            case "DevExpress.UI.Xaml.Ribbon.Internal.RibbonGroupPanelBase.IconTemplate":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.Internal.RibbonGroupPanelBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "IconTemplate", "Windows.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_433_RibbonGroupPanelBase_IconTemplate;
                xamlMember.Setter = set_433_RibbonGroupPanelBase_IconTemplate;
                break;
            case "DevExpress.UI.Xaml.Ribbon.Internal.RibbonGroupPanelBase.IconWidth":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.Internal.RibbonGroupPanelBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "IconWidth", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_434_RibbonGroupPanelBase_IconWidth;
                xamlMember.Setter = set_434_RibbonGroupPanelBase_IconWidth;
                break;
            case "DevExpress.UI.Xaml.Ribbon.Internal.RibbonGroupPanelBase.IconHeight":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.Internal.RibbonGroupPanelBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "IconHeight", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_435_RibbonGroupPanelBase_IconHeight;
                xamlMember.Setter = set_435_RibbonGroupPanelBase_IconHeight;
                break;
            case "DevExpress.UI.Xaml.Ribbon.Internal.RibbonGroupPanelBase.IconStretch":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.Internal.RibbonGroupPanelBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "IconStretch", "Windows.UI.Xaml.Media.Stretch");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_436_RibbonGroupPanelBase_IconStretch;
                xamlMember.Setter = set_436_RibbonGroupPanelBase_IconStretch;
                break;
            case "DevExpress.UI.Xaml.Ribbon.Internal.RibbonGroupPanelBase.IconFill":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.Internal.RibbonGroupPanelBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "IconFill", "Windows.UI.Xaml.Media.SolidColorBrush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_437_RibbonGroupPanelBase_IconFill;
                xamlMember.Setter = set_437_RibbonGroupPanelBase_IconFill;
                break;
            case "DevExpress.UI.Xaml.Ribbon.Internal.RibbonGroupPanelBase.FlyoutColumnCount":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.Internal.RibbonGroupPanelBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "FlyoutColumnCount", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_438_RibbonGroupPanelBase_FlyoutColumnCount;
                xamlMember.Setter = set_438_RibbonGroupPanelBase_FlyoutColumnCount;
                break;
            case "DevExpress.UI.Xaml.Ribbon.Internal.RibbonGroupPanelBase.IconSizeUnit":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.Internal.RibbonGroupPanelBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "IconSizeUnit", "DevExpress.UI.Xaml.IconSizeUnit");
                xamlMember.Getter = get_439_RibbonGroupPanelBase_IconSizeUnit;
                xamlMember.Setter = set_439_RibbonGroupPanelBase_IconSizeUnit;
                break;
            case "DevExpress.UI.Xaml.Ribbon.Internal.IndependentGroupPanelBase.Caption":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.Internal.IndependentGroupPanelBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "Caption", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_440_IndependentGroupPanelBase_Caption;
                xamlMember.Setter = set_440_IndependentGroupPanelBase_Caption;
                break;
            case "DevExpress.UI.Xaml.Ribbon.Internal.IndependentGroupPanelBase.DropDownControl":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.Internal.IndependentGroupPanelBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "DropDownControl", "Windows.UI.Xaml.UIElement");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_441_IndependentGroupPanelBase_DropDownControl;
                xamlMember.Setter = set_441_IndependentGroupPanelBase_DropDownControl;
                break;
            case "DevExpress.UI.Xaml.Ribbon.Internal.IndependentGroupPanelBase.FlyoutItems":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.Internal.IndependentGroupPanelBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "FlyoutItems", "DevExpress.UI.Xaml.Ribbon.RibbonItemBaseCollection");
                xamlMember.Getter = get_442_IndependentGroupPanelBase_FlyoutItems;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Ribbon.IRibbonItemBase.ItemStyle":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.IRibbonItemBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ItemStyle", "DevExpress.UI.Xaml.Ribbon.RibbonItemStyle");
                xamlMember.Getter = get_443_IRibbonItemBase_ItemStyle;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Ribbon.IRibbonItemBase.CollapsePriority":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.IRibbonItemBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "CollapsePriority", "DevExpress.UI.Xaml.Ribbon.CollapsePriority");
                xamlMember.Getter = get_444_IRibbonItemBase_CollapsePriority;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Ribbon.IRibbonItemBase.ShrinkPriority":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.IRibbonItemBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ShrinkPriority", "DevExpress.UI.Xaml.Ribbon.CollapsePriority");
                xamlMember.Getter = get_445_IRibbonItemBase_ShrinkPriority;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Ribbon.IRibbonItemBase.CollapsedGroupName":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.IRibbonItemBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "CollapsedGroupName", "String");
                xamlMember.Getter = get_446_IRibbonItemBase_CollapsedGroupName;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Ribbon.IRibbonItemBase.ShowInFlyoutOnly":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.IRibbonItemBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ShowInFlyoutOnly", "Boolean");
                xamlMember.Getter = get_447_IRibbonItemBase_ShowInFlyoutOnly;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Ribbon.IRibbonItemBase.HasContent":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.IRibbonItemBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "HasContent", "Boolean");
                xamlMember.Getter = get_448_IRibbonItemBase_HasContent;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Ribbon.Internal.IndependentGroupPanelBase.FlyoutCalculator":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.Internal.IndependentGroupPanelBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "FlyoutCalculator", "DevExpress.UI.Xaml.Ribbon.Internal.IFlyoutCalculator");
                xamlMember.Getter = get_449_IndependentGroupPanelBase_FlyoutCalculator;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Ribbon.RibbonTabBase.GroupsSource":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.RibbonTabBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "GroupsSource", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_450_RibbonTabBase_GroupsSource;
                xamlMember.Setter = set_450_RibbonTabBase_GroupsSource;
                break;
            case "DevExpress.UI.Xaml.Ribbon.RibbonTabBase.GroupTemplate":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.RibbonTabBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "GroupTemplate", "Windows.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_451_RibbonTabBase_GroupTemplate;
                xamlMember.Setter = set_451_RibbonTabBase_GroupTemplate;
                break;
            case "DevExpress.UI.Xaml.Ribbon.RibbonTabBase.GroupTemplateSelector":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.RibbonTabBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "GroupTemplateSelector", "Windows.UI.Xaml.Controls.DataTemplateSelector");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_452_RibbonTabBase_GroupTemplateSelector;
                xamlMember.Setter = set_452_RibbonTabBase_GroupTemplateSelector;
                break;
            case "DevExpress.UI.Xaml.Ribbon.RibbonTabBase.IsSelected":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.RibbonTabBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "IsSelected", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_453_RibbonTabBase_IsSelected;
                xamlMember.Setter = set_453_RibbonTabBase_IsSelected;
                break;
            case "DevExpress.UI.Xaml.Ribbon.RibbonControl.BackstageView":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.RibbonControl");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "BackstageView", "DevExpress.UI.Xaml.Ribbon.BackstageView");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_454_RibbonControl_BackstageView;
                xamlMember.Setter = set_454_RibbonControl_BackstageView;
                break;
            case "DevExpress.UI.Xaml.Ribbon.RibbonControl.CanMinimize":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.RibbonControl");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "CanMinimize", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_455_RibbonControl_CanMinimize;
                xamlMember.Setter = set_455_RibbonControl_CanMinimize;
                break;
            case "DevExpress.UI.Xaml.Ribbon.RibbonControl.HelpPane":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.RibbonControl");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "HelpPane", "DevExpress.UI.Xaml.Ribbon.HelpPane");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_456_RibbonControl_HelpPane;
                xamlMember.Setter = set_456_RibbonControl_HelpPane;
                break;
            case "DevExpress.UI.Xaml.Ribbon.RibbonControl.Title":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.RibbonControl");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "Title", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_457_RibbonControl_Title;
                xamlMember.Setter = set_457_RibbonControl_Title;
                break;
            case "DevExpress.UI.Xaml.Ribbon.RibbonControl.IsTitleEditable":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.RibbonControl");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "IsTitleEditable", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_458_RibbonControl_IsTitleEditable;
                xamlMember.Setter = set_458_RibbonControl_IsTitleEditable;
                break;
            case "DevExpress.UI.Xaml.Ribbon.RibbonControl.TitleSettings":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.RibbonControl");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "TitleSettings", "DevExpress.UI.Xaml.TitleSettings");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_459_RibbonControl_TitleSettings;
                xamlMember.Setter = set_459_RibbonControl_TitleSettings;
                break;
            case "DevExpress.UI.Xaml.Ribbon.RibbonControl.EmbedRibbonInWindowTitle":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.RibbonControl");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "EmbedRibbonInWindowTitle", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_460_RibbonControl_EmbedRibbonInWindowTitle;
                xamlMember.Setter = set_460_RibbonControl_EmbedRibbonInWindowTitle;
                break;
            case "DevExpress.UI.Xaml.Ribbon.RibbonControl.SelectedTab":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.RibbonControl");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "SelectedTab", "DevExpress.UI.Xaml.Ribbon.RibbonTab");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_461_RibbonControl_SelectedTab;
                xamlMember.Setter = set_461_RibbonControl_SelectedTab;
                break;
            case "DevExpress.UI.Xaml.Ribbon.RibbonControl.ShowTitleBar":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.RibbonControl");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ShowTitleBar", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_462_RibbonControl_ShowTitleBar;
                xamlMember.Setter = set_462_RibbonControl_ShowTitleBar;
                break;
            case "DevExpress.UI.Xaml.Ribbon.RibbonControl.IsNestedWindowTitleCustomizer":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.RibbonControl");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "IsNestedWindowTitleCustomizer", "Boolean");
                xamlMember.Getter = get_463_RibbonControl_IsNestedWindowTitleCustomizer;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Ribbon.RibbonControlBase.TabsSource":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.RibbonControlBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "TabsSource", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_464_RibbonControlBase_TabsSource;
                xamlMember.Setter = set_464_RibbonControlBase_TabsSource;
                break;
            case "DevExpress.UI.Xaml.Ribbon.RibbonControlBase.TabTemplate":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.RibbonControlBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "TabTemplate", "Windows.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_465_RibbonControlBase_TabTemplate;
                xamlMember.Setter = set_465_RibbonControlBase_TabTemplate;
                break;
            case "DevExpress.UI.Xaml.Ribbon.RibbonControlBase.TabTemplateSelector":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.RibbonControlBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "TabTemplateSelector", "Windows.UI.Xaml.Controls.DataTemplateSelector");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_466_RibbonControlBase_TabTemplateSelector;
                xamlMember.Setter = set_466_RibbonControlBase_TabTemplateSelector;
                break;
            case "DevExpress.UI.Xaml.Ribbon.RibbonControlBase.SelectedTabCaption":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.RibbonControlBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "SelectedTabCaption", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_467_RibbonControlBase_SelectedTabCaption;
                xamlMember.Setter = set_467_RibbonControlBase_SelectedTabCaption;
                break;
            case "DevExpress.UI.Xaml.Ribbon.RibbonControlBase.ViewMode":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.RibbonControlBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ViewMode", "DevExpress.UI.Xaml.Ribbon.RibbonViewMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_468_RibbonControlBase_ViewMode;
                xamlMember.Setter = set_468_RibbonControlBase_ViewMode;
                break;
            case "DevExpress.UI.Xaml.Ribbon.RibbonControlBase.State":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.RibbonControlBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "State", "DevExpress.UI.Xaml.Ribbon.RibbonState");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_469_RibbonControlBase_State;
                xamlMember.Setter = set_469_RibbonControlBase_State;
                break;
            case "DevExpress.UI.Xaml.Ribbon.RibbonControlBase.HeaderItemTemplate":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.RibbonControlBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "HeaderItemTemplate", "Windows.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_470_RibbonControlBase_HeaderItemTemplate;
                xamlMember.Setter = set_470_RibbonControlBase_HeaderItemTemplate;
                break;
            case "DevExpress.UI.Xaml.Ribbon.RibbonControlBase.HeaderItemContainerStyle":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.RibbonControlBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "HeaderItemContainerStyle", "Windows.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_471_RibbonControlBase_HeaderItemContainerStyle;
                xamlMember.Setter = set_471_RibbonControlBase_HeaderItemContainerStyle;
                break;
            case "DevExpress.UI.Xaml.Ribbon.RibbonControlBase.ContextualHeaderItemTemplate":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.RibbonControlBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ContextualHeaderItemTemplate", "Windows.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_472_RibbonControlBase_ContextualHeaderItemTemplate;
                xamlMember.Setter = set_472_RibbonControlBase_ContextualHeaderItemTemplate;
                break;
            case "DevExpress.UI.Xaml.Ribbon.RibbonControlBase.ContextualHeaderItemContainerStyle":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.RibbonControlBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ContextualHeaderItemContainerStyle", "Windows.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_473_RibbonControlBase_ContextualHeaderItemContainerStyle;
                xamlMember.Setter = set_473_RibbonControlBase_ContextualHeaderItemContainerStyle;
                break;
            case "DevExpress.UI.Xaml.Ribbon.RibbonControlBase.ChangeRibbonStateCommand":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.RibbonControlBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ChangeRibbonStateCommand", "System.Windows.Input.ICommand");
                xamlMember.Getter = get_474_RibbonControlBase_ChangeRibbonStateCommand;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Ribbon.RibbonControlBase.ChangeRibbonViewModeCommand":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.RibbonControlBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ChangeRibbonViewModeCommand", "System.Windows.Input.ICommand");
                xamlMember.Getter = get_475_RibbonControlBase_ChangeRibbonViewModeCommand;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Ribbon.RibbonColorEditBase.ColorGroups":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.RibbonColorEditBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ColorGroups", "DevExpress.UI.Xaml.Editors.ColorGroupsList");
                xamlMember.Getter = get_476_RibbonColorEditBase_ColorGroups;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Ribbon.RibbonColorEditBase.SelectedBrush":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.RibbonColorEditBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "SelectedBrush", "Windows.UI.Xaml.Media.SolidColorBrush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_477_RibbonColorEditBase_SelectedBrush;
                xamlMember.Setter = set_477_RibbonColorEditBase_SelectedBrush;
                break;
            case "DevExpress.UI.Xaml.Ribbon.RibbonColorEditBase.SelectedColor":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.RibbonColorEditBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "SelectedColor", "Windows.UI.Color");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_478_RibbonColorEditBase_SelectedColor;
                xamlMember.Setter = set_478_RibbonColorEditBase_SelectedColor;
                break;
            case "DevExpress.UI.Xaml.Ribbon.RibbonColorEditBase.DefaultColor":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.RibbonColorEditBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "DefaultColor", "Windows.UI.Color");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_479_RibbonColorEditBase_DefaultColor;
                xamlMember.Setter = set_479_RibbonColorEditBase_DefaultColor;
                break;
            case "DevExpress.UI.Xaml.Ribbon.RibbonColorEditBase.Caption":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.RibbonColorEditBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "Caption", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_480_RibbonColorEditBase_Caption;
                xamlMember.Setter = set_480_RibbonColorEditBase_Caption;
                break;
            case "DevExpress.UI.Xaml.Ribbon.RibbonColorEditBase.ShowIndicator":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.RibbonColorEditBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ShowIndicator", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_481_RibbonColorEditBase_ShowIndicator;
                xamlMember.Setter = set_481_RibbonColorEditBase_ShowIndicator;
                break;
            case "DevExpress.UI.Xaml.Ribbon.RibbonSplitItemBase.Command":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.RibbonSplitItemBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "Command", "System.Windows.Input.ICommand");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_482_RibbonSplitItemBase_Command;
                xamlMember.Setter = set_482_RibbonSplitItemBase_Command;
                break;
            case "DevExpress.UI.Xaml.Ribbon.RibbonSplitItemBase.CommandParameter":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.RibbonSplitItemBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "CommandParameter", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_483_RibbonSplitItemBase_CommandParameter;
                xamlMember.Setter = set_483_RibbonSplitItemBase_CommandParameter;
                break;
            case "DevExpress.UI.Xaml.Ribbon.Internal.RibbonMenuItemBase.FlyoutCaption":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.Internal.RibbonMenuItemBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "FlyoutCaption", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_484_RibbonMenuItemBase_FlyoutCaption;
                xamlMember.Setter = set_484_RibbonMenuItemBase_FlyoutCaption;
                break;
            case "DevExpress.UI.Xaml.Ribbon.Internal.RibbonMenuItemBase.IsOpen":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.Internal.RibbonMenuItemBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "IsOpen", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_485_RibbonMenuItemBase_IsOpen;
                xamlMember.Setter = set_485_RibbonMenuItemBase_IsOpen;
                break;
            case "DevExpress.UI.Xaml.Ribbon.Internal.RibbonMenuItemBase.FlyoutSettings":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.Internal.RibbonMenuItemBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "FlyoutSettings", "DevExpress.UI.Xaml.FlyoutSettingsBase");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_486_RibbonMenuItemBase_FlyoutSettings;
                xamlMember.Setter = set_486_RibbonMenuItemBase_FlyoutSettings;
                break;
            case "DevExpress.UI.Xaml.Ribbon.RibbonFontEditBase.ShrinkPriority":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.RibbonFontEditBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ShrinkPriority", "DevExpress.UI.Xaml.Ribbon.CollapsePriority");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_487_RibbonFontEditBase_ShrinkPriority;
                xamlMember.Setter = set_487_RibbonFontEditBase_ShrinkPriority;
                break;
            case "DevExpress.UI.Xaml.Ribbon.RibbonFontEditBase.CollapsePriority":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.RibbonFontEditBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "CollapsePriority", "DevExpress.UI.Xaml.Ribbon.CollapsePriority");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_488_RibbonFontEditBase_CollapsePriority;
                xamlMember.Setter = set_488_RibbonFontEditBase_CollapsePriority;
                break;
            case "DevExpress.UI.Xaml.Ribbon.RibbonFontEditBase.CollapsedGroupName":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.RibbonFontEditBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "CollapsedGroupName", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_489_RibbonFontEditBase_CollapsedGroupName;
                xamlMember.Setter = set_489_RibbonFontEditBase_CollapsedGroupName;
                break;
            case "DevExpress.UI.Xaml.Ribbon.RibbonFontEditBase.ShowInFlyoutOnly":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.RibbonFontEditBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ShowInFlyoutOnly", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_490_RibbonFontEditBase_ShowInFlyoutOnly;
                xamlMember.Setter = set_490_RibbonFontEditBase_ShowInFlyoutOnly;
                break;
            case "DevExpress.UI.Xaml.Ribbon.RibbonFontEditBase.FlyoutFlowBreak":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.RibbonFontEditBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "FlyoutFlowBreak", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_491_RibbonFontEditBase_FlyoutFlowBreak;
                xamlMember.Setter = set_491_RibbonFontEditBase_FlyoutFlowBreak;
                break;
            case "DevExpress.UI.Xaml.Ribbon.RibbonFontEditBase.FlyoutFlowBreakWithSeparator":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.RibbonFontEditBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "FlyoutFlowBreakWithSeparator", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_492_RibbonFontEditBase_FlyoutFlowBreakWithSeparator;
                xamlMember.Setter = set_492_RibbonFontEditBase_FlyoutFlowBreakWithSeparator;
                break;
            case "DevExpress.UI.Xaml.Ribbon.RibbonFontEditBase.FlyoutSameRow":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.RibbonFontEditBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "FlyoutSameRow", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_493_RibbonFontEditBase_FlyoutSameRow;
                xamlMember.Setter = set_493_RibbonFontEditBase_FlyoutSameRow;
                break;
            case "DevExpress.UI.Xaml.Editors.FontEdit.ActualSelectedFontSize":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Editors.FontEdit");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ActualSelectedFontSize", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_494_FontEdit_ActualSelectedFontSize;
                xamlMember.Setter = set_494_FontEdit_ActualSelectedFontSize;
                break;
            case "DevExpress.UI.Xaml.Editors.FontEdit.ActualSelectedFontFamily":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Editors.FontEdit");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ActualSelectedFontFamily", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_495_FontEdit_ActualSelectedFontFamily;
                xamlMember.Setter = set_495_FontEdit_ActualSelectedFontFamily;
                break;
            case "DevExpress.UI.Xaml.Editors.FontEdit.SelectedFontSize":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Editors.FontEdit");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "SelectedFontSize", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_496_FontEdit_SelectedFontSize;
                xamlMember.Setter = set_496_FontEdit_SelectedFontSize;
                break;
            case "DevExpress.UI.Xaml.Editors.FontEdit.FontSizesSource":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Editors.FontEdit");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "FontSizesSource", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_497_FontEdit_FontSizesSource;
                xamlMember.Setter = set_497_FontEdit_FontSizesSource;
                break;
            case "DevExpress.UI.Xaml.Editors.FontEdit.FontFamilyItemTemplate":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Editors.FontEdit");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "FontFamilyItemTemplate", "Windows.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_498_FontEdit_FontFamilyItemTemplate;
                xamlMember.Setter = set_498_FontEdit_FontFamilyItemTemplate;
                break;
            case "DevExpress.UI.Xaml.Editors.FontEdit.SelectedFontFamilyName":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Editors.FontEdit");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "SelectedFontFamilyName", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_499_FontEdit_SelectedFontFamilyName;
                xamlMember.Setter = set_499_FontEdit_SelectedFontFamilyName;
                break;
            case "DevExpress.UI.Xaml.Editors.FontEdit.FontsSource":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Editors.FontEdit");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "FontsSource", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_500_FontEdit_FontsSource;
                xamlMember.Setter = set_500_FontEdit_FontsSource;
                break;
            case "DevExpress.UI.Xaml.Editors.FontEdit.SelectedFontFamily":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Editors.FontEdit");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "SelectedFontFamily", "Windows.UI.Xaml.Media.FontFamily");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_501_FontEdit_SelectedFontFamily;
                xamlMember.Setter = set_501_FontEdit_SelectedFontFamily;
                break;
            case "DevExpress.UI.Xaml.Editors.FontEdit.IsFontFamilyDropDownOpen":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Editors.FontEdit");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "IsFontFamilyDropDownOpen", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_502_FontEdit_IsFontFamilyDropDownOpen;
                xamlMember.Setter = set_502_FontEdit_IsFontFamilyDropDownOpen;
                break;
            case "DevExpress.UI.Xaml.Editors.FontEdit.IsFontSizeDropDownOpen":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Editors.FontEdit");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "IsFontSizeDropDownOpen", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_503_FontEdit_IsFontSizeDropDownOpen;
                xamlMember.Setter = set_503_FontEdit_IsFontSizeDropDownOpen;
                break;
            case "DevExpress.UI.Xaml.Editors.FontEdit.AvailableFonts":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Editors.FontEdit");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "AvailableFonts", "Windows.UI.Xaml.Data.ICollectionView");
                xamlMember.Getter = get_504_FontEdit_AvailableFonts;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Editors.FontEdit.AvailableFontSizes":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Editors.FontEdit");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "AvailableFontSizes", "System.Collections.Generic.IEnumerable`1<Double>");
                xamlMember.Getter = get_505_FontEdit_AvailableFontSizes;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Ribbon.RibbonMenuButton.Items":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.RibbonMenuButton");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "Items", "DevExpress.UI.Xaml.Ribbon.RibbonItemCollection");
                xamlMember.Getter = get_506_RibbonMenuButton_Items;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Ribbon.Internal.RibbonMenuButtonBase`1<DevExpress.UI.Xaml.Ribbon.IRibbonItem>.ItemsSource":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.Internal.RibbonMenuButtonBase`1<DevExpress.UI.Xaml.Ribbon.IRibbonItem>");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ItemsSource", "System.Collections.Generic.IEnumerable`1<DevExpress.UI.Xaml.Ribbon.IRibbonItem>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_507_RibbonMenuButtonBase_ItemsSource;
                xamlMember.Setter = set_507_RibbonMenuButtonBase_ItemsSource;
                break;
            case "DevExpress.UI.Xaml.Ribbon.Internal.RibbonMenuButtonBase.ItemTemplate":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.Internal.RibbonMenuButtonBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ItemTemplate", "Windows.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_508_RibbonMenuButtonBase_ItemTemplate;
                xamlMember.Setter = set_508_RibbonMenuButtonBase_ItemTemplate;
                break;
            case "DevExpress.UI.Xaml.Ribbon.Internal.RibbonMenuButtonBase.ItemTemplateSelector":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.Internal.RibbonMenuButtonBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ItemTemplateSelector", "Windows.UI.Xaml.Controls.DataTemplateSelector");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_509_RibbonMenuButtonBase_ItemTemplateSelector;
                xamlMember.Setter = set_509_RibbonMenuButtonBase_ItemTemplateSelector;
                break;
            case "DevExpress.UI.Xaml.Ribbon.Internal.RibbonMenuButtonBase.FlyoutColumnCount":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.Internal.RibbonMenuButtonBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "FlyoutColumnCount", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_510_RibbonMenuButtonBase_FlyoutColumnCount;
                xamlMember.Setter = set_510_RibbonMenuButtonBase_FlyoutColumnCount;
                break;
            case "DevExpress.UI.Xaml.Ribbon.ToolbarMenuButton.Items":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.ToolbarMenuButton");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "Items", "DevExpress.UI.Xaml.Ribbon.ToolbarItemCollection");
                xamlMember.Getter = get_511_ToolbarMenuButton_Items;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Ribbon.Internal.RibbonMenuButtonBase`1<DevExpress.UI.Xaml.Ribbon.IToolbarItem>.ItemsSource":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.Internal.RibbonMenuButtonBase`1<DevExpress.UI.Xaml.Ribbon.IToolbarItem>");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ItemsSource", "System.Collections.Generic.IEnumerable`1<DevExpress.UI.Xaml.Ribbon.IToolbarItem>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_512_RibbonMenuButtonBase_ItemsSource;
                xamlMember.Setter = set_512_RibbonMenuButtonBase_ItemsSource;
                break;
            case "DevExpress.UI.Xaml.Ribbon.ContextToolbarMenuButton.Items":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.ContextToolbarMenuButton");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "Items", "DevExpress.UI.Xaml.Ribbon.ContextToolbarItemCollection");
                xamlMember.Getter = get_513_ContextToolbarMenuButton_Items;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Ribbon.ContextToolbarMenuButton.Orientation":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.ContextToolbarMenuButton");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "Orientation", "Windows.UI.Xaml.Controls.Orientation");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_514_ContextToolbarMenuButton_Orientation;
                xamlMember.Setter = set_514_ContextToolbarMenuButton_Orientation;
                break;
            case "DevExpress.UI.Xaml.Ribbon.Internal.RibbonMenuButtonBase`1<DevExpress.UI.Xaml.Ribbon.IContextToolbarItem>.ItemsSource":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.Internal.RibbonMenuButtonBase`1<DevExpress.UI.Xaml.Ribbon.IContextToolbarItem>");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ItemsSource", "System.Collections.Generic.IEnumerable`1<DevExpress.UI.Xaml.Ribbon.IContextToolbarItem>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_515_RibbonMenuButtonBase_ItemsSource;
                xamlMember.Setter = set_515_RibbonMenuButtonBase_ItemsSource;
                break;
            case "DevExpress.UI.Xaml.Ribbon.RibbonToolbarMenuButton.Items":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.RibbonToolbarMenuButton");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "Items", "DevExpress.UI.Xaml.Ribbon.RibbonToolbarItemCollection");
                xamlMember.Getter = get_516_RibbonToolbarMenuButton_Items;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Ribbon.Internal.RibbonMenuButtonBase`1<DevExpress.UI.Xaml.Ribbon.IRibbonToolbarItem>.ItemsSource":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.Internal.RibbonMenuButtonBase`1<DevExpress.UI.Xaml.Ribbon.IRibbonToolbarItem>");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ItemsSource", "System.Collections.Generic.IEnumerable`1<DevExpress.UI.Xaml.Ribbon.IRibbonToolbarItem>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_517_RibbonMenuButtonBase_ItemsSource;
                xamlMember.Setter = set_517_RibbonMenuButtonBase_ItemsSource;
                break;
            case "DevExpress.UI.Xaml.Ribbon.RibbonToolbarControl.Tabs":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.RibbonToolbarControl");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "Tabs", "DevExpress.UI.Xaml.Ribbon.RibbonToolbarTabCollection");
                xamlMember.Getter = get_518_RibbonToolbarControl_Tabs;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Ribbon.RibbonToolbarTab.Groups":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.RibbonToolbarTab");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "Groups", "DevExpress.UI.Xaml.Ribbon.RibbonToolbarGroupCollection");
                xamlMember.Getter = get_519_RibbonToolbarTab_Groups;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Ribbon.RibbonToolbarGroup.Items":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.RibbonToolbarGroup");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "Items", "DevExpress.UI.Xaml.Ribbon.RibbonToolbarItemCollection");
                xamlMember.Getter = get_520_RibbonToolbarGroup_Items;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Ribbon.RibbonToolbarControl.HelpPane":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.RibbonToolbarControl");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "HelpPane", "DevExpress.UI.Xaml.Ribbon.ToolbarHelpPane");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_521_RibbonToolbarControl_HelpPane;
                xamlMember.Setter = set_521_RibbonToolbarControl_HelpPane;
                break;
            case "DevExpress.UI.Xaml.Ribbon.RibbonToolbarControl.HotItemsColumnsCount":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.RibbonToolbarControl");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "HotItemsColumnsCount", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_522_RibbonToolbarControl_HotItemsColumnsCount;
                xamlMember.Setter = set_522_RibbonToolbarControl_HotItemsColumnsCount;
                break;
            case "DevExpress.UI.Xaml.Ribbon.RibbonToolbarControl.SelectedTab":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.RibbonToolbarControl");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "SelectedTab", "DevExpress.UI.Xaml.Ribbon.RibbonToolbarTab");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_523_RibbonToolbarControl_SelectedTab;
                xamlMember.Setter = set_523_RibbonToolbarControl_SelectedTab;
                break;
            case "DevExpress.UI.Xaml.Ribbon.RibbonToolbarControl.HotItems":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.RibbonToolbarControl");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "HotItems", "DevExpress.UI.Xaml.Ribbon.RibbonToolbarItemCollection");
                xamlMember.Getter = get_524_RibbonToolbarControl_HotItems;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Ribbon.ToolbarControl.Groups":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.ToolbarControl");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "Groups", "DevExpress.UI.Xaml.Ribbon.ToolbarGroupCollection");
                xamlMember.Getter = get_525_ToolbarControl_Groups;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Ribbon.ToolbarGroup.Items":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.ToolbarGroup");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "Items", "DevExpress.UI.Xaml.Ribbon.ToolbarItemCollection");
                xamlMember.Getter = get_526_ToolbarGroup_Items;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Ribbon.ToolbarControl.GroupTemplateSelector":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.ToolbarControl");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "GroupTemplateSelector", "Windows.UI.Xaml.Controls.DataTemplateSelector");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_527_ToolbarControl_GroupTemplateSelector;
                xamlMember.Setter = set_527_ToolbarControl_GroupTemplateSelector;
                break;
            case "DevExpress.UI.Xaml.Ribbon.ToolbarControl.GroupTemplate":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.ToolbarControl");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "GroupTemplate", "Windows.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_528_ToolbarControl_GroupTemplate;
                xamlMember.Setter = set_528_ToolbarControl_GroupTemplate;
                break;
            case "DevExpress.UI.Xaml.Ribbon.ToolbarControl.GroupsSource":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.ToolbarControl");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "GroupsSource", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_529_ToolbarControl_GroupsSource;
                xamlMember.Setter = set_529_ToolbarControl_GroupsSource;
                break;
            case "DevExpress.UI.Xaml.Ribbon.ToolbarControl.Orientation":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.ToolbarControl");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "Orientation", "Windows.UI.Xaml.Controls.Orientation");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_530_ToolbarControl_Orientation;
                xamlMember.Setter = set_530_ToolbarControl_Orientation;
                break;
            case "DevExpress.UI.Xaml.Ribbon.ToolbarControl.Placeholder":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.ToolbarControl");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "Placeholder", "Windows.UI.Xaml.UIElement");
                xamlMember.Getter = get_531_ToolbarControl_Placeholder;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Ribbon.Internal.FlyoutCalculatorBase.VisibleItems":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.Internal.FlyoutCalculatorBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "VisibleItems", "System.Collections.Generic.IEnumerable`1<DevExpress.UI.Xaml.Ribbon.IRibbonItemBase>");
                xamlMember.Getter = get_532_FlyoutCalculatorBase_VisibleItems;
                xamlMember.Setter = set_532_FlyoutCalculatorBase_VisibleItems;
                break;
            case "DevExpress.UI.Xaml.Ribbon.Internal.FlyoutCalculatorBase.ColumnCount":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.Internal.FlyoutCalculatorBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ColumnCount", "Int32");
                xamlMember.Getter = get_533_FlyoutCalculatorBase_ColumnCount;
                xamlMember.Setter = set_533_FlyoutCalculatorBase_ColumnCount;
                break;
            case "DevExpress.UI.Xaml.Ribbon.Internal.FlyoutCalculatorBase.SeparatorManager":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.Internal.FlyoutCalculatorBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "SeparatorManager", "DevExpress.UI.Xaml.Ribbon.Internal.ISeparatorManager");
                xamlMember.Getter = get_534_FlyoutCalculatorBase_SeparatorManager;
                xamlMember.Setter = set_534_FlyoutCalculatorBase_SeparatorManager;
                break;
            case "DevExpress.UI.Xaml.Ribbon.Internal.RibbonTabsControl.ItemsSource":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.Internal.RibbonTabsControl");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ItemsSource", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_535_RibbonTabsControl_ItemsSource;
                xamlMember.Setter = set_535_RibbonTabsControl_ItemsSource;
                break;
            case "DevExpress.UI.Xaml.Ribbon.Internal.RibbonTabsControl.HeaderItemTemplate":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.Internal.RibbonTabsControl");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "HeaderItemTemplate", "Windows.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_536_RibbonTabsControl_HeaderItemTemplate;
                xamlMember.Setter = set_536_RibbonTabsControl_HeaderItemTemplate;
                break;
            case "DevExpress.UI.Xaml.Ribbon.Internal.RibbonTabsControl.HeaderItemContainerStyle":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.Internal.RibbonTabsControl");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "HeaderItemContainerStyle", "Windows.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_537_RibbonTabsControl_HeaderItemContainerStyle;
                xamlMember.Setter = set_537_RibbonTabsControl_HeaderItemContainerStyle;
                break;
            case "DevExpress.UI.Xaml.Ribbon.Internal.RibbonTabsControl.ContextualHeaderItemTemplate":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.Internal.RibbonTabsControl");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ContextualHeaderItemTemplate", "Windows.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_538_RibbonTabsControl_ContextualHeaderItemTemplate;
                xamlMember.Setter = set_538_RibbonTabsControl_ContextualHeaderItemTemplate;
                break;
            case "DevExpress.UI.Xaml.Ribbon.Internal.RibbonTabsControl.ContextualHeaderItemContainerStyle":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.Internal.RibbonTabsControl");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ContextualHeaderItemContainerStyle", "Windows.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_539_RibbonTabsControl_ContextualHeaderItemContainerStyle;
                xamlMember.Setter = set_539_RibbonTabsControl_ContextualHeaderItemContainerStyle;
                break;
            case "DevExpress.UI.Xaml.Ribbon.Internal.RibbonTabsControl.BackstageView":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.Internal.RibbonTabsControl");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "BackstageView", "DevExpress.UI.Xaml.Ribbon.BackstageView");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Setter = set_540_RibbonTabsControl_BackstageView;
                break;
            case "DevExpress.UI.Xaml.Ribbon.Internal.RibbonTabsControl.SelectedTab":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.Internal.RibbonTabsControl");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "SelectedTab", "DevExpress.UI.Xaml.Ribbon.RibbonTabBase");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_541_RibbonTabsControl_SelectedTab;
                xamlMember.Setter = set_541_RibbonTabsControl_SelectedTab;
                break;
            case "DevExpress.UI.Xaml.Ribbon.Internal.RibbonTabsControl.Tabs":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Ribbon.Internal.RibbonTabsControl");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "Tabs", "DevExpress.UI.Xaml.Ribbon.TabHeaderItemCollection");
                xamlMember.Getter = get_542_RibbonTabsControl_Tabs;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.GalleryGroupContainerGenerator.GroupHeaderTemplate":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.GalleryGroupContainerGenerator");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "GroupHeaderTemplate", "Windows.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_543_GalleryGroupContainerGenerator_GroupHeaderTemplate;
                xamlMember.Setter = set_543_GalleryGroupContainerGenerator_GroupHeaderTemplate;
                break;
            case "DevExpress.UI.Xaml.GalleryGroupContainerGenerator.ItemContainerGenerator":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.GalleryGroupContainerGenerator");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ItemContainerGenerator", "DevExpress.UI.Xaml.GalleryItemContainerGeneratorBase");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_544_GalleryGroupContainerGenerator_ItemContainerGenerator;
                xamlMember.Setter = set_544_GalleryGroupContainerGenerator_ItemContainerGenerator;
                break;
            case "DevExpress.UI.Xaml.GalleryGroupContainerGenerator.GroupItemsPath":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.GalleryGroupContainerGenerator");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "GroupItemsPath", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_545_GalleryGroupContainerGenerator_GroupItemsPath;
                xamlMember.Setter = set_545_GalleryGroupContainerGenerator_GroupItemsPath;
                break;
            case "DevExpress.UI.Xaml.GalleryGroupContainerGenerator.MaxColCount":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.GalleryGroupContainerGenerator");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "MaxColCount", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_546_GalleryGroupContainerGenerator_MaxColCount;
                xamlMember.Setter = set_546_GalleryGroupContainerGenerator_MaxColCount;
                break;
            case "DevExpress.UI.Xaml.GalleryGroupContainerGenerator.ActualGroupItemsPath":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.GalleryGroupContainerGenerator");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ActualGroupItemsPath", "String");
                xamlMember.Getter = get_547_GalleryGroupContainerGenerator_ActualGroupItemsPath;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.GalleryItemGroup.Items":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.GalleryItemGroup");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "Items", "DevExpress.UI.Xaml.GalleryItemCollection");
                xamlMember.Getter = get_548_GalleryItemGroup_Items;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.GalleryItemGroup.Title":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.GalleryItemGroup");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "Title", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_549_GalleryItemGroup_Title;
                xamlMember.Setter = set_549_GalleryItemGroup_Title;
                break;
            case "DevExpress.UI.Xaml.Internal.DXExpander.Child":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Internal.DXExpander");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "Child", "Windows.UI.Xaml.UIElement");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_550_DXExpander_Child;
                xamlMember.Setter = set_550_DXExpander_Child;
                break;
            case "DevExpress.UI.Xaml.Internal.DXExpander.IsExpanded":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Internal.DXExpander");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "IsExpanded", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_551_DXExpander_IsExpanded;
                xamlMember.Setter = set_551_DXExpander_IsExpanded;
                break;
            case "DevExpress.UI.Xaml.Internal.DXExpander.ExpandStoryboard":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Internal.DXExpander");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ExpandStoryboard", "Windows.UI.Xaml.Media.Animation.Storyboard");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_552_DXExpander_ExpandStoryboard;
                xamlMember.Setter = set_552_DXExpander_ExpandStoryboard;
                break;
            case "DevExpress.UI.Xaml.Internal.DXExpander.CollapseStoryboard":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Internal.DXExpander");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "CollapseStoryboard", "Windows.UI.Xaml.Media.Animation.Storyboard");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_553_DXExpander_CollapseStoryboard;
                xamlMember.Setter = set_553_DXExpander_CollapseStoryboard;
                break;
            case "DevExpress.UI.Xaml.Internal.DXExpander.Location":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Internal.DXExpander");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "Location", "Windows.UI.Xaml.Controls.Primitives.EdgeTransitionLocation");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_554_DXExpander_Location;
                xamlMember.Setter = set_554_DXExpander_Location;
                break;
            case "DevExpress.UI.Xaml.Internal.DXExpander.AnimationDuration":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Internal.DXExpander");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "AnimationDuration", "TimeSpan");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_555_DXExpander_AnimationDuration;
                xamlMember.Setter = set_555_DXExpander_AnimationDuration;
                break;
            case "DevExpress.UI.Xaml.Internal.DXExpander.ClipToBounds":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Internal.DXExpander");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ClipToBounds", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_556_DXExpander_ClipToBounds;
                xamlMember.Setter = set_556_DXExpander_ClipToBounds;
                break;
            case "DevExpress.UI.Xaml.Internal.DXExpander.DefineLayoutFromLocation":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Internal.DXExpander");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "DefineLayoutFromLocation", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_557_DXExpander_DefineLayoutFromLocation;
                xamlMember.Setter = set_557_DXExpander_DefineLayoutFromLocation;
                break;
            case "DevExpress.UI.Xaml.Internal.DXExpander.Children":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Internal.DXExpander");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "Children", "Windows.UI.Xaml.Controls.UIElementCollection");
                xamlMember.Getter = get_558_DXExpander_Children;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Internal.DXExpander.IsLoaded":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Internal.DXExpander");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "IsLoaded", "Boolean");
                xamlMember.Getter = get_559_DXExpander_IsLoaded;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Internal.NestedMenuFlyoutControl.IsHeaderVisible":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Internal.NestedMenuFlyoutControl");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "IsHeaderVisible", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_560_NestedMenuFlyoutControl_IsHeaderVisible;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Internal.NestedMenuFlyoutControl.BackButtonEnabledMode":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Internal.NestedMenuFlyoutControl");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "BackButtonEnabledMode", "DevExpress.UI.Xaml.Internal.EnabledMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_561_NestedMenuFlyoutControl_BackButtonEnabledMode;
                xamlMember.Setter = set_561_NestedMenuFlyoutControl_BackButtonEnabledMode;
                break;
            case "DevExpress.UI.Xaml.Internal.NestedMenuFlyoutControl.HeaderEnabledMode":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Internal.NestedMenuFlyoutControl");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "HeaderEnabledMode", "DevExpress.UI.Xaml.Internal.EnabledMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_562_NestedMenuFlyoutControl_HeaderEnabledMode;
                xamlMember.Setter = set_562_NestedMenuFlyoutControl_HeaderEnabledMode;
                break;
            case "DevExpress.UI.Xaml.Internal.NestedMenuFlyoutControl.Orientation":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Internal.NestedMenuFlyoutControl");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "Orientation", "Windows.UI.Xaml.Controls.Orientation");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_563_NestedMenuFlyoutControl_Orientation;
                xamlMember.Setter = set_563_NestedMenuFlyoutControl_Orientation;
                break;
            case "DevExpress.UI.Xaml.Internal.NestedMenuFlyoutControl.HeaderContentTemplate":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Internal.NestedMenuFlyoutControl");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "HeaderContentTemplate", "Windows.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_564_NestedMenuFlyoutControl_HeaderContentTemplate;
                xamlMember.Setter = set_564_NestedMenuFlyoutControl_HeaderContentTemplate;
                break;
            case "DevExpress.UI.Xaml.Internal.NestedMenuFlyoutControl.HeaderContent":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Internal.NestedMenuFlyoutControl");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "HeaderContent", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_565_NestedMenuFlyoutControl_HeaderContent;
                xamlMember.Setter = set_565_NestedMenuFlyoutControl_HeaderContent;
                break;
            case "DevExpress.UI.Xaml.Internal.NestedMenuFlyoutControl.BackCommand":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Internal.NestedMenuFlyoutControl");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "BackCommand", "System.Windows.Input.ICommand");
                xamlMember.Getter = get_566_NestedMenuFlyoutControl_BackCommand;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Internal.NestedMenuFlyoutControl.PreviousFlyout":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Internal.NestedMenuFlyoutControl");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "PreviousFlyout", "DevExpress.UI.Xaml.Internal.NestedMenuFlyoutControl");
                xamlMember.Getter = get_567_NestedMenuFlyoutControl_PreviousFlyout;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Internal.MenuFlyoutControl.CloseOnTargetClick":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Internal.MenuFlyoutControl");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "CloseOnTargetClick", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_568_MenuFlyoutControl_CloseOnTargetClick;
                xamlMember.Setter = set_568_MenuFlyoutControl_CloseOnTargetClick;
                break;
            case "DevExpress.UI.Xaml.Internal.MenuFlyoutControl.IsLightDismissEnabled":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Internal.MenuFlyoutControl");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "IsLightDismissEnabled", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_569_MenuFlyoutControl_IsLightDismissEnabled;
                xamlMember.Setter = set_569_MenuFlyoutControl_IsLightDismissEnabled;
                break;
            case "DevExpress.UI.Xaml.Native.FlyoutBase.ActualSettings":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Native.FlyoutBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ActualSettings", "DevExpress.UI.Xaml.FlyoutSettingsBase");
                xamlMember.Getter = get_570_FlyoutBase_ActualSettings;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Native.FlyoutBase.IndicatorDirection":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Native.FlyoutBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "IndicatorDirection", "DevExpress.UI.Xaml.Native.IndicatorDirection");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_571_FlyoutBase_IndicatorDirection;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Native.FlyoutBase.AnimationDuration":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Native.FlyoutBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "AnimationDuration", "Windows.UI.Xaml.Duration");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_572_FlyoutBase_AnimationDuration;
                xamlMember.Setter = set_572_FlyoutBase_AnimationDuration;
                break;
            case "DevExpress.UI.Xaml.Native.FlyoutBase.Settings":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Native.FlyoutBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "Settings", "DevExpress.UI.Xaml.FlyoutSettingsBase");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_573_FlyoutBase_Settings;
                xamlMember.Setter = set_573_FlyoutBase_Settings;
                break;
            case "DevExpress.UI.Xaml.Native.FlyoutBase.ContainerStyle":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Native.FlyoutBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ContainerStyle", "Windows.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_574_FlyoutBase_ContainerStyle;
                xamlMember.Setter = set_574_FlyoutBase_ContainerStyle;
                break;
            case "DevExpress.UI.Xaml.Native.FlyoutBase.ActualIsOpen":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Native.FlyoutBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ActualIsOpen", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_575_FlyoutBase_ActualIsOpen;
                xamlMember.Setter = set_575_FlyoutBase_ActualIsOpen;
                break;
            case "DevExpress.UI.Xaml.Native.FlyoutBase.TargetBounds":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Native.FlyoutBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "TargetBounds", "Windows.Foundation.Rect");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_576_FlyoutBase_TargetBounds;
                xamlMember.Setter = set_576_FlyoutBase_TargetBounds;
                break;
            case "DevExpress.UI.Xaml.Native.FlyoutBase.AllowMoveAnimation":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Native.FlyoutBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "AllowMoveAnimation", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_577_FlyoutBase_AllowMoveAnimation;
                xamlMember.Setter = set_577_FlyoutBase_AllowMoveAnimation;
                break;
            case "DevExpress.UI.Xaml.Native.FlyoutBase.IsInitialized":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Native.FlyoutBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "IsInitialized", "Boolean");
                xamlMember.Getter = get_578_FlyoutBase_IsInitialized;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Native.FlyoutBase.CurrentAnimation":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Native.FlyoutBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "CurrentAnimation", "Windows.UI.Xaml.Media.Animation.Storyboard");
                xamlMember.Getter = get_579_FlyoutBase_CurrentAnimation;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Native.FlyoutBase.AnimationInProgress":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Native.FlyoutBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "AnimationInProgress", "Boolean");
                xamlMember.Getter = get_580_FlyoutBase_AnimationInProgress;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Native.FlyoutBase.AllowRecreateContent":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Native.FlyoutBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "AllowRecreateContent", "Boolean");
                xamlMember.Getter = get_581_FlyoutBase_AllowRecreateContent;
                xamlMember.Setter = set_581_FlyoutBase_AllowRecreateContent;
                break;
            case "DevExpress.UI.Xaml.Native.FlyoutBase.CloseCommand":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Native.FlyoutBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "CloseCommand", "System.Windows.Input.ICommand");
                xamlMember.Getter = get_582_FlyoutBase_CloseCommand;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Native.FlyoutBase.OpenCommand":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Native.FlyoutBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "OpenCommand", "System.Windows.Input.ICommand");
                xamlMember.Getter = get_583_FlyoutBase_OpenCommand;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Native.FlyoutBase.RenderGrid":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Native.FlyoutBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "RenderGrid", "Windows.UI.Xaml.FrameworkElement");
                xamlMember.Getter = get_584_FlyoutBase_RenderGrid;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Native.PopupBase.Child":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Native.PopupBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "Child", "Windows.UI.Xaml.FrameworkElement");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_585_PopupBase_Child;
                xamlMember.Setter = set_585_PopupBase_Child;
                break;
            case "DevExpress.UI.Xaml.Native.PopupBase.HorizontalOffset":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Native.PopupBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "HorizontalOffset", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_586_PopupBase_HorizontalOffset;
                xamlMember.Setter = set_586_PopupBase_HorizontalOffset;
                break;
            case "DevExpress.UI.Xaml.Native.PopupBase.VerticalOffset":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Native.PopupBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "VerticalOffset", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_587_PopupBase_VerticalOffset;
                xamlMember.Setter = set_587_PopupBase_VerticalOffset;
                break;
            case "DevExpress.UI.Xaml.Native.PopupBase.IsOpen":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Native.PopupBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "IsOpen", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_588_PopupBase_IsOpen;
                xamlMember.Setter = set_588_PopupBase_IsOpen;
                break;
            case "DevExpress.UI.Xaml.Native.PopupBase.Placement":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Native.PopupBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "Placement", "DevExpress.UI.Xaml.Native.PlacementMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_589_PopupBase_Placement;
                xamlMember.Setter = set_589_PopupBase_Placement;
                break;
            case "DevExpress.UI.Xaml.Native.PopupBase.PlacementTarget":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Native.PopupBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "PlacementTarget", "Windows.UI.Xaml.UIElement");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_590_PopupBase_PlacementTarget;
                xamlMember.Setter = set_590_PopupBase_PlacementTarget;
                break;
            case "DevExpress.UI.Xaml.Native.PopupBase.StaysOpen":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Native.PopupBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "StaysOpen", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_591_PopupBase_StaysOpen;
                xamlMember.Setter = set_591_PopupBase_StaysOpen;
                break;
            case "DevExpress.UI.Xaml.Native.PopupBase.AllowOutOfScreen":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Native.PopupBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "AllowOutOfScreen", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_592_PopupBase_AllowOutOfScreen;
                xamlMember.Setter = set_592_PopupBase_AllowOutOfScreen;
                break;
            case "DevExpress.UI.Xaml.Native.PopupBase.ChildContainer":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Native.PopupBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ChildContainer", "Windows.UI.Xaml.FrameworkElement");
                xamlMember.Getter = get_593_PopupBase_ChildContainer;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Native.PopupBase.IsLoaded":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Native.PopupBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "IsLoaded", "Boolean");
                xamlMember.Getter = get_594_PopupBase_IsLoaded;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Internal.SelectorControl.ItemsSource":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Internal.SelectorControl");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ItemsSource", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_595_SelectorControl_ItemsSource;
                xamlMember.Setter = set_595_SelectorControl_ItemsSource;
                break;
            case "DevExpress.UI.Xaml.Internal.SelectorControl.SelectedIndex":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Internal.SelectorControl");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "SelectedIndex", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_596_SelectorControl_SelectedIndex;
                xamlMember.Setter = set_596_SelectorControl_SelectedIndex;
                break;
            case "DevExpress.UI.Xaml.Internal.SelectorControl.SelectedItem":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Internal.SelectorControl");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "SelectedItem", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_597_SelectorControl_SelectedItem;
                xamlMember.Setter = set_597_SelectorControl_SelectedItem;
                break;
            case "DevExpress.UI.Xaml.Internal.SelectorControl.SelectionEmptyAction":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Internal.SelectorControl");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "SelectionEmptyAction", "DevExpress.UI.Xaml.Internal.SelectionEmptyAction");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_598_SelectorControl_SelectionEmptyAction;
                xamlMember.Setter = set_598_SelectorControl_SelectionEmptyAction;
                break;
            case "DevExpress.UI.Xaml.Internal.SelectorControl.CanSelect":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Internal.SelectorControl");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "CanSelect", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_599_SelectorControl_CanSelect;
                xamlMember.Setter = set_599_SelectorControl_CanSelect;
                break;
            case "DevExpress.UI.Xaml.Internal.SelectorControlBase.Orientation":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Internal.SelectorControlBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "Orientation", "Windows.UI.Xaml.Controls.Orientation");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_600_SelectorControlBase_Orientation;
                xamlMember.Setter = set_600_SelectorControlBase_Orientation;
                break;
            case "DevExpress.UI.Xaml.Internal.SelectorControlBase.ItemTemplate":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Internal.SelectorControlBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ItemTemplate", "Windows.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_601_SelectorControlBase_ItemTemplate;
                xamlMember.Setter = set_601_SelectorControlBase_ItemTemplate;
                break;
            case "DevExpress.UI.Xaml.Internal.SelectorControlBase.ItemTemplateSelector":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Internal.SelectorControlBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ItemTemplateSelector", "Windows.UI.Xaml.Controls.DataTemplateSelector");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_602_SelectorControlBase_ItemTemplateSelector;
                xamlMember.Setter = set_602_SelectorControlBase_ItemTemplateSelector;
                break;
            case "DevExpress.UI.Xaml.Internal.SelectorControlBase.ItemContainerStyle":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Internal.SelectorControlBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ItemContainerStyle", "Windows.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_603_SelectorControlBase_ItemContainerStyle;
                xamlMember.Setter = set_603_SelectorControlBase_ItemContainerStyle;
                break;
            case "DevExpress.UI.Xaml.Internal.SelectorControlBase.IsLockUpdate":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Internal.SelectorControlBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "IsLockUpdate", "Boolean");
                xamlMember.Getter = get_604_SelectorControlBase_IsLockUpdate;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Internal.SelectorControlBase.Items":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Internal.SelectorControlBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "Items", "DevExpress.UI.Xaml.Internal.SelectableItemCollection");
                xamlMember.Getter = get_605_SelectorControlBase_Items;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Internal.SelectorItemBase.IsSelected":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Internal.SelectorItemBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "IsSelected", "Boolean");
                xamlMember.Getter = get_606_SelectorItemBase_IsSelected;
                xamlMember.Setter = set_606_SelectorItemBase_IsSelected;
                break;
            case "DevExpress.UI.Xaml.Internal.TreeNavigator.RootNode":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Internal.TreeNavigator");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "RootNode", "DevExpress.UI.Xaml.Internal.TreeNavigatorNode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_607_TreeNavigator_RootNode;
                xamlMember.Setter = set_607_TreeNavigator_RootNode;
                break;
            case "DevExpress.UI.Xaml.Internal.TreeNavigator.CurrentNode":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Internal.TreeNavigator");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "CurrentNode", "DevExpress.UI.Xaml.Internal.TreeNavigatorNode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_608_TreeNavigator_CurrentNode;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Internal.TreeNavigator.RootHeaderContent":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Internal.TreeNavigator");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "RootHeaderContent", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_609_TreeNavigator_RootHeaderContent;
                xamlMember.Setter = set_609_TreeNavigator_RootHeaderContent;
                break;
            case "DevExpress.UI.Xaml.Internal.TreeNavigator.RootHeaderContentTemplate":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Internal.TreeNavigator");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "RootHeaderContentTemplate", "Windows.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_610_TreeNavigator_RootHeaderContentTemplate;
                xamlMember.Setter = set_610_TreeNavigator_RootHeaderContentTemplate;
                break;
            case "DevExpress.UI.Xaml.Internal.TreeNavigator.HeaderContent":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Internal.TreeNavigator");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "HeaderContent", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_611_TreeNavigator_HeaderContent;
                xamlMember.Setter = set_611_TreeNavigator_HeaderContent;
                break;
            case "DevExpress.UI.Xaml.Internal.TreeNavigator.HeaderContentTemplate":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Internal.TreeNavigator");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "HeaderContentTemplate", "Windows.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_612_TreeNavigator_HeaderContentTemplate;
                xamlMember.Setter = set_612_TreeNavigator_HeaderContentTemplate;
                break;
            case "DevExpress.UI.Xaml.Internal.TreeNavigator.HeaderPadding":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Internal.TreeNavigator");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "HeaderPadding", "Windows.UI.Xaml.Thickness");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_613_TreeNavigator_HeaderPadding;
                xamlMember.Setter = set_613_TreeNavigator_HeaderPadding;
                break;
            case "DevExpress.UI.Xaml.Internal.TreeNavigator.HeaderFontSize":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Internal.TreeNavigator");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "HeaderFontSize", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_614_TreeNavigator_HeaderFontSize;
                xamlMember.Setter = set_614_TreeNavigator_HeaderFontSize;
                break;
            case "DevExpress.UI.Xaml.Internal.TreeNavigator.NavigateToItemCommand":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Internal.TreeNavigator");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "NavigateToItemCommand", "System.Windows.Input.ICommand");
                xamlMember.Getter = get_615_TreeNavigator_NavigateToItemCommand;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Internal.TreeNavigator.NavigateUpperCommand":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Internal.TreeNavigator");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "NavigateUpperCommand", "System.Windows.Input.ICommand");
                xamlMember.Getter = get_616_TreeNavigator_NavigateUpperCommand;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Internal.TreeNavigatorItem.Node":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Internal.TreeNavigatorItem");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "Node", "DevExpress.UI.Xaml.Internal.TreeNavigatorNode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_617_TreeNavigatorItem_Node;
                xamlMember.Setter = set_617_TreeNavigatorItem_Node;
                break;
            case "DevExpress.UI.Xaml.Internal.TreeNavigatorItem.IconPadding":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Internal.TreeNavigatorItem");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "IconPadding", "Windows.UI.Xaml.Thickness");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_618_TreeNavigatorItem_IconPadding;
                xamlMember.Setter = set_618_TreeNavigatorItem_IconPadding;
                break;
            case "DevExpress.UI.Xaml.Internal.TreeNavigatorItem.ArrowGlyph":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Internal.TreeNavigatorItem");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ArrowGlyph", "Windows.UI.Xaml.Media.Geometry");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_619_TreeNavigatorItem_ArrowGlyph;
                xamlMember.Setter = set_619_TreeNavigatorItem_ArrowGlyph;
                break;
            case "DevExpress.UI.Xaml.Internal.TreeNavigatorItem.ArrowGlyphPressed":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Internal.TreeNavigatorItem");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ArrowGlyphPressed", "Windows.UI.Xaml.Media.Geometry");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_620_TreeNavigatorItem_ArrowGlyphPressed;
                xamlMember.Setter = set_620_TreeNavigatorItem_ArrowGlyphPressed;
                break;
            case "DevExpress.UI.Xaml.Internal.TreeNavigatorItem.IsSelected":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Internal.TreeNavigatorItem");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "IsSelected", "Boolean");
                xamlMember.Getter = get_621_TreeNavigatorItem_IsSelected;
                xamlMember.Setter = set_621_TreeNavigatorItem_IsSelected;
                break;
            case "DevExpress.UI.Xaml.Internal.TreeNavigatorNode.Parent":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Internal.TreeNavigatorNode");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "Parent", "DevExpress.UI.Xaml.Internal.TreeNavigatorNode");
                xamlMember.Getter = get_622_TreeNavigatorNode_Parent;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Internal.TreeNavigatorNode.IsRootNode":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Internal.TreeNavigatorNode");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "IsRootNode", "Boolean");
                xamlMember.Getter = get_623_TreeNavigatorNode_IsRootNode;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Internal.TreeNavigatorNode.IsSubNode":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Internal.TreeNavigatorNode");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "IsSubNode", "Boolean");
                xamlMember.Getter = get_624_TreeNavigatorNode_IsSubNode;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Internal.TreeNavigatorNode.Node":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Internal.TreeNavigatorNode");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "Node", "Object");
                xamlMember.Getter = get_625_TreeNavigatorNode_Node;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Internal.TreeNavigatorNode.Children":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Internal.TreeNavigatorNode");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "Children", "DevExpress.UI.Xaml.Internal.TreeNavigatorNodeCollection");
                xamlMember.Getter = get_626_TreeNavigatorNode_Children;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Internal.TreeNavigatorNode.HasChildren":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Internal.TreeNavigatorNode");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "HasChildren", "Boolean");
                xamlMember.Getter = get_627_TreeNavigatorNode_HasChildren;
                xamlMember.SetIsReadOnly();
                break;
            case "Telerik.UI.Xaml.Controls.Chart.ChartAnnotationLabelDefinition.Format":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.ChartAnnotationLabelDefinition");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "Format", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_628_ChartAnnotationLabelDefinition_Format;
                xamlMember.Setter = set_628_ChartAnnotationLabelDefinition_Format;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.ChartAnnotationLabelDefinition.Template":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.ChartAnnotationLabelDefinition");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "Template", "Windows.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_629_ChartAnnotationLabelDefinition_Template;
                xamlMember.Setter = set_629_ChartAnnotationLabelDefinition_Template;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.ChartAnnotationLabelDefinition.DefaultVisualStyle":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.ChartAnnotationLabelDefinition");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "DefaultVisualStyle", "Windows.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_630_ChartAnnotationLabelDefinition_DefaultVisualStyle;
                xamlMember.Setter = set_630_ChartAnnotationLabelDefinition_DefaultVisualStyle;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.ChartAnnotationLabelDefinition.Location":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.ChartAnnotationLabelDefinition");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "Location", "Telerik.UI.Xaml.Controls.Chart.ChartAnnotationLabelLocation");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_631_ChartAnnotationLabelDefinition_Location;
                xamlMember.Setter = set_631_ChartAnnotationLabelDefinition_Location;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.ChartAnnotationLabelDefinition.HorizontalAlignment":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.ChartAnnotationLabelDefinition");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "HorizontalAlignment", "Windows.UI.Xaml.HorizontalAlignment");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_632_ChartAnnotationLabelDefinition_HorizontalAlignment;
                xamlMember.Setter = set_632_ChartAnnotationLabelDefinition_HorizontalAlignment;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.ChartAnnotationLabelDefinition.VerticalAlignment":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.ChartAnnotationLabelDefinition");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "VerticalAlignment", "Windows.UI.Xaml.VerticalAlignment");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_633_ChartAnnotationLabelDefinition_VerticalAlignment;
                xamlMember.Setter = set_633_ChartAnnotationLabelDefinition_VerticalAlignment;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.ChartAnnotationLabelDefinition.HorizontalOffset":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.ChartAnnotationLabelDefinition");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "HorizontalOffset", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_634_ChartAnnotationLabelDefinition_HorizontalOffset;
                xamlMember.Setter = set_634_ChartAnnotationLabelDefinition_HorizontalOffset;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.ChartAnnotationLabelDefinition.VerticalOffset":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.ChartAnnotationLabelDefinition");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "VerticalOffset", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_635_ChartAnnotationLabelDefinition_VerticalOffset;
                xamlMember.Setter = set_635_ChartAnnotationLabelDefinition_VerticalOffset;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.ChartPalette.Name":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.ChartPalette");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "Name", "String");
                xamlMember.Getter = get_636_ChartPalette_Name;
                xamlMember.Setter = set_636_ChartPalette_Name;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.ChartPalette.FillEntries":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.ChartPalette");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "FillEntries", "Telerik.UI.Xaml.Controls.Chart.PaletteEntryCollection");
                xamlMember.Getter = get_637_ChartPalette_FillEntries;
                xamlMember.Setter = set_637_ChartPalette_FillEntries;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.PaletteEntryCollection.Brushes":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.PaletteEntryCollection");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "Brushes", "System.Collections.Generic.List`1<Windows.UI.Xaml.Media.Brush>");
                xamlMember.Getter = get_638_PaletteEntryCollection_Brushes;
                xamlMember.SetIsReadOnly();
                break;
            case "Telerik.UI.Xaml.Controls.Chart.ChartPalette.SpecialFillEntries":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.ChartPalette");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "SpecialFillEntries", "Telerik.UI.Xaml.Controls.Chart.PaletteEntryCollection");
                xamlMember.Getter = get_639_ChartPalette_SpecialFillEntries;
                xamlMember.Setter = set_639_ChartPalette_SpecialFillEntries;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.ChartPalette.StrokeEntries":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.ChartPalette");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "StrokeEntries", "Telerik.UI.Xaml.Controls.Chart.PaletteEntryCollection");
                xamlMember.Getter = get_640_ChartPalette_StrokeEntries;
                xamlMember.Setter = set_640_ChartPalette_StrokeEntries;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.ChartPalette.SpecialStrokeEntries":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.ChartPalette");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "SpecialStrokeEntries", "Telerik.UI.Xaml.Controls.Chart.PaletteEntryCollection");
                xamlMember.Getter = get_641_ChartPalette_SpecialStrokeEntries;
                xamlMember.Setter = set_641_ChartPalette_SpecialStrokeEntries;
                break;
            case "Telerik.UI.Xaml.Controls.Data.HexView.HexLayoutDefinitionBase.Orientation":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Data.HexView.HexLayoutDefinitionBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "Orientation", "Windows.UI.Xaml.Controls.Orientation");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_642_HexLayoutDefinitionBase_Orientation;
                xamlMember.Setter = set_642_HexLayoutDefinitionBase_Orientation;
                break;
            case "Telerik.UI.Xaml.Controls.Data.HexView.HexLayoutDefinitionBase.ItemLength":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Data.HexView.HexLayoutDefinitionBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ItemLength", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_643_HexLayoutDefinitionBase_ItemLength;
                xamlMember.Setter = set_643_HexLayoutDefinitionBase_ItemLength;
                break;
            case "Telerik.UI.Xaml.Controls.Data.HexView.HexLayoutDefinitionBase.ItemsSpacing":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Data.HexView.HexLayoutDefinitionBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ItemsSpacing", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_644_HexLayoutDefinitionBase_ItemsSpacing;
                xamlMember.Setter = set_644_HexLayoutDefinitionBase_ItemsSpacing;
                break;
            case "Telerik.UI.Xaml.Controls.Data.HexView.HexLayoutDefinitionBase.ViewPortExtension":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Data.HexView.HexLayoutDefinitionBase");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ViewPortExtension", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_645_HexLayoutDefinitionBase_ViewPortExtension;
                xamlMember.Setter = set_645_HexLayoutDefinitionBase_ViewPortExtension;
                break;
            case "Telerik.UI.Xaml.Controls.Input.HighlightStyle.FontFamily":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Input.HighlightStyle");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "FontFamily", "Windows.UI.Xaml.Media.FontFamily");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_646_HighlightStyle_FontFamily;
                xamlMember.Setter = set_646_HighlightStyle_FontFamily;
                break;
            case "Telerik.UI.Xaml.Controls.Input.HighlightStyle.FontWeight":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Input.HighlightStyle");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "FontWeight", "Telerik.UI.Xaml.Controls.Input.FontWeightName");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_647_HighlightStyle_FontWeight;
                xamlMember.Setter = set_647_HighlightStyle_FontWeight;
                break;
            case "Telerik.UI.Xaml.Controls.Input.HighlightStyle.FontStyle":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Input.HighlightStyle");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "FontStyle", "Windows.UI.Text.FontStyle");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_648_HighlightStyle_FontStyle;
                xamlMember.Setter = set_648_HighlightStyle_FontStyle;
                break;
            case "Telerik.UI.Xaml.Controls.Input.HighlightStyle.Foreground":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Input.HighlightStyle");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "Foreground", "Windows.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_649_HighlightStyle_Foreground;
                xamlMember.Setter = set_649_HighlightStyle_Foreground;
                break;
            case "Telerik.UI.Xaml.Controls.Input.HighlightStyle.FontSize":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Input.HighlightStyle");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "FontSize", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_650_HighlightStyle_FontSize;
                xamlMember.Setter = set_650_HighlightStyle_FontSize;
                break;
            case "Telerik.UI.Xaml.Controls.Input.CalendarCellStyle.ContentStyle":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Input.CalendarCellStyle");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ContentStyle", "Windows.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_651_CalendarCellStyle_ContentStyle;
                xamlMember.Setter = set_651_CalendarCellStyle_ContentStyle;
                break;
            case "Telerik.UI.Xaml.Controls.Input.CalendarCellStyle.DecorationStyle":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Input.CalendarCellStyle");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "DecorationStyle", "Windows.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_652_CalendarCellStyle_DecorationStyle;
                xamlMember.Setter = set_652_CalendarCellStyle_DecorationStyle;
                break;
            case "Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu.Items":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "Items", "System.Collections.ObjectModel.ObservableCollection`1<Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem>");
                xamlMember.Getter = get_653_RadRadialMenu_Items;
                xamlMember.SetIsReadOnly();
                break;
            case "Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem.ChildItems":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ChildItems", "System.Collections.ObjectModel.ObservableCollection`1<Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem>");
                xamlMember.Getter = get_654_RadialMenuItem_ChildItems;
                xamlMember.SetIsReadOnly();
                break;
            case "Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem.ToolTipContent":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ToolTipContent", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_655_RadialMenuItem_ToolTipContent;
                xamlMember.Setter = set_655_RadialMenuItem_ToolTipContent;
                break;
            case "Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem.CommandParameter":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "CommandParameter", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_656_RadialMenuItem_CommandParameter;
                xamlMember.Setter = set_656_RadialMenuItem_CommandParameter;
                break;
            case "Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem.IsEnabled":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "IsEnabled", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_657_RadialMenuItem_IsEnabled;
                xamlMember.Setter = set_657_RadialMenuItem_IsEnabled;
                break;
            case "Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem.Command":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "Command", "System.Windows.Input.ICommand");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_658_RadialMenuItem_Command;
                xamlMember.Setter = set_658_RadialMenuItem_Command;
                break;
            case "Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem.ParentItem":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ParentItem", "Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem");
                xamlMember.Getter = get_659_RadialMenuItem_ParentItem;
                xamlMember.SetIsReadOnly();
                break;
            case "Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem.IsSelected":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "IsSelected", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_660_RadialMenuItem_IsSelected;
                xamlMember.Setter = set_660_RadialMenuItem_IsSelected;
                break;
            case "Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem.GroupName":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "GroupName", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_661_RadialMenuItem_GroupName;
                xamlMember.Setter = set_661_RadialMenuItem_GroupName;
                break;
            case "Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem.Selectable":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "Selectable", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_662_RadialMenuItem_Selectable;
                xamlMember.Setter = set_662_RadialMenuItem_Selectable;
                break;
            case "Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem.Deselectable":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "Deselectable", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_663_RadialMenuItem_Deselectable;
                xamlMember.Setter = set_663_RadialMenuItem_Deselectable;
                break;
            case "Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem.Header":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "Header", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_664_RadialMenuItem_Header;
                xamlMember.Setter = set_664_RadialMenuItem_Header;
                break;
            case "Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem.IconContent":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "IconContent", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_665_RadialMenuItem_IconContent;
                xamlMember.Setter = set_665_RadialMenuItem_IconContent;
                break;
            case "Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem.ContentSectorBackground":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ContentSectorBackground", "Windows.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_666_RadialMenuItem_ContentSectorBackground;
                xamlMember.Setter = set_666_RadialMenuItem_ContentSectorBackground;
                break;
            case "Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu.ShowToolTip":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ShowToolTip", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_667_RadRadialMenu_ShowToolTip;
                xamlMember.Setter = set_667_RadRadialMenu_ShowToolTip;
                break;
            case "Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu.IsOpen":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "IsOpen", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_668_RadRadialMenu_IsOpen;
                xamlMember.Setter = set_668_RadRadialMenu_IsOpen;
                break;
            case "Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu.StartAngle":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "StartAngle", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_669_RadRadialMenu_StartAngle;
                xamlMember.Setter = set_669_RadRadialMenu_StartAngle;
                break;
            case "Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu.InnerNavigationRadiusFactor":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "InnerNavigationRadiusFactor", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_670_RadRadialMenu_InnerNavigationRadiusFactor;
                xamlMember.Setter = set_670_RadRadialMenu_InnerNavigationRadiusFactor;
                break;
            case "Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu.InnerRadiusFactor":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "InnerRadiusFactor", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_671_RadRadialMenu_InnerRadiusFactor;
                xamlMember.Setter = set_671_RadRadialMenu_InnerRadiusFactor;
                break;
            case "Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu.OuterRadiusFactor":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "OuterRadiusFactor", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_672_RadRadialMenu_OuterRadiusFactor;
                xamlMember.Setter = set_672_RadRadialMenu_OuterRadiusFactor;
                break;
            case "Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu.ContentMenuBackgroundStyle":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "ContentMenuBackgroundStyle", "Windows.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_673_RadRadialMenu_ContentMenuBackgroundStyle;
                xamlMember.Setter = set_673_RadRadialMenu_ContentMenuBackgroundStyle;
                break;
            case "Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu.NavigationMenuBackgroundStyle":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "NavigationMenuBackgroundStyle", "Windows.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_674_RadRadialMenu_NavigationMenuBackgroundStyle;
                xamlMember.Setter = set_674_RadRadialMenu_NavigationMenuBackgroundStyle;
                break;
            case "Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu.CommandService":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "CommandService", "Telerik.UI.Xaml.Controls.Primitives.Menu.CommandService");
                xamlMember.Getter = get_675_RadRadialMenu_CommandService;
                xamlMember.SetIsReadOnly();
                break;
            case "Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu.Commands":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "Commands", "Telerik.UI.Xaml.Controls.Primitives.CommandCollection`1<Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu>");
                xamlMember.Getter = get_676_RadRadialMenu_Commands;
                xamlMember.SetIsReadOnly();
                break;
            case "Telerik.UI.Xaml.Controls.Primitives.AttachableObject`1<Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu>.Owner":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Primitives.AttachableObject`1<Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu>");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "Owner", "Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu");
                xamlMember.Getter = get_677_AttachableObject_Owner;
                xamlMember.SetIsReadOnly();
                break;
            case "Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu.TargetElement":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "TargetElement", "Windows.UI.Xaml.FrameworkElement");
                xamlMember.Getter = get_678_RadRadialMenu_TargetElement;
                xamlMember.SetIsReadOnly();
                break;
            case "Telerik.UI.Xaml.Controls.Primitives.RadialMenuTriggerBehavior.AttachTriggers":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Primitives.RadialMenuTriggerBehavior");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "AttachTriggers", "Telerik.UI.Xaml.Controls.Primitives.RadialMenuAttachTriggers");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_679_RadialMenuTriggerBehavior_AttachTriggers;
                xamlMember.Setter = set_679_RadialMenuTriggerBehavior_AttachTriggers;
                break;
            case "Telerik.UI.Xaml.Controls.Primitives.AttachableObject`1<Windows.UI.Xaml.FrameworkElement>.Owner":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Primitives.AttachableObject`1<Windows.UI.Xaml.FrameworkElement>");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "Owner", "Windows.UI.Xaml.FrameworkElement");
                xamlMember.Getter = get_680_AttachableObject_Owner;
                xamlMember.SetIsReadOnly();
                break;
            case "Telerik.UI.Xaml.Controls.Primitives.BusyIndicator.BusyIndicatorAnimationAdapter.Animation":
                userType = (global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Primitives.BusyIndicator.BusyIndicatorAnimationAdapter");
                xamlMember = new global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlMember(this, "Animation", "Windows.UI.Xaml.Media.Animation.Storyboard");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_681_BusyIndicatorAnimationAdapter_Animation;
                xamlMember.Setter = set_681_BusyIndicatorAnimationAdapter_Animation;
                break;
            }
            return xamlMember;
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.16.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlSystemBaseType : global::Windows.UI.Xaml.Markup.IXamlType
    {
        string _fullName;
        global::System.Type _underlyingType;

        public XamlSystemBaseType(string fullName, global::System.Type underlyingType)
        {
            _fullName = fullName;
            _underlyingType = underlyingType;
        }

        public string FullName { get { return _fullName; } }

        public global::System.Type UnderlyingType
        {
            get
            {
                return _underlyingType;
            }
        }

        virtual public global::Windows.UI.Xaml.Markup.IXamlType BaseType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlMember ContentProperty { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name) { throw new global::System.NotImplementedException(); }
        virtual public bool IsArray { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsCollection { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsConstructible { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsDictionary { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsMarkupExtension { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsBindable { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsReturnTypeStub { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsLocalType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlType ItemType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlType KeyType { get { throw new global::System.NotImplementedException(); } }
        virtual public object ActivateInstance() { throw new global::System.NotImplementedException(); }
        virtual public void AddToMap(object instance, object key, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void AddToVector(object instance, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void RunInitializer()   { throw new global::System.NotImplementedException(); }
        virtual public object CreateFromString(string input)   { throw new global::System.NotImplementedException(); }
    }
    
    internal delegate object Activator();
    internal delegate void AddToCollection(object instance, object item);
    internal delegate void AddToDictionary(object instance, object key, object item);
    internal delegate object CreateFromStringMethod(string args);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.16.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlUserType : global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlSystemBaseType
    {
        global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlTypeInfoProvider _provider;
        global::Windows.UI.Xaml.Markup.IXamlType _baseType;
        bool _isArray;
        bool _isMarkupExtension;
        bool _isBindable;
        bool _isReturnTypeStub;
        bool _isLocalType;

        string _contentPropertyName;
        string _itemTypeName;
        string _keyTypeName;
        global::System.Collections.Generic.Dictionary<string, string> _memberNames;
        global::System.Collections.Generic.Dictionary<string, object> _enumValues;

        public XamlUserType(global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlTypeInfoProvider provider, string fullName, global::System.Type fullType, global::Windows.UI.Xaml.Markup.IXamlType baseType)
            :base(fullName, fullType)
        {
            _provider = provider;
            _baseType = baseType;
        }

        // --- Interface methods ----

        override public global::Windows.UI.Xaml.Markup.IXamlType BaseType { get { return _baseType; } }
        override public bool IsArray { get { return _isArray; } }
        override public bool IsCollection { get { return (CollectionAdd != null); } }
        override public bool IsConstructible { get { return (Activator != null); } }
        override public bool IsDictionary { get { return (DictionaryAdd != null); } }
        override public bool IsMarkupExtension { get { return _isMarkupExtension; } }
        override public bool IsBindable { get { return _isBindable; } }
        override public bool IsReturnTypeStub { get { return _isReturnTypeStub; } }
        override public bool IsLocalType { get { return _isLocalType; } }

        override public global::Windows.UI.Xaml.Markup.IXamlMember ContentProperty
        {
            get { return _provider.GetMemberByLongName(_contentPropertyName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlType ItemType
        {
            get { return _provider.GetXamlTypeByName(_itemTypeName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlType KeyType
        {
            get { return _provider.GetXamlTypeByName(_keyTypeName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name)
        {
            if (_memberNames == null)
            {
                return null;
            }
            string longName;
            if (_memberNames.TryGetValue(name, out longName))
            {
                return _provider.GetMemberByLongName(longName);
            }
            return null;
        }

        override public object ActivateInstance()
        {
            return Activator(); 
        }

        override public void AddToMap(object instance, object key, object item) 
        {
            DictionaryAdd(instance, key, item);
        }

        override public void AddToVector(object instance, object item)
        {
            CollectionAdd(instance, item);
        }

        override public void RunInitializer() 
        {
            global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(UnderlyingType.TypeHandle);
        }

        override public object CreateFromString(string input)
        {
            if (CreateFromStringMethod != null)
            {
                return this.CreateFromStringMethod(input);
            }
            else if (_enumValues != null)
            {
                int value = 0;

                string[] valueParts = input.Split(',');

                foreach (string valuePart in valueParts) 
                {
                    object partValue;
                    int enumFieldValue = 0;
                    try
                    {
                        if (_enumValues.TryGetValue(valuePart.Trim(), out partValue))
                        {
                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                        }
                        else
                        {
                            try
                            {
                                enumFieldValue = global::System.Convert.ToInt32(valuePart.Trim());
                            }
                            catch( global::System.FormatException )
                            {
                                foreach( string key in _enumValues.Keys )
                                {
                                    if( string.Compare(valuePart.Trim(), key, global::System.StringComparison.OrdinalIgnoreCase) == 0 )
                                    {
                                        if( _enumValues.TryGetValue(key.Trim(), out partValue) )
                                        {
                                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                                            break;
                                        }
                                    }
                                }
                            }
                        }
                        value |= enumFieldValue; 
                    }
                    catch( global::System.FormatException )
                    {
                        throw new global::System.ArgumentException(input, FullName);
                    }
                }

                return value; 
            }
            throw new global::System.ArgumentException(input, FullName);
        }

        // --- End of Interface methods

        public Activator Activator { get; set; }
        public AddToCollection CollectionAdd { get; set; }
        public AddToDictionary DictionaryAdd { get; set; }
        public CreateFromStringMethod CreateFromStringMethod {get; set; }

        public void SetContentPropertyName(string contentPropertyName)
        {
            _contentPropertyName = contentPropertyName;
        }

        public void SetIsArray()
        {
            _isArray = true; 
        }

        public void SetIsMarkupExtension()
        {
            _isMarkupExtension = true;
        }

        public void SetIsBindable()
        {
            _isBindable = true;
        }

        public void SetIsReturnTypeStub()
        {
            _isReturnTypeStub = true;
        }

        public void SetIsLocalType()
        {
            _isLocalType = true;
        }

        public void SetItemTypeName(string itemTypeName)
        {
            _itemTypeName = itemTypeName;
        }

        public void SetKeyTypeName(string keyTypeName)
        {
            _keyTypeName = keyTypeName;
        }

        public void AddMemberName(string shortName)
        {
            if(_memberNames == null)
            {
                _memberNames =  new global::System.Collections.Generic.Dictionary<string,string>();
            }
            _memberNames.Add(shortName, FullName + "." + shortName);
        }

        public void AddEnumValue(string name, object value)
        {
            if (_enumValues == null)
            {
                _enumValues = new global::System.Collections.Generic.Dictionary<string, object>();
            }
            _enumValues.Add(name, value);
        }
    }

    internal delegate object Getter(object instance);
    internal delegate void Setter(object instance, object value);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.16.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlMember : global::Windows.UI.Xaml.Markup.IXamlMember
    {
        global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlTypeInfoProvider _provider;
        string _name;
        bool _isAttachable;
        bool _isDependencyProperty;
        bool _isReadOnly;

        string _typeName;
        string _targetTypeName;

        public XamlMember(global::RaspberryPiV3.RaspberryPiV3_XamlTypeInfo.XamlTypeInfoProvider provider, string name, string typeName)
        {
            _name = name;
            _typeName = typeName;
            _provider = provider;
        }

        public string Name { get { return _name; } }

        public global::Windows.UI.Xaml.Markup.IXamlType Type
        {
            get { return _provider.GetXamlTypeByName(_typeName); }
        }

        public void SetTargetTypeName(string targetTypeName)
        {
            _targetTypeName = targetTypeName;
        }
        public global::Windows.UI.Xaml.Markup.IXamlType TargetType
        {
            get { return _provider.GetXamlTypeByName(_targetTypeName); }
        }

        public void SetIsAttachable() { _isAttachable = true; }
        public bool IsAttachable { get { return _isAttachable; } }

        public void SetIsDependencyProperty() { _isDependencyProperty = true; }
        public bool IsDependencyProperty { get { return _isDependencyProperty; } }

        public void SetIsReadOnly() { _isReadOnly = true; }
        public bool IsReadOnly { get { return _isReadOnly; } }

        public Getter Getter { get; set; }
        public object GetValue(object instance)
        {
            if (Getter != null)
                return Getter(instance);
            else
                throw new global::System.InvalidOperationException("GetValue");
        }

        public Setter Setter { get; set; }
        public void SetValue(object instance, object value)
        {
            if (Setter != null)
                Setter(instance, value);
            else
                throw new global::System.InvalidOperationException("SetValue");
        }
    }
}

